{
  
    
        "post0": {
            "title": "P4-M 4/24 Big Idea 3",
            "content": "Google Slides . Slides | . Objectives . Master the concepts of iteration, list, 2d-arrays, Dictonaries, and APIs | . Vocab . Iteration: A process that repates itself | Array: Sometimes called a list, can keep strings and intergers inside it | Mutable: the ability to be changed or modified | Inseration: Inserting a new value into a Dictionary | Deletion: Deleting a value inside of a Dictionary | Key: A Singular identifier that is associated with a certin value inside a Dictionary | API: Application programming interface, an external program that can be accessed for data | . Q1: Basic List/Array Manipulation . - What will be the output of this code segment? . list = [&quot;hat&quot;, &quot;shoes&quot;, &quot;shirt&quot;, &quot;pants&quot;] list.append(&quot;Hi&quot;) list.remove(&quot;hat&quot;) list.reverse() print(list) . [&#39;Hi&#39;, &#39;pants&#39;, &#39;shirt&#39;, &#39;shoes&#39;] . Q2: Dictionaries . . Q3: Iteration . Show Robot Game on the Website | Ask question about it | . . Q4: API . Show Pizza Game on websie | Ask question about it | . . Hacks . Answer all questions | Make | .",
            "url": "https://f1nnc.github.io/mysite/2023/04/28/EOYPLAYGROUND.html",
            "relUrl": "/2023/04/28/EOYPLAYGROUND.html",
            "date": " • Apr 28, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "P4-M 4/28 Binary Lesson HACKS",
            "content": "Lesson Note Taker . Fill in the blanks below during the binary presentation. You can visit our website here!^ Due to last minute deployment issues, may need to run a local server . git clone https://github.com/TheoH32/Runtime_Terror.git | run: | bundle install | bundle exec jekyll serve | . Binary . Binary is a base 2 number system. | 0 represents 1 and 1 represents 2. | A byte is the minimum unit of binary information stored in a computer system. | Boolean Expressions . A boolean experssion is a logical statement that is either TRUE or FALSE and compares data. | Truth Tables . The logical operations shown in truth tables are and, or, not, and xor. | # AND 5 &gt; 3 and 5 == 3 + 2 . True . 5 &lt; 3 and 5 == 5 . False . 5 == 5 or 5 != 5 . True . 5 &lt; 3 or 5 != 5 . False . Real Life Example using Boolean Expressions . Try changing the conditions and/or the logical operation below! Run the code to see if you are eligible to vote. . age = 18 citizen = True if age &gt;= 18 and citizen: print(&quot;You are eligible to vote.&quot;) else: print(&quot;You are not eligible to vote.&quot;) . You are eligible to vote. . Binary Conversions . Binary to Decimal . We can count in binary by using powers of 2. | In binary, we read from right to left. | 0111 has a value of 7. | Binary Search . For a binary search, the list must be sorted. | In a binary search, computers start at the front (front,middle,end)/ | The number of steps required in a binary search follows the equation: log2(n)+1. | Binary searches also work with a list of strings. We can sort them alphabetically. | Binary searches can be represented in Tree diagrams. | Hacks . You will NOT be awarded any points for sections that are INCOMPLETE . Note Taker . Fill in all of the blanks above. | Lesson Quiz . Complete the lesson quiz | SCREENSHOT SCORE and paste it here (or paste screenshot with submission)&#39; ### Binary Game . | Complete the Binary game and reach a minimum score of 10! . | SCREENSHOT SCORE and paste it here (or with submission) | Binary Conversions Practice . How do you convert the decimal number &quot;17&quot; into binary? Answer: Divide 17 by 2 repeatedly and write the remainders in reverse order: 10001. . | How do you convert the binary number 1010 into decimal? Answer: Multiply each digit by its corresponding power of 2 and sum the results: 10. . | How do you convert the decimal number &quot;122&quot; into hexadecimal? Answer: Divide 122 by 16 repeatedly and write the remainders in reverse order: 7A. . | How do you convert the hexadecimal number &quot;09&quot; into binary? Answer: Replace each digit with its 4-bit binary equivalent: 1001. . | Binary Search Questions . Make a binary search tree of different the list [1,2,4,15,25,30,31] | Put this list of strings in a order that can be used for binary search [&quot;Donut”,&quot;Cake”,&quot;Soda”,&quot;Banana”,&quot;Fruit”] | Explain why Binary Search is more efficient than Sequential Search. Binary search is more efficient than sequential search because it has a time complexity of O(log n) whereas sequential search has a time complexity of O(n). | . | class Node: def __init__(self, val): self.left = None self.right = None self.val = val def insert(root, val): if not root: return Node(val) elif root.val &lt; val: root.right = insert(root.right, val) else: root.left = insert(root.left, val) return root def inorder(root): if root: inorder(root.left) print(root.val) inorder(root.right) # Create a binary search tree from a list list1 = [1, 2, 4, 15, 25, 30, 31] root = None for i in list1: root = insert(root, i) # Print the inorder traversal of the binary search tree inorder(root) # Given list of strings list2 = [&quot;Donut&quot;, &quot;Cake&quot;, &quot;Soda&quot;, &quot;Banana&quot;, &quot;Fruit&quot;] # Sort the list alphabetically list2.sort() # Print the sorted list print(list2) . 1 2 4 15 25 30 31 [&#39;Banana&#39;, &#39;Cake&#39;, &#39;Donut&#39;, &#39;Fruit&#39;, &#39;Soda&#39;] . Extra Credit: . Translate the binary number, 1001010, into octal (base 8). SHOW YOUR WORK AND EXPLAIN YOUR THINKING. OR | write the best rap line (determined during the lesson by group) | . Hacks Scoring . Hack Comments Grade . Note Taker | fill in the blanks above | 0.1 | . Lesson Quiz | under 100% = 0.1 only | 0.2 | . Binary Game | must score at least 10 points | 0.2 | . Binary Conversions Practice | if incorrect= 0.2 awarded | 0.2 | . Binary Search Questions | if incorrect= 0.2 awarded | 0.2 | . Extra Credit | MUST SHOW WORK | 0.1 | . Total | expected= 0.9/1 | 1/1 | .",
            "url": "https://f1nnc.github.io/mysite/binary/lesson",
            "relUrl": "/binary/lesson",
            "date": " • Apr 28, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Data Structures Guide",
            "content": "Objectives: . Students will be able to... . Understand the concept of data structures, including lists, dictionaries, and 2D arrays | Learn how to iterate through data structures using loops | Able to visualize data structures and iteration processes | Able to apply their knowledge to build simulations/interactions using lists and iteration | Learn how to store list and dictionary content in databases | . Lesson 1: Lists and Iteration . Lists (Ethan) . Lists are a type of data structure that can store multiple items in a single variable | Lists are defined using square brackets [ ] | Each item in a list is separated by a comma | Lists are indexed, starting at 0 | . fruits = [&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;, &quot;grape&quot;] print(fruits) . [&#39;apple&#39;, &#39;banana&#39;, &#39;orange&#39;, &#39;grape&#39;] . Accessing Lists . To access individual items in a list, we use the index of the item. | Python uses zero-based indexing, which means the first item in the list has an index of 0, the second item has an index of 1, and so on. | . print(fruits[0]) print(fruits[2]) . apple orange . Slicing Lists . We can also extract a specific portion of a list using slicing. | We use the colon : operator to specify a range of indices to include. | . print(fruits[0:2]) . [&#39;apple&#39;, &#39;banana&#39;] . Modifying List Items . Lists are mutable, meaning that we can change the value of an item in a list. | To change the value of an item in a list, we can use the indexing operator (square brackets) to access the item and then assign a new value to it. | . fruits[2] = &quot;pear&quot; print(fruits) . [&#39;apple&#39;, &#39;banana&#39;, &#39;pear&#39;, &#39;grape&#39;, &#39;kiwi&#39;] . Adding and Removing List Items . Adding . Use the append() method to add an item to the end of a list. | . fruits.append(&quot;kiwi&quot;) # Adds &#39;kiwi&#39; to the end of the list print(fruits) . [&#39;apple&#39;, &#39;banana&#39;, &#39;pear&#39;, &#39;grape&#39;, &#39;kiwi&#39;, &#39;kiwi&#39;] . Use the insert() method to add an item to a specific index in a list. | . fruits.insert(1, &quot;peach&quot;) # Inserts &quot;peach&quot; at index 1 print(fruits) . [&#39;apple&#39;, &#39;peach&#39;, &#39;banana&#39;, &#39;pear&#39;, &#39;grape&#39;, &#39;kiwi&#39;, &#39;kiwi&#39;] . Removing . Use the remove() method to remove the first occurrence of an item from a list. | . fruits.remove(&#39;pear&#39;) # Removes the first occurrence of &#39;pear&#39; print(fruits) . [&#39;apple&#39;, &#39;peach&#39;, &#39;banana&#39;, &#39;grape&#39;, &#39;kiwi&#39;, &#39;kiwi&#39;] . Use the pop() method to remove the item at a specific index from a list. | . fruits.pop(2) # Removes the item at index 2 print(fruits) . [&#39;apple&#39;, &#39;peach&#39;, &#39;grape&#39;, &#39;kiwi&#39;, &#39;kiwi&#39;] . Use the clear() method to remove all items from a list. | . fruits.clear() # Removes all items from the list print(fruits) . [] . Function Explanation . InsertToList . This function is designed to insert a new item into a list at a specific index. | It first retrieves the new item to be added and the index at which to add it from the HTML document. | It checks if the retrieved values are both valid integers and if the index is within the range of the list. | If the values are valid, the function uses the splice() method to insert the new item into the list at the specified index. | In JavaScript, the splice() method modifies an array by removing, replacing, or adding elements. | The splice() method takes three arguments:the index at which to start changing the list, the number of elements to remove, and the new item to add. - The item is inserted without removing any elements, so we pass 0 as the second argument. | Finally, the function calls the visualizeList() function to display the updated list on the web page. | . // Get the value of the new item and the index where it should be inserted function insertToList() { let newItem = parseInt(document.getElementById(&quot;newItem&quot;).value); let index = parseInt(document.getElementById(&quot;index&quot;).value); if (!isNaN(newItem) &amp;&amp; !isNaN(index) &amp;&amp; index &gt;= 0 &amp;&amp; index &lt;= myList.length) { // splice() method to insert the new item into the list myList.splice(index - 1, 0, newItem); // Call the visualizeList() function to update the display of the list visualizeList(); } } . SortList . In JavaScript, sort() is a built-in method used to sort the elements of an array in place. The default sort order is ascending, but you can also specify a descending sort order. | In this case, the function sorts myList in ascending order based on their numerical value. | . // Sort myList array in ascending order function sortList() { // The function a - b is used, which subtracts the second element b from the first element a. // If the result is negative, a is sorted before b. If the result is positive, b is sorted before a. If the result is zero, the order of the elements is unchanged. myList.sort((a, b) =&gt; a - b); visualizeList(); } . Applications of Lists . Data processing: Lists are commonly used to store and process large amounts of data. In data analysis and machine learning, lists are often used to store datasets. . | Gaming: Lists are used extensively in game development to store game objects, player statistics, and game maps. . | Finance: Lists are used in finance to store and process financial data, such as stock prices and market trends. The data from these lists can also be used to calculate financial metrics and to create financial models. . | . Hacks (0.3) . Make your own list and manipulate it via accessing specific elements, adding or removing elements, etc. | Extra: Make an interactable visualization that can manipulate elements in a list such as the one demonstrated in our flask repository | . my_team = [&quot;Jake&quot;, &quot;Finn&quot;, &quot;Kush&quot;, &quot;James&quot;, &quot;Gene&quot;, &quot;Zeen&quot;, &quot;Ediwn&quot;] my_team.append(&quot;Luka&quot;) my_team.remove(&quot;Jake&quot;) print(my_team) . [&#39;Finn&#39;, &#39;Kush&#39;, &#39;James&#39;, &#39;Gene&#39;, &#39;Zeen&#39;, &#39;Ediwn&#39;, &#39;Luka&#39;] . Iteration (Alex) . What is iteration? . In programming, iteration refers to the process of repeating a set of instructions until a specific condition is met. This can be achieved using loop structures like for loops and while loops. | . For Loops . A for loop is used to iterate over a sequence (e.g. a list, tuple, string, etc.) and execute a set of statements for each item in the sequence. Here&#39;s the basic syntax of a for loop in Python: | . sequence = [1,2,3,4,5,6,7] for variable in sequence: print(variable) . 1 2 3 4 5 6 7 . my_string = &quot;Hello, World!&quot; for character in my_string: print(character) . H e l l o , W o r l d ! . While Loops A while loop is used to repeat a set of statements as long as a condition is true. Here&#39;s the basic syntax of a while loop in Python: . num = 0 while num &lt; 5: print(num) num += 1 . 0 1 2 3 4 . Applications of Iteration . Iteration is a fundamental concept in computer programming and is used in a variety of real-life applications. Here are some examples:Data Processing . Data processing often involves iterating over large datasets to perform specific operations on each element. For example, in a data analysis task, you might iterate over a list of numbers to compute the average, or iterate over a list of strings to find the longest string. | . User Interfaces . User interfaces often involve iteration to display and handle data from various sources. For example, in a web application, you might iterate over a list of users to display their information in a table. Similarly, in a desktop application, you might iterate over a list of files to display them in a file explorer. | . Machine Learning . Machine learning algorithms often involve iterative processes to train models and improve their accuracy. For example, in a gradient descent algorithm, you might iterate over a set of training data to update the model&#39;s parameters and minimize the loss function. | . Popcorn hack (0.3) . Make a list related to your CPT project | Make a while loop that will print each term in the list | Make a for loop that will print each term in the list | . Simulation mechanics . In Python, pop() is a method that is used to remove and return an element from a list. The syntax for using pop() is as follows: | . How it works . The while keeps looping until the condintion give is met or not true I have two list and varibles so each time it loops over it picks the next value in both list | . | the for loops just loops for the amount of things inside It does a simlar thing but just needs one varible to cycle through the days | . | . week = [&quot;Push&quot;, &quot;Pull&quot;, &quot;Wrestling&quot;, &quot;Wrestling&quot;, &quot;Wrestling&quot;, &quot;Legs&quot;, &quot;Pull&quot;] week_days = [&quot;Monday&quot;, &quot;Tuesday&quot;, &quot;Wednesday&quot;, &quot;Thursday&quot;, &quot;Friday&quot;, &quot;Saturday&quot;, &quot;Sunday&quot;] i = 1 f = 0 z = 0 while i &lt;= 7: d = week[f] e = week_days[f] print(f&quot;Today is {e} and you have to do {d}&quot;) i = i + 1 f = f + 1 print(&quot;&quot;) for days in week: dayweek = week_days[z] print(f&quot;Today is {dayweek} and you have to do {days}&quot;) z = z + 1 . Today is Monday and you have to do Push Today is Tuesday and you have to do Pull Today is Wednesday and you have to do Wrestling Today is Thursday and you have to do Wrestling Today is Friday and you have to do Wrestling Today is Saturday and you have to do Legs Today is Sunday and you have to do Pull Today is Monday and you have to do Push Today is Tuesday and you have to do Pull Today is Wednesday and you have to do Wrestling Today is Thursday and you have to do Wrestling Today is Friday and you have to do Wrestling Today is Saturday and you have to do Legs Today is Sunday and you have to do Pull . my_list = [1, 2, 3, 4, 5] print(my_list) my_list.pop() print(my_list) my_list.pop(1) print(my_list) . [1, 2, 3, 4, 5] [1, 2, 3, 4] [1, 3, 4] . In Python, append() is a built-in method that is used to add an element to the end of a list. The syntax for using append() is as follows: . my_list = [] my_list.append(1) my_list.append(2) my_list.append(3) print(my_list) . [1, 2, 3] . Dictionary Lesson / 2D Arrays . Lesson 2: Dictionary&#39;s and 2 Dimensional Arrays . Advay Shindikar and Amay Advani . Objective: . Understand the concept of dictionaries and how they can be applied | Learn how to add, modify, and delete entries in a dictionary using the assignment operator and the del keyword | Understand the concept of 2D arrays and how they can be used to store data in rows and columns | Learn how to create a 2D array in Python using a nested list | Understand how to access values in a 2D array using row and column indices | Learn how to use indexing and slicing to access a subset of a 2D array | . . student = {&#39;name&#39;: &#39;Advay&#39;, &#39;age&#39;: 16, &#39;Sophomore&#39;} . students = [&#39;advay&#39;, &#39;amay&#39;, &#39;rohin&#39;, &#39;alex&#39;, &#39;ethan&#39;] . . Check In: . Of the above code segments, which is a list and which is a dictionary? | What is a dictionary and how is it used? | What is a 2D Array? | How are 2D Arrays different from 1D Arrays or Lists and what can they be used for? | . Manipulating Dictionaries . grocery_dict = {} # ask the user to enter grocery items and their prices while True: item = input(&quot;Enter an item for your grocery list (or &#39;done&#39; to exit): &quot;) if item == &quot;done&quot;: break else: price = float(input(&quot;Enter the price of {}: &quot;.format(item))) grocery_dict[item] = price # print the grocery list and total cost total_cost = 0 while True: print(&quot;Your grocery list:&quot;) for item, price in grocery_dict.items(): print(&quot;- {}: ${}&quot;.format(item, price)) print(&quot;Total cost: ${}&quot;.format(total_cost)) # ask the user to choose an action action = input(&quot;What would you like to do? (add/remove/done) &quot;) # add a new item to the grocery list if action == &quot;add&quot;: item = input(&quot;Enter the name of the item you would like to add: &quot;) price = float(input(&quot;Enter the price of {}: &quot;.format(item))) grocery_dict[item] = price total_cost += price # remove an item from the j item = input(&quot;Enter the name of the item you would like to remove: &quot;) if item in grocery_dict: total_cost -= grocery_dict[item] del grocery_dict[item] else: print(&quot;Item not found in grocery list!&quot;) # exit the loop and print the final grocery list and total cost elif action == &quot;done&quot;: break print(&quot;Final grocery list:&quot;) for item, price in grocery_dict.items(): print(&quot;- {}: ${}&quot;.format(item, price)) print(&quot;Total cost: ${}&quot;.format(total_cost)) . Hacks . List Hacks . my_team = [&quot;Jake&quot;, &quot;Finn&quot;, &quot;Kush&quot;, &quot;James&quot;, &quot;Gene&quot;, &quot;Zeen&quot;, &quot;Ediwn&quot;] my_team.append(&quot;Luka&quot;) my_team.remove(&quot;Jake&quot;) print(my_team) . PopCorn Hacks . How it works . The while keeps looping until the condintion give is met or not true I have two list and varibles so each time it loops over it picks the next value in both list | . | the for loops just loops for the amount of things inside It does a simlar thing but just needs one varible to cycle through the days | . | . week = [&quot;Push&quot;, &quot;Pull&quot;, &quot;Wrestling&quot;, &quot;Wrestling&quot;, &quot;Wrestling&quot;, &quot;Legs&quot;, &quot;Pull&quot;] week_days = [&quot;Monday&quot;, &quot;Tuesday&quot;, &quot;Wednesday&quot;, &quot;Thursday&quot;, &quot;Friday&quot;, &quot;Saturday&quot;, &quot;Sunday&quot;] i = 1 f = 0 z = 0 while i &lt;= 7: d = week[f] e = week_days[f] print(f&quot;Today is {e} and you have to do {d}&quot;) i = i + 1 f = f + 1 print(&quot;&quot;) for days in week: dayweek = week_days[z] print(f&quot;Today is {dayweek} and you have to do {days}&quot;) z = z + 1 . Dictonary Hacks . import os dict = { &quot;key1&quot;: &quot;value1&quot;, &quot;key2&quot;: &quot;value2&quot;, &quot;key3&quot;: &quot;value3&quot;, &quot;key4&quot;: &quot;value4&quot; } def update_dict_table(): os.system(&quot;clear&quot; if os.name == &quot;posix&quot; else &quot;cls&quot;) print(&quot;Dictionaries n&quot;) print(&quot;Key Value n&quot;) for key, value in dict.items(): print(f&quot;{key.ljust(18)}{value}&quot;) print(&quot; nWhat would you like to do?&quot;) print(&quot;1. Add a key-value pair&quot;) print(&quot;2. Remove a key-value pair&quot;) print(&quot;3. Quit&quot;) def add_dict_pair(): key = input(&quot;Enter the key: &quot;) value = input(&quot;Enter the value: &quot;) if key and value and key not in dict: dict[key] = value def remove_dict_pair(): key = input(&quot;Enter the key to remove: &quot;) if key in dict: del dict[key] def process_user_choice(): choice = input(&quot;Enter your choice: &quot;) if choice == &quot;1&quot;: add_dict_pair() elif choice == &quot;2&quot;: remove_dict_pair() elif choice == &quot;3&quot;: return else: print(&quot;Invalid choice. Please try again.&quot;) update_dict_table() process_user_choice() update_dict_table() process_user_choice() . Dictionaries Key Value key1 value1 key2 value2 key3 value3 key4 value4 What would you like to do? 1. Add a key-value pair 2. Remove a key-value pair 3. Quit Dictionaries Key Value key1 value1 key2 value2 key3 value3 key4 value4 key5 value5 What would you like to do? 1. Add a key-value pair 2. Remove a key-value pair 3. Quit Dictionaries Key Value key1 value1 key2 value2 key3 value3 key4 value4 What would you like to do? 1. Add a key-value pair 2. Remove a key-value pair 3. Quit . 2D-Array Hacks . from tabulate import tabulate from PIL import Image, ImageDraw import random data = [] def generate_array(rows, cols): global data new_data = [] for row in range(rows): row_data = [] for col in range(cols): if row &lt; len(data) and col &lt; len(data[row]): row_data.append(data[row][col]) else: row_data.append(random.randint(0, 255)) new_data.append(row_data) data = new_data draw_array() def draw_array(): table = [] max_value = max(max(row) for row in data) image_width = len(data[0]) * 50 image_height = len(data) * 50 image = Image.new(&quot;RGB&quot;, (image_width, image_height)) draw = ImageDraw.Draw(image) for row in range(len(data)): row_values = [] for col in range(len(data[row])): value = data[row][col] cell_color = (value, value, value) draw.rectangle([(col * 50, row * 50), ((col + 1) * 50, (row + 1) * 50)], fill=cell_color) row_values.append(value) table.append(row_values) print(tabulate(table, tablefmt=&quot;grid&quot;)) image.show() rows = int(input(&quot;Enter the number of rows (1-10): &quot;)) cols = int(input(&quot;Enter the number of columns (1-10): &quot;)) generate_array(rows, cols) . +--+--+--+ | 119 | 164 | 210 | +--+--+--+ | 194 | 91 | 23 | +--+--+--+ | 43 | 12 | 109 | +--+--+--+ .",
            "url": "https://f1nnc.github.io/mysite/2023/04/27/P4M-DataStructures-TeamEAAR.html",
            "relUrl": "/2023/04/27/P4M-DataStructures-TeamEAAR.html",
            "date": " • Apr 27, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "DevOps Lesson",
            "content": "import socket # Change the following host and see what IP it prints! host = &quot;google.com&quot; ip = socket.gethostbyname(host) print(ip) . 142.250.72.174 . with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s: s.connect((ip, 80)) print(&quot;Successfully connected!&quot;) . Successfully connected! . Check-In . What is an IP address? internet protocal is a unqine number that identifies the device | . | What is a TCP port? Check to see how the packet is made, and if it needs more bytes if something is missing | . | with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s: s.connect((ip, 80)) # Send a GET request to &quot;/&quot; s.sendall(b&quot;GET / HTTP/1.1 r n r n&quot;) # Recieve &amp; print 2048 bytes of data data = s.recv(2048) print(data.decode()) . HTTP/1.1 200 OK Date: Fri, 28 Apr 2023 04:51:09 GMT Expires: -1 Cache-Control: private, max-age=0 Content-Type: text/html; charset=ISO-8859-1 Content-Security-Policy-Report-Only: object-src &#39;none&#39;;base-uri &#39;self&#39;;script-src &#39;nonce-NZ8FzhGlXy_AuqR0i3IWQA&#39; &#39;strict-dynamic&#39; &#39;report-sample&#39; &#39;unsafe-eval&#39; &#39;unsafe-inline&#39; https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp P3P: CP=&#34;This is not a P3P policy! See g.co/p3phelp for more info.&#34; Server: gws X-XSS-Protection: 0 X-Frame-Options: SAMEORIGIN Set-Cookie: 1P_JAR=2023-04-28-04; expires=Sun, 28-May-2023 04:51:09 GMT; path=/; domain=.google.com; Secure Set-Cookie: AEC=AUEFqZcXk6eMXO4dcaxEZN4TA-7yYzsVdf0Y4ddY85HaeHPjA-OWrGUkiuQ; expires=Wed, 25-Oct-2023 04:51:09 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax Set-Cookie: NID=511=abkxxe4sar0T3M1nqmvivwYSODsptrv5X4pvU9L8TSQTgU-U4Fqqgnyjq4qYuxxqlORp_fS8DW-Sr1soCY5wWyQpHOkb4EpvLQKO2_3ABi7JZU4qZ10cYrMKEPBr0wG3d3320eAlAUMuNBP-DOcuktJ4QNn3FBkrIiG5rbVnYJ0; expires=Sat, 28-Oct-2023 04:51:09 GMT; path=/; domain=.google.com; HttpOnly Accept-Ranges: none Vary: Accept-Encoding Transfer-Encoding: chunked 5316 &lt;!doctype html&gt;&lt;html itemscope=&#34;&#34; itemtype=&#34;http://schema.org/WebPage&#34; lang=&#34;en&#34;&gt;&lt;head&gt;&lt;meta content=&#34;Search the world&#39;s information, including webpages, images, videos and more. Google has many special features to help you find exactly what you&#39;re looking for.&#34; name=&#34;description&#34;&gt;&lt;meta content=&#34;noodp&#34; name=&#34;robots&#34;&gt;&lt;meta content=&#34;text/html; charset=UTF-8&#34; http-equiv=&#34;Content-Type&#34;&gt;&lt;meta content=&#34;/images/branding/googleg/1x/googleg_standard_color_128dp.png&#34; itemprop=&#34;image&#34;&gt;&lt;title&gt;Google&lt;/title&gt;&lt;script nonce=&#34;NZ8FzhGlXy_AuqR0i3IWQA&#34;&gt;(function(){window.google={kEI:&#39;vVBLZNW2EbfBkPIPm9SbuAY&#39;,kEXPI:&#39;0,1303459,55950,6059,206,2415,2389,2316,383,246,5,1129120,1197739,380752,16114,19398,9286,22430,1362,283,12034,17582,4998,13228,3847,38444,885,1987,2891,3926,213,7615,606,30668,27618,2404,15324,432,3,346,1244,1,16916,2652,4,1528,2304,29062,13063,11444,2216,2980,1457,16786,5809,2548,409 . import requests # Change the URL to whatever you&#39;d like response = requests.get(&quot;https://youtube.com&quot;) print(&quot;Status code:&quot;, response.status_code) print(&quot;Headers:&quot;, response.headers) print(&quot;Response text:&quot;, response.text[:100]) # Add a line to print the &quot;Content-Type&quot; header of the response # Try an image URL! . Status code: 200 Headers: {&#39;Content-Type&#39;: &#39;text/html; charset=utf-8&#39;, &#39;X-Content-Type-Options&#39;: &#39;nosniff&#39;, &#39;Cache-Control&#39;: &#39;no-cache, no-store, max-age=0, must-revalidate&#39;, &#39;Pragma&#39;: &#39;no-cache&#39;, &#39;Expires&#39;: &#39;Mon, 01 Jan 1990 00:00:00 GMT&#39;, &#39;Date&#39;: &#39;Fri, 28 Apr 2023 04:51:22 GMT&#39;, &#39;Strict-Transport-Security&#39;: &#39;max-age=31536000&#39;, &#39;X-Frame-Options&#39;: &#39;SAMEORIGIN&#39;, &#39;Report-To&#39;: &#39;{&#34;group&#34;:&#34;youtube_main&#34;,&#34;max_age&#34;:2592000,&#34;endpoints&#34;:[{&#34;url&#34;:&#34;https://csp.withgoogle.com/csp/report-to/youtube_main&#34;}]}&#39;, &#39;Permissions-Policy&#39;: &#39;ch-ua-arch=*, ch-ua-bitness=*, ch-ua-full-version=*, ch-ua-full-version-list=*, ch-ua-model=*, ch-ua-wow64=*, ch-ua-platform=*, ch-ua-platform-version=*&#39;, &#39;Origin-Trial&#39;: &#39;AvC9UlR6RDk2crliDsFl66RWLnTbHrDbp+DiY6AYz/PNQ4G4tdUTjrHYr2sghbkhGQAVxb7jaPTHpEVBz0uzQwkAAAB4eyJvcmlnaW4iOiJodHRwczovL3lvdXR1YmUuY29tOjQ0MyIsImZlYXR1cmUiOiJXZWJWaWV3WFJlcXVlc3RlZFdpdGhEZXByZWNhdGlvbiIsImV4cGlyeSI6MTcxOTUzMjc5OSwiaXNTdWJkb21haW4iOnRydWV9&#39;, &#39;Cross-Origin-Opener-Policy&#39;: &#39;same-origin-allow-popups; report-to=&#34;youtube_main&#34;&#39;, &#39;P3P&#39;: &#39;CP=&#34;This is not a P3P policy! See http://support.google.com/accounts/answer/151657?hl=en for more info.&#34;&#39;, &#39;Content-Encoding&#39;: &#39;gzip&#39;, &#39;Server&#39;: &#39;ESF&#39;, &#39;X-XSS-Protection&#39;: &#39;0&#39;, &#39;Set-Cookie&#39;: &#39;GPS=1; Domain=.youtube.com; Expires=Fri, 28-Apr-2023 05:21:22 GMT; Path=/; Secure; HttpOnly, VISITOR_INFO1_LIVE=GAjobnYkMz4; Domain=.youtube.com; Expires=Wed, 25-Oct-2023 04:51:22 GMT; Path=/; Secure; HttpOnly; SameSite=none&#39;, &#39;Alt-Svc&#39;: &#39;h3=&#34;:443&#34;; ma=2592000,h3-29=&#34;:443&#34;; ma=2592000&#39;, &#39;Transfer-Encoding&#39;: &#39;chunked&#39;} Response text: &lt;!DOCTYPE html&gt;&lt;html style=&#34;font-size: 10px;font-family: Roboto, Arial, sans-serif;&#34; lang=&#34;en&#34; syste . NGINX . aws = &quot;3.130.255.192&quot; response = requests.get(&quot;http://&quot; + aws) print(response.text) . &lt;html&gt;&lt;head&gt;&lt;title&gt;ContentKeeper&lt;/title&gt;&lt;/heQad&gt; &lt;body bgcolor=&#34;#A02E5F&#34; text=&#34;White&#34; link=&#34;Lime&#34; vlink=&#34;Aqua&#34;&gt; &lt;center&gt;&lt;br&gt;&lt;h1&gt;ContentKeeper&lt;br&gt;Non-Managed Site&lt;/h1&gt; No access is available to NON-Managed Sites.&lt;br&gt;&lt;br&gt; &lt;table border=&#34;1&#34; cellspacing=&#34;0&#34;&gt; &lt;tr&gt;&lt;td&gt;URL&lt;/td&gt;&lt;td&gt;&lt;b&gt;3.130.255.192&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Username&lt;/td&gt;&lt;td&gt;&lt;b&gt;1851448/pusd&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; &lt;/body&gt;&lt;/html&gt; . Configuration . server { // Listen on virtual &quot;port 80&quot; listen 80; listen [::]:80; server_name 3.130.255.192; location / { // Inform server about original client proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; // Forward all requests transparently to the server running on our computer proxy_pass http://localhost:9099; } } . Load Balancing . upstream example.com { server server1.example.com; server server1.example.com; } . HTTP Headers . server { add_header X-Cool-Header &quot;I love APCSP!&quot;; location /pages { add_header X-Cooler-Header &quot;This is my secret header!&quot;; } } . Check In . Research 1 HTTP header and describe, in detail, its purpose. One HTTP header is the &quot;User-Agent&quot; header, which provides information about the client (typically a web browser) making the request to the server. | . | Write a line in a sample NGINX configuration that will add that specific header to the /information location location /information { add_header User-Agent &quot;Custom User Agent&quot;; } | Explain the purpose of the load balancing performed by NGINX The purpose of load balancing performed by NGINX is to distribute incoming network traffic across multiple servers to improve reliability, scalability, and performance. | . | Modify the following code block to obtain the value of the secret header on /products of the AWS site Imported request and changed it so the varible was in the print stament | . | import requests aws = &quot;3.130.255.192&quot; response = requests.get(&quot;http://&quot; + aws+ &quot;/products&quot;) print(&quot;The secret header is:&quot;, response) . The secret header is: &lt;Response [200]&gt; . Hacks . Complete the above check-in questions and change the hosts (0.1) [x] | . | Complete the above code-segment to retrieve the secret header (0.1) The secret header is: &lt;Response [200]&gt; | The page: Hello, we sell: - iPhones - iPads - Mortensen keychains | . | . Bonus (0.05) . Create a diagram showing the layers of abstraction that allow us to use HTTP (IP, TCP, etc.) . . CORS Hacks . Explain what CORS is and what it stands for CORS (Cross-Origin Resource Sharing) is a web security mechanism that allows web browsers to make requests to a different origin/domain than the one the website is hosted on. | . | Describe how you would be able to implement CORS into your own websites To implement CORS in your website, you need to include appropriate CORS headers in the server&#39;s response, such as Access-Control-Allow-Origin, Access-Control-Allow-Methods, and Access-Control-Allow-Headers, which specify the allowed origins, methods, and headers for cross-origin requests. | . | Describe why you would want to implement CORS into your own websites Implementing CORS in your websites is important to control which external domains can access your resources, enhancing security by preventing unauthorized cross-origin requests. | . | How could use CORS to benefit yourself in the future? Using CORS in the future can benefit you by enabling you to build and integrate web applications that need to communicate with different domains, allowing you to create more dynamic and interactive websites with secure cross-origin data sharing. | . | Total: 0.2 points . KASM Hacks . What is the purpose of &quot;sudo&quot; when running commands in terminal? The purpose of &quot;sudo&quot; (short for &quot;superuser do&quot;) when running commands in the terminal is to execute the command with administrative privileges, typically as the root user. It allows users to perform actions that require elevated permissions, such as modifying system files or installing software. | . | What are some commands which allow us to look at how the storage of a machine is set up as? Some commands that allow us to examine the storage setup of a machine include: | &quot;df&quot; command: It displays information about disk space usage, including the available space, used space, and file system types. | &quot;du&quot; command: It estimates file and directory space usage, providing a summary of the sizes of individual files or directories. | &quot;lsblk&quot; command: It lists information about block devices, including disks and their partitions. | . | What do you think are some alternatives to running &quot;curl -O&quot; to get the zip file for KASM? Alternatives to using &quot;curl -O&quot; to retrieve the zip file for KASM could include: | Using a web browser to download the zip file manually from the KASM website. | Using a download manager or wget command to retrieve the file. | Using a version control system like Git to clone the KASM repository directly. | . | What kind of commands do you think the &quot;install.sh&quot; command has and why is it necessary to call it? The &quot;install.sh&quot; command likely contains a series of instructions and commands that automate the installation process for KASM. It may include steps such as checking dependencies, configuring settings, copying files to the appropriate locations, and starting necessary services. Calling the &quot;install.sh&quot; script is necessary to streamline the installation process and ensure that all required components are properly set up. | . | Explain in at least 3-4 sentences how deploying KASM is related to/requires other topics talked about in the lesson and/or potential ways to add things mentioned in the lesson to this guide. Deploying KASM involves various related topics and potential additions from the lesson, including: | Networking: Configuring network settings for KASM to ensure proper communication between the deployed application and other systems. | Security: Implementing appropriate security measures, such as setting up firewalls or using encryption protocols, to protect the deployed KASM instance. | System administration: Managing and monitoring the KASM deployment, performing updates, and troubleshooting issues. | Integration: Integrating KASM with other tools, frameworks, or services mentioned in the lesson, such as Docker containers, load balancers, or monitoring solutions, to enhance functionality and performance. Total: 0.2 points | . | See the setup post .",
            "url": "https://f1nnc.github.io/mysite/2023/04/26/devops-lesson.html",
            "relUrl": "/2023/04/26/devops-lesson.html",
            "date": " • Apr 26, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "P4-M 4/24 Big Idea 3",
            "content": "Introduction: Zeen . Hello, my name is zeen and today we will be presenting big idea 3. Our topics include 2d arrays, iteration, and lists and dictionaries. . Objectives . Master the concepts of iteration, list, 2d-arrays, Dictionaries, and APIs . Vocab . Here is some vocab during the lesson, you should be familar with them already no need for me to read these out, now I will pass the speaking off to Kush . Iteration: A process that repates itself | Array: Sometimes called a list, can keep strings and intergers inside it | 2D-Array: A collection of data elements arranged in a grid-like structure with rows and columns | Mutable: the ability to be changed or modified | Key: A Singular identifier that is associated with a certin value | . 1: 2D Array . Tic Tac Toe:Kush Sirohi . - What are some examples of 2d Arrays . - What is a modern day game that could be classified as a 2D array . array = [&quot;Hello&quot;, &quot;Hi&quot;, &quot;Whats up&quot;] twoDArray = [[&quot;Name&quot;, &quot;ID&quot;, &quot;Age&quot;], [&quot;Kush&quot;, &quot;1&quot;, &quot;16&quot;], [&quot;Finn&quot;, &quot;2&quot;, &quot;16&quot;]] print(f&quot;This is a normal array: {array}&quot;) print(&quot;This is a 2D array&quot;) for row in twoDArray: print(row) . How I used 2D Arrays (game example) . - Describe a 2D array in your own words . board = [[&#39; &#39;, &#39; &#39;, &#39; &#39;], [&#39; &#39;, &#39; &#39;, &#39; &#39;], [&#39; &#39;, &#39; &#39;, &#39; &#39;]] # Function to print the current state of the game board def print_board(): print(&quot; 0 1 2&quot;) for i in range(3): print(i, end=&#39; &#39;) for j in range(3): print(board[i][j], end=&#39; &#39;) print() # Function to check if a player has won the game def check_win(player): # Check rows for a win for i in range(3): if board[i][0] == player and board[i][1] == player and board[i][2] == player: return True # Check columns for a win for j in range(3): if board[0][j] == player and board[1][j] == player and board[2][j] == player: return True # Check diagonals for a win if board[0][0] == player and board[1][1] == player and board[2][2] == player: return True if board[0][2] == player and board[1][1] == player and board[2][0] == player: return True # If no win condition is met, return False return False # Function to check if the game is a tie def check_tie(): for i in range(3): for j in range(3): if board[i][j] == &#39; &#39;: return False return True # Function to play the game def play_game(): # Initialize player and turn counter player = &#39;X&#39; turns = 0 # Loop until the game is over while True: # Print the current state of the board print_board() # Get the player’s move row = int(input(f&quot;{player}&#39;s turn. Enter row (0-2): &quot;)) col = int(input(f&quot;{player}&#39;s turn. Enter column (0-2): &quot;)) # Check if the move is valid if board[row][col] == &#39; &#39;: board[row][col] = player turns += 1 # Check if the player has won if check_win(player): print_board() print(f&quot;{player} wins!&quot;) return # Check if the game is a tie if check_tie(): print_board() print(&quot;It&#39;s a tie!&quot;) return # Switch players player = &#39;O&#39; if player == &#39;X&#39; else &#39;X&#39; else: print(&quot;That space is already taken. Try again.&quot;) # Start the game play_game() . 2: Iteration . &gt; Robot Game:Finn Carpenter- What is the defenition of iteration in your own words . times = 0 numbers = [1, 2, 3, 4, 5] ## Loops for i in range(5): print(&quot;hi&quot;) while times &lt;= 5: print(&quot;hello&quot;) times = times + 1 ## Function with a parameters def print_numbers(x): for num in x: print(num) print_numbers(numbers) . Iteration Game . Link to the game | Play the levels (only play the first 2 in class) | Explain how the game relates to itertation | | . How I used iteration (game example) . - What parts of the code use iteration . function run() { // Read input values from the HTML document and convert them to integers. UPinput = parseInt(document.getElementById(&quot;up&quot;).value); DOWNinput = parseInt(document.getElementById(&quot;down&quot;).value); LEFTinput = parseInt(document.getElementById(&quot;left&quot;).value); RIGHTinput = parseInt(document.getElementById(&quot;right&quot;).value); looper = parseInt(document.getElementById(&quot;loop&quot;).value); runner.style.opacity = 0; // Create an array to hold the movements. let movements = []; // Push &#39;up&#39; movements to the array. for (let l = 0; l &lt; looper; l++) { for (let k = 0; k &lt; UPinput; k++) { movements.push(up); } // Push &#39;down&#39; movements to the array. for (let i = 0; i &lt; DOWNinput; i++) { movements.push(down); } // Push &#39;left&#39; movements to the array. for (let a = 0; a &lt; LEFTinput; a++) { movements.push(left); } // Push &#39;right&#39; movements to the array. for (let c = 0; c &lt; RIGHTinput; c++) { movements.push(right); } } // Set the initial index to 0 and execute each movement in sequence with a delay of 800 milliseconds. let index = 0; let intervalId = setInterval(() =&gt; { // If the end of the movements array has been reached, stop executing movements. if (index &gt;= movements.length) { clearInterval(intervalId); win(); // Call the win function. return; } movements[index](); // Execute the movement at the current index. index++; // Increment the index. }, 800); } . 3: List and Dictionaries . Scramble Game:Edwin . List = [1, 2, 3, 4, 5] Dict = { 1: &quot;Hi&quot;, 2: &quot;Hello&quot;, 3: &quot;Whats Up&quot; } # Why Do I call 0 for the first thing in a list, but 1 for Dict # print(List[0]) print(Dict[1]) . How I used a dictonary to make a game . Memory Game:James- Link . | . How I used List to make a game . - Explain which parts of the code use lists . - Explain what list manipulation is happening in that part . import random word_list = [&quot;python&quot;, &quot;computer&quot;, &quot;programming&quot;, &quot;algorithm&quot;, &quot;database&quot;, &quot;function&quot;, &quot;variable&quot;, &quot;loop&quot;, &quot;iteration&quot;, &quot;array&quot;, &quot;mutable&quot;, &quot;insertion&quot;, &quot;deletion&quot;, &quot;key&quot;, &quot;API&quot;] word = random.choice(word_list) scrambled_word = &quot;&quot;.join(random.sample(word, len(word))) print(f&quot;Unscramble the following Computer Science Word: {scrambled_word}&quot;) hints = 1 guesses = 1 guess = &quot;&quot; while guess != word and guesses &lt;= 4: guess = input(&quot;What&#39;s the unscrambled word? &quot;).lower() if guess != word: print(&quot;Sorry, that&#39;s not the word. Try again!&quot;) if guesses == 1: guesses += 1 elif guesses == 2: print(f&quot;Hint 1: The first letter of the word is &#39;{word[0]}&#39;&quot;) guesses += 1 elif guesses == 3: print(f&quot;Hint 2: The second letter of the word is &#39;{word[1]}&#39;&quot;) guesses += 1 else: print(f&quot;All 4 Guesses have been used, you didn&#39;t unscramble the word, the word was {word}&quot;) guesses += 1 else: print(&quot;Congratulations, you unscrambled the word!&quot;) . Hacks: Your Score/1 . General 0.3 . Copy this noteboook into your personal fastpages | Answer all questions put the question in a new markdown block (so we can grade faster) | . | . Iteration 0.2 (can get up to 0.23) . Get to level 5 Take ScreenShots of your name inside the box an put them in your ticket | . | Create a code segment with iteration that does something cool | . 2D array 0.2 (can get up to 0.23) . Explain how the tic tac toe game works | Give 3 Examples of games that can be made from 2D arrays | . List and Dictionaries 0.2 (can get up to 0.23) . Explain the differences between Lists and Dictionaries | Make a code block that manipulates either a list or a dictionary | .",
            "url": "https://f1nnc.github.io/mysite/2023/04/21/EOYPLAYGROUND.html",
            "relUrl": "/2023/04/21/EOYPLAYGROUND.html",
            "date": " • Apr 21, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Tri-3-Lesson",
            "content": "What you should Have to Start . Should have wget this file (tri3-lesson.ipynb) | wget this file: https://raw.githubusercontent.com/JoshuaW03628/Repository-1/master/nba_player_statistics.csv | Copy Path from nba_player_statistics.csv and replace prior path for it. | . Lesson Portion 1: ReIntroduction to Data Analysis, NunPy, and Pandas, Why is it important? . Data Analysis. . Data Analysis is the process of examining data sets in order to find trends and draw conclusions about the given information. Data analysis is important because it helps businesses optimize their performances. | . What is NunPy and Pandas . Pandas library involves a lot of data analysis in Python. NumPy Library is mostly used for working with numerical values and it makes it easy to apply with mathematical functions. | Imagine you have a lot of toys, but they are all mixed up in a big box. NumPy helps you to put all the same types of toys together, like all the cars in one pile and all the dolls in another. Pandas is like a helper that helps you to remember where each toy is located. So, if you want to find a specific toy, like a red car, you can ask Pandas to find it for you. | Just like how it&#39;s easier to find a toy when they are sorted and organized, it&#39;s easier for grown-ups to understand and analyze big sets of numbers when they use NumPy and Pandas. | . Lesson Portion 2 More into NunPy . What we are covering; . Explanation of NumPy and its uses in data analysis | Importing NumPy library | Examining NumPy arrays | Creating NumPy arrays and performing intermediate array operations | Popcorn Hacks, Make your own percentile NunPy array | . What is NunPy&#39;s use in data analysis/ how to import NunPy. . NumPy is a tool in Python that helps with doing math and data analysis. It&#39;s great for working with large amounts of data, like numbers in a spreadsheet. NumPy is really good at doing calculations quickly and accurately, like finding averages, doing algebra, and making graphs. It&#39;s used a lot by scientists and people who work with data because it makes their work easier and faster. . import numpy as np . List of NunPy Functions, what they do, and examples. . Link; https://www.educba.com/numpy-functions/ | . Example of Using NunPy in Our Project . This code calculates the total plate appearances for a baseball player using NumPy&#39;s sum() function, similar to the original example. It then uses NumPy to calculate the total number of bases (hits plus walks) for the player, and divides that by the total number of plate appearances to get the on-base percentage. The results are then printed to the console. . import numpy as np # Example data player_hits = np.array([3, 1, 2, 0, 1, 2, 1, 2]) # Player&#39;s hits in each game player_walks = np.array([1, 0, 0, 1, 2, 1, 1, 0]) # Player&#39;s walks in each game player_strikeouts = np.array([2, 1, 0, 2, 1, 1, 0, 1]) # Player&#39;s strikeouts in each game # array to store plate appearances (PA) for the player total_pa = np.sum(player_hits != 0) + np.sum(player_walks) + np.sum(player_strikeouts) # array to store on-base percentage (OBP) for the player total_bases = np.sum(player_hits) + np.sum(player_walks) obp = total_bases / total_pa # Print the total plate appearances and on-base percentage for the player print(f&quot;Total plate appearances: {total_pa}&quot;) print(f&quot;On-base percentage: {obp:.3f}&quot;) . Total plate appearances: 21 On-base percentage: 0.857 . Activity 1; PopCorn Hacks; Creating a NunPy Array and Analyzing the Data using Array Operations . import numpy as np #Create a NumPy array of the heights of players in a basketball team heights = np.array([192, 195, 193, 200, 211, 199, 201, 198, 184, 190, 196, 203, 208, 182, 207]) # Calculate the percentile rank of each player&#39;s height percentiles = np.percentile(heights, [25, 50, 75]) # Print the results print(&quot;The 25th percentile height is&quot;, percentiles[0], &quot;cm.&quot;) print(&quot;The 50th percentile height is&quot;, percentiles[1], &quot;cm.&quot;) print(&quot;The 75th percentile height is&quot;, percentiles[2], &quot;cm.&quot;) # Determine the number of players who are in the top 10% tallest top_10_percent = np.percentile(heights, 90) tallest_players = heights[heights &gt;= top_10_percent] print(&quot;There are&quot;, len(tallest_players), &quot;players in the top 10% tallest.&quot;) . The 25th percentile height is 192.5 cm. The 50th percentile height is 198.0 cm. The 75th percentile height is 202.0 cm. There are 2 players in the top 10% tallest. . import numpy as np #Create a NumPy array of the x points = np.array([10, 12, 14, 16, 18, 20, 22, 24 ,28, 29, 36, 50, 72]) # Calculate the percentile rank of x t = np.percentile(points, [25,50,75]) # Print the results print(&quot;The 25th percentile&quot;, t[0], &quot; points&quot;) print(&quot;The 50th percentile&quot;, t[1], &quot; points&quot;) print(&quot;The 75th percentile&quot;, t[2], &quot; points&quot;) # Determine the number of players who are in the top 10% x t = np.percentile(points, 90) p = points[points &gt;= t] print(&quot;There are&quot;, len(p), &quot;players in the top 10%&quot;) . The 25th percentile 16.0 points The 50th percentile 22.0 points The 75th percentile 29.0 points There are 2 players in the top 10% . Lesson Portion 3 More into Pandas . What we are Covering . Explanation of Pandas and its uses in data analysis | Importing Pandas library | Loading data into Pandas DataFrames from CSV files | Manipulating and exploring data in Pandas DataFrames | Example of using Pandas for data analysis tasks such as filtering and sorting | . What are pandas and what is its purpose? . Pandas is a software library that is used in Python | Pandas are used for data analysis and data manipulation | Pandas offer data structures and operations for manipulating numerical tables and time series. | Pandas is free | . Things you can do using pandas . Data Cleansing; Identifying and correcting errors, inconsistencies, and inaccuracies in datasets. | Data fill; Filling in missing values in datasets. | Statistical Analysis; Analyzing datasets using statistical techniques to draw conclusions and make predictions. | Data Visualization; Representing datasets visually using graphs, charts, and other visual aids. | Data inspection; Examining datasets to identify potential issues or patterns, such as missing data, outliers, or trends. | . Pandas and Data analysis . The 2 most important data structures in Pandas are: . Series ; A Series is a one-dimensional labeled array that can hold data of any type (integer, float, string, etc.). It is similar to a column in a spreadsheet or a SQL table. Each element in a Series has a label, known as an index. A Series can be created from a list, a NumPy array, a dictionary, or another Pandas Series. | DataFrame ;A DataFrame is a two-dimensional labeled data structure that can hold data of different types (integer, float, string, etc.). It is similar to a spreadsheet or a SQL table. Each column in a DataFrame is a Series, and each row is indexed by a label, known as an index. A DataFrame can be created from a dictionary of Series or NumPy arrays, a list of dictionaries, or other Pandas DataFrame. | . Dataframes . import pandas as pd . pd.__version__ . &#39;1.4.2&#39; . Importing CSV Data . imports the Pandas library and assigns it an alias &#39;pd&#39;. | Loads a CSV file named &#39;nba_player_statistics.csv&#39; into a Pandas DataFrame called &#39;df&#39;. | Specifies a player&#39;s name &#39;Jimmy Butler&#39; to filter the DataFrame for that player&#39;s stats. It creates a new DataFrame called &#39;player_stats&#39; which only contains rows where the &#39;NAME&#39; column matches &#39;Jimmy Butler&#39;. | Displays the player&#39;s stats for points per game (PPG), rebounds per game (RPG), and assists per game (APG) using the print() function and string formatting. | The code uses the double square brackets [[PPG&#39;, &#39;RPG&#39;, &#39;APG&#39;]] to select only the columns corresponding to the player&#39;s points per game, rebounds per game, and assists per game from the player_stats DataFrame. | In summary, the code loads NBA player statistics data from a CSV file, filters it for a specific player, and displays the stats for that player&#39;s PPG, RPG, and APG using a Pandas DataFrame. | . import pandas as pd # Load the CSV file into a Pandas DataFrame df = pd.read_csv(&#39;/home/finnc/vscode/mysite/_notebooks/files/nba_player_statistics.csv&#39;) # Filter the DataFrame to only include stats for a specific player (in this case, Jimmy Butler) player_name = &#39;Stephen Curry&#39; player_stats = df[df[&#39;NAME&#39;] == player_name] # Display the stats for the player print(f&quot; nStats for {player_name}:&quot;) print(player_stats[[&#39;PPG&#39;, &#39;RPG&#39;, &#39;APG&#39;]]) . Stats for Stephen Curry: PPG RPG APG 6 29.0 4.5 4.0 . In this code segment below we use Pandas to read a CSV file containing NBA player statistics and store it in a DataFrame. . The reason Pandas is useful in this scenario is because it provides various functionalities to filter, sort, and manipulate the NBA data efficiently. In this code, the DataFrame is filtered to only include the stats for the player you guys choose. . Imports the Pandas library and assigns it an alias &#39;pd&#39;. | Loads a CSV file named &#39;nba_player_statistics.csv&#39; into a Pandas DataFrame called &#39;df&#39;. | Asks the user to input a player name using the input() function and assigns it to the variable player_name. | Filters the DataFrame for the specified player name using the df[df[&#39;NAME&#39;] == player_name] syntax, and assigns the resulting DataFrame to the variable player_stats. | Checks if the player_stats DataFrame is empty using the empty attribute. If it is empty, prints &quot;No stats found for that player.&quot; Otherwise, it proceeds to step 6. | Displays the player&#39;s stats for points per game (PPG), rebounds per game (RPG), assists per game (APG), and total points + rebounds + assists (P+R+A) using the print() function and string formatting. | In summary, this code loads NBA player statistics data from a CSV file, asks the user to input a player name, filters the DataFrame for that player&#39;s stats, and displays the player&#39;s stats for PPG, RPG, APG, and P+R+A. If the player is not found in the DataFrame, it prints a message indicating that no stats were found. | . import pandas as pd df = pd.read_csv(&#39;/home/finnc/vscode/mysite/_notebooks/files/nba_player_statistics.csv&#39;) # Load CSV file into a Pandas DataFrame player_name = input(&quot;Enter player name: &quot;) # Get player name input from user player_stats = df[df[&#39;NAME&#39;] == player_name] # Filter the DataFrame to only include stats for the specified player if player_stats.empty: print(&quot;No stats found for that player.&quot;) else: # Check if the player exists in the DataFrame print(f&quot; nStats for {player_name}:&quot;) print(player_stats[[&#39;PPG&#39;, &#39;RPG&#39;, &#39;APG&#39;, &#39;P+R+A&#39;]]) # Display the stats for the player inputted. . Stats for LeBron James: PPG RPG APG P+R+A 26 21.0 11.0 5.0 37.0 . Lesson Portion 4 . What we will be covering . Example of analyzing data using both NumPy and Pandas libraries | Importing data into NumPy and Pandas Performing basic data analysis tasks such as mean, median, and standard deviation Visualization of data using Matplotlib library | . Example of analyzing data using both NumPy and Pandas libraries . import numpy as np import pandas as pd # Load CSV file into a Pandas DataFrame df = pd.read_csv(&#39;/home/finnc/vscode/mysite/_notebooks/files/nba_player_statistics.csv&#39;) # Filter the DataFrame to only include stats for the specified player player_name = input(&quot;Enter player name: &quot;) player_stats = df[df[&#39;NAME&#39;] == player_name] if player_stats.empty: print(&quot;No stats found for that player.&quot;) else: # Convert the player stats to a NumPy array player_stats_np = np.array(player_stats[[&#39;PPG&#39;, &#39;RPG&#39;, &#39;APG&#39;, &#39;P+R+A&#39;]]) # Calculate the average of each statistic for the player player_stats_avg = np.mean(player_stats_np, axis=0) # Print out the average statistics for the player print(f&quot; nAverage stats for {player_name}:&quot;) print(f&quot;PPG: {player_stats_avg[0]:.2f}&quot;) print(f&quot;RPG: {player_stats_avg[1]:.2f}&quot;) print(f&quot;APG: {player_stats_avg[2]:.2f}&quot;) print(f&quot;P+R+A: {player_stats_avg[3]:.2f}&quot;) . No stats found for that player. . NumPy impacts the given code because it performs operations on arrays efficiently. Specifically, it converts a Pandas DataFrame object to a NumPy array object, and then calculates the average statistics for a the player you guys inputted. Without NumPy, it would be more difficult and less efficient to perform these calculations on large data sets. It does the math for us. . Importing data into NumPy and Pandas Performing basic data analysis tasks such as mean, median, and standard deviation Visualization of data using Matplotlib library . Matplotlib is used essentially to create visuals of data. charts,diagrams,etc. . import numpy as np import pandas as pd import matplotlib.pyplot as plt # Load the CSV file into a Pandas DataFrame df = pd.read_csv(&#39;/home/finnc/vscode/mysite/_notebooks/files/nba_player_statistics.csv&#39;) # Print the first 5 rows of the DataFrame print(df.head()) # Calculate the mean, median, and standard deviation of the &#39;Points&#39; column mean_minutes = df[&#39;MPG&#39;].mean() median_minutes = df[&#39;MPG&#39;].median() stddev_minutes = df[&#39;MPG&#39;].std() # Print the results print(&#39;Mean Minutes: &#39;, mean_minutes) print(&#39;Median Minutes: &#39;, median_minutes) print(&#39;Standard Deviation Minutes: &#39;, stddev_minutes) # Create a histogram of the &#39;Points&#39; column using Matplotlib plt.hist(df[&#39;MPG&#39;], bins=20) plt.title(&#39;MPG Histogram&#39;) plt.xlabel(&#39;MPG&#39;) plt.ylabel(&#39;Frequency&#39;) plt.show() . RANK NAME TEAM POS AGE GP MPG USG% TO% FTA ... APG 0 1 Jimmy Butler Mia F 33.6 1 42.9 34.3 9.9 8 ... 11.0 1 2 Kawhi Leonard Lac F 31.8 2 40.2 30.0 11.9 17 ... 6.0 2 3 Khris Middleton Mil F 31.7 1 33.1 37.5 19.8 10 ... 4.0 3 4 Devin Booker Pho G 26.5 2 44.1 28.8 16.2 14 ... 6.0 4 5 De&#39;Aaron Fox Sac G 25.3 2 38.2 31.6 9.0 14 ... 7.0 SPG BPG TPG P+R P+A P+R+A VI ORtg DRtg 0 3.0 0.0 3.0 40.0 46.0 51.0 11.6 117.2 103.8 1 2.0 0.5 3.0 41.0 40.5 47.0 11.0 129.5 110.4 2 0.0 0.0 5.0 42.0 37.0 46.0 12.8 115.5 111.9 3 2.5 1.5 4.0 33.0 38.0 39.0 5.2 121.9 111.0 4 3.5 0.5 2.5 34.0 38.0 41.0 9.1 112.6 108.8 [5 rows x 29 columns] Mean Minutes: 20.985483870967748 Median Minutes: 23.0 Standard Deviation Minutes: 12.844102823170283 . In this example code, we first import the necessary libraries, including NumPy, Pandas, and Matplotlib. We then load the CSV file into a Pandas DataFrame using the pd.read_csv() function. We print the first 5 rows of the DataFrame using the df.head() function. Next, we calculate the mean, median, and standard deviation of the &#39;MPG&#39; column using the appropriate Pandas methods, and print the results. And, we create a histogram of the &#39;MPG&#39; column using Matplotlib by calling the plt.hist() function and setting appropriate axis labels and a title. We then call the plt.show() method to display the plot. Even though NumPy is not directly used in this code, it is an important underlying component of the pandas and Matplotlib libraries, which are used to load, manipulate and visualize data. It allows them to work more efficiently . Lesson Portion 5; Summary . Summary/Goals of Lesson: . One of our goals was to make you understand data analysis and how it can be important in optimizing business performance. We also wanted to make sure you understood the use of Pandas and NumPy libraries in data analysis, with a focus on NumPy. As someone who works with data, we find Pandas incredibly useful for manipulating, analyzing, and visualizing data in Python. The way we use pandas is to calculate individual player and team statistics. We are a group that works with numerical data, so NumPy is one of our favorite tools for working with arrays and applying mathematical functions to them. It is very fast at computing and manipulating arrays making it a very valuable tool for tracking statistics which is important to our group. For example, if you have an array of the points scored by each player in a game, you can use NumPy to calculate the total points scored, average points per player, or the highest and lowest scoring players. . Lesson Portion 6 Hacks . Printing a CSV File (0.5) . Use this link https://github.com/ali-ce/datasets to select csv file of a topic you are interested in, or you may find one online. | Once you select your topic make sure it is a csv file and then you want to press on the button that says raw. | After that copy that information and create a file with a name and .csv at the end and paste your information. | Below is a start that you can use for your hacks. | Your goal is to print 2 specific parts from data (example could be like population and country). | . Popcorn Hacks (0.2) . Lesson Portion 1. #### Answering Questions (0.2) | Found Below. | . Submit By Thursday 8:35 A.M. . How to Submit: Slack a Blog Post that includes all of your hacks to &quot;Joshua Williams&quot; on Slack. | . POPCORN: Video game points . import numpy as np #Create a NumPy array of the x points = np.array([10, 12, 14, 16, 18, 20, 22, 24 ,28, 29, 36, 50, 72]) # Calculate the percentile rank of x t = np.percentile(points, [25,50,75]) # Print the results print(&quot;The 25th percentile&quot;, t[0], &quot; points&quot;) print(&quot;The 50th percentile&quot;, t[1], &quot; points&quot;) print(&quot;The 75th percentile&quot;, t[2], &quot; points&quot;) # Determine the number of players who are in the top 10% x t = np.percentile(points, 90) p = points[points &gt;= t] print(&quot;There are&quot;, len(p), &quot;players in the top 10%&quot;) . The 25th percentile 16.0 points The 50th percentile 22.0 points The 75th percentile 29.0 points There are 2 players in the top 10% . READ CSV . import numpy as np import pandas as pd import matplotlib.pyplot as plt df = pd.read_csv(&#39;/home/finnc/vscode/mysite/_notebooks/files/2013 US State Statistics.csv&#39;) df[&#39;Total Homeless Persons&#39;] = df[&#39;Total Homeless Persons&#39;].str.replace(&#39;,&#39;, &#39;&#39;).astype(int) df = df.sort_values(&#39;Total Homeless Persons&#39;, ascending=False) df = df[[&#39;State&#39;, &#39;Total Homeless Persons&#39;]].reset_index(drop=True) # reset the index df.index += 1 # start the index at 1 df = df.rename(columns={&#39;Total Homeless Persons&#39;: &#39;Homeless&#39;}) # renaming the column print(df) . State Homeless 1 California 136826 2 New York 77430 3 Florida 47862 4 Texas 29615 5 Massachusetts 19029 6 Washington 17760 7 Georgia 16971 8 Pennsylvania 15086 9 Oregon 13822 10 Illinois 13425 11 Ohio 12325 12 North Carolina 12168 13 New Jersey 12002 14 Michigan 11527 15 Arizona 10562 16 Colorado 9754 17 Tennessee 9528 18 Missouri 8581 19 Nevada 8443 20 Minnesota 8214 21 Maryland 8205 22 Virginia 7625 23 District of Columbia 6865 24 South Carolina 6544 25 Hawaii 6335 26 Wisconsin 6104 27 Indiana 6096 28 Kentucky 5245 29 Louisiana 5226 30 Alabama 4689 31 Connecticut 4448 32 Oklahoma 4408 33 Puerto Rico 4128 34 Arkansas 3812 35 Utah 3277 36 Nebraska 3145 37 Iowa 3084 38 Maine 3016 39 New Mexico 2819 40 Kansas 2693 41 Mississippi 2403 42 West Virginia 2240 43 North Dakota 2069 44 Alaska 1946 45 Montana 1878 46 Idaho 1781 47 Vermont 1454 48 New Hampshire 1447 49 Rhode Island 1384 50 Guam 1271 51 South Dakota 1094 52 Wyoming 953 53 Delaware 946 54 US Virgin Islands 482 . Question Hacks . What is NumPy and how is it used in data analysis? . NumPy is a Python library used for numerical operations and scientific computing in data analysis. | . What is Pandas and how is it used in data analysis? . Pandas is a Python library used for data manipulation, analysis, and visualization. | . How is NunPy different than Pandas for data analysis? . NumPy is used for numerical computations, while Pandas is used for data manipulation and analysis. | . What is a DataFrame? . A DataFrame is a data structure in Pandas that represents a table of rows and columns. | . What are some common operations you can perform with NunPy? . Some common operations in NumPy include array creation, slicing, indexing, and mathematical operations. | . How Can You Incorporate Either of these Data Analysis Tools (NunPy, Pandas) into your project? . You can incorporate either NumPy or Pandas into your project by importing the library in your Python code and using its functions and methods for data analysis and manipulation. | .",
            "url": "https://f1nnc.github.io/mysite/notebooks/2023/04/19/tri3_lesson.html",
            "relUrl": "/notebooks/2023/04/19/tri3_lesson.html",
            "date": " • Apr 19, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "CPT DRAFT (DIDNT DO TEST)",
            "content": "Github Code . First Learning how to make a calender . Link . Learning how to fetch data from a website . Link . Code that checks for username and password with API CRUD . Link . Simpflied Code . Link . Video . Link . Final Javascript Code and Writeup . const tableBody = document.querySelector(&#39;#table&#39;); const url = &quot;http://dolphins3.duckdns.org/api/users/&quot;; const calender_fetch = url + &#39;/calender&#39;; const weekdays = [&quot;monday&quot;, &quot;tuesday&quot;, &quot;wednesday&quot;, &quot;thursday&quot;, &quot;friday&quot;, &quot;saturday&quot;, &quot;sunday&quot;]; const urls = {}; for (const day of weekdays) { urls[day] = `${url}/${day}`; urls[`delete_${day}`] = `${url}/delete_${day}`; urls[`update_${day}`] = `${url}/update_${day}`; } if (sessionStorage.getItem(&quot;uid&quot;) == null) { location.href = &quot;https://jakewarren2414.github.io/dolphins2/login&quot;; } const body = { username: sessionStorage.getItem(&quot;uid&quot;) }; const requestOptions = { method: &#39;POST&#39;, body: JSON.stringify(body), headers: { &quot;content-type&quot;: &quot;application/json&quot;, }, }; fetch(calender_fetch, requestOptions) .then(response =&gt; { if (response.status !== 200) { const errorMsg = &#39;Database create error: &#39; + response.status; console.log(errorMsg); return; } response.json().then(data =&gt; { document.getElementById(&quot;monday&quot;).innerHTML = data.monday; document.getElementById(&quot;tuesday&quot;).innerHTML = data.tuesday; document.getElementById(&quot;wednesday&quot;).innerHTML = data.wednesday; document.getElementById(&quot;thursday&quot;).innerHTML = data.thursday; document.getElementById(&quot;friday&quot;).innerHTML = data.friday; document.getElementById(&quot;saturday&quot;).innerHTML = data.saturday; document.getElementById(&quot;sunday&quot;).innerHTML = data.sunday; }) }) function Update() { const input = document.getElementById(&quot;input&quot;).value; const week = document.getElementById(&quot;week&quot;).value; const body = { username: sessionStorage.getItem(&quot;uid&quot;) }; body[week] = input; const request = { method: &#39;POST&#39;, body: JSON.stringify(body), headers: { &quot;content-type&quot;: &quot;application/json&quot;, }, }; const url = urls[`update_${week}`]; fetch(url, request) .then(response =&gt; { if (response.status !== 200) { const errorMsg = &#39;Database create error: &#39; + response.status; console.log(errorMsg); return; } response.json().then(data =&gt; { document.getElementById(week).innerHTML = data[week]; }) }) } function Add() { const input = document.getElementById(&quot;input&quot;).value; const week = document.getElementById(&quot;week&quot;).value; const fetchUrl = ${week}_fetch; const dayValue = ${week}; const dayBody = { username: sessionStorage.getItem(&quot;uid&quot;), [dayValue]: input }; const dayRequest = { method: &#39;POST&#39;, body: JSON.stringify(dayBody), headers: { &quot;content-type&quot;: &quot;application/json&quot;, }, }; fetch(fetchUrl, dayRequest) .then(response =&gt; { if (response.status !== 200) { const errorMsg = Database create error: ${response.status}; console.log(errorMsg); return; } response.json().then(data =&gt; { document.getElementById(week).innerHTML = data[dayValue]; }) }) } function Remove() { const week = document.getElementById(&quot;week&quot;).value; const delete_body = { username: sessionStorage.getItem(&quot;uid&quot;) }; const days = [&quot;monday&quot;, &quot;tuesday&quot;, &quot;wednesday&quot;, &quot;thursday&quot;, &quot;friday&quot;, &quot;saturday&quot;, &quot;sunday&quot;]; const delete_site = &quot;delete_site_url&quot;; if (days.includes(week)) { const delete_request = { method: &#39;POST&#39;, body: JSON.stringify(delete_body), headers: { &quot;content-type&quot;: &quot;application/json&quot; }, }; fetch(`${delete_site}/${week}`, delete_request) .then(response =&gt; { if (response.status !== 200) { const errorMsg = `Database create error: ${response.status}`; console.log(errorMsg); return; } response.json().then(data =&gt; { document.getElementById(week).innerHTML = data[week]; }) }) } } . Procedural Abstraction: . The provided JavaScript code follows the procedural abstraction technique as it breaks down the functionality of the code into multiple functions like Update(), Add(), and Remove(). Additionally, it uses classes like fetch() to fetch data from the server and manipulate it based on user actions. . Data Abstraction: . The JavaScript code uses JSON data structure to store user information and calendar data. It also uses a dictionary urls to store the URLs for different user actions like update, delete, etc. Moreover, the data stored in the database tables are abstracted using HTTP methods like GET, POST, PUT, DELETE which are called to manipulate the data. . Usage of Control Structures: . The JavaScript code uses iteration and conditional statements to display calendar data on the frontend using a loop to iterate through the weekdays. It also uses conditional statements to handle errors that may occur when manipulating data on the backend. For example, the if (response.status !== 200) statement is used to handle errors when the server returns a status other than 200. The Update() function also shows a different result when executed with different parameters, updating the calendar for the day that the user selects. .",
            "url": "https://f1nnc.github.io/mysite/2023/04/14/CPTWRITE.html",
            "relUrl": "/2023/04/14/CPTWRITE.html",
            "date": " • Apr 14, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "EOY PROJECT PLAN PLAYGROUND",
            "content": "",
            "url": "https://f1nnc.github.io/mysite/2023/04/03/EOYPLAYGROUND.html",
            "relUrl": "/2023/04/03/EOYPLAYGROUND.html",
            "date": " • Apr 3, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "MCQ4",
            "content": "Score . . Corrections . . Q16 . My Answer: To determine the time of day that the site is most active | Correct Answer: To determine the topics that many users are posting about | Response: Because the topics that the users are posting are more imporant for idenifying | . . Q23 . My Answer: An online retailer analyzing customers’ viewing habits to suggest other products based on the purchasing history of other customers | Correct Answer: A high school analyzing student grades to identify the students with the top ten highest grade point averages | Response: This option is incorrect. Suggestions for other products to purchase based on viewed items is a useful pattern for an online retailer to find. A collection of all the products their customers are viewing is a large data set. | . . Q34 . My Answer: Show that for one instance of the problem, a heuristic is needed to write an algorithm that is capable of providing a correct yes-or-no answer. | Correct Answer: Show that for one instance of the problem, no algorithm can be written that is capable of providing a correct yes-or-no answer. | Response: Incorrect. This statement does not provide enough information to conclude that the problem is undecidable. This states that a heuristic is used for one instance of the problem. If it could be shown that an algorithm can be constructed that is always capable of providing a correct yes-or-no answer for all other instances of this problem, then this problem would be decidable. | . . Q49 . My Answer: Answer D | Correct Answer: Answer A | Response: Incorrect. This code segment traverses the entire list and compares all elements in the list to the first element. This includes comparing the first element to itself, which will always evaluate to true; however, the first element in the list does not represent a student’s score. | .",
            "url": "https://f1nnc.github.io/mysite/MCQ4",
            "relUrl": "/MCQ4",
            "date": " • Apr 2, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "Data Structures- Hashmaps, Sets, Hash Tables, Hashing and Collisions",
            "content": "What is a Hashtable/Hashmap? . A hashtable is a data structure that with a collection of key-value pairs, where each key maps to a value, and the keys must be unique and hashable. . In Python there is a built in hashtable known as a Dictonary. | . The primary purpose of a hashtable is to provide efficient lookup, insertion, and deletion operations. When an element is to be inserted into the hashtable, a hash function is used to map the key to a specific index in the underlying array that is used to store the key-value pairs. The value is then stored at that index. When searching for a value, the hash function is used again to find the index where the value is stored. . The key advantage of a hashtable over other data structures like arrays and linked lists is its average-case time complexity for lookup, insertion, and deletion operations. . The typical time complexity of a hashtable is 1. | . What is Hashing and Collision? . Hashing is the process of mapping a given key to a value in a hash table or hashmap, using a hash function. The hash function takes the key as input and produces a hash value or hash code, which is then used to determine the index in the underlying array where the value is stored. The purpose of hashing is to provide a quick and efficient way to access data, by eliminating the need to search through an entire data structure to find a value. . However, it is possible for two different keys to map to the same hash value, resulting in a collision. When a collision occurs, there are different ways to resolve it, depending on the collision resolution strategy used. . Python&#39;s dictionary implementation is optimized to handle collisions efficiently, and the performance of the dictionary is generally very good, even in the presence of collisions. However, if the number of collisions is very high, the performance of the dictionary can degrade, so it is important to choose a good hash function that minimizes collisions when designing a Python dictionary. . What is a Set? . my_set = set([1, 2, 3, 2, 1]) print(my_set) # What do you notice in the output? # its in numbered ordered, and doesn&#39;t do the repeated value # # Why do you think Sets are in the same tech talk as Hashmaps/Hashtables? # Because they both have collison # . {1, 2, 3} . Dictionary Example . Below are just some basic features of a dictionary. As always, documentation is always the main source for all the full capablilties. . lover_album = { &quot;title&quot;: &quot;Lover&quot;, &quot;artist&quot;: &quot;Taylor Swift&quot;, &quot;year&quot;: 2019, &quot;genre&quot;: [&quot;Pop&quot;, &quot;Synth-pop&quot;], &quot;tracks&quot;: { 1: &quot;I Forgot That You Existed&quot;, 2: &quot;Cruel Summer&quot;, 3: &quot;Lover&quot;, 4: &quot;The Man&quot;, 5: &quot;The Archer&quot;, 6: &quot;I Think He Knows&quot;, 7: &quot;Miss Americana &amp; The Heartbreak Prince&quot;, 8: &quot;Paper Rings&quot;, 9: &quot;Cornelia Street&quot;, 10: &quot;Death By A Thousand Cuts&quot;, 11: &quot;London Boy&quot;, 12: &quot;Soon You&#39;ll Get Better (feat. Dixie Chicks)&quot;, 13: &quot;False God&quot;, 14: &quot;You Need To Calm Down&quot;, 15: &quot;Afterglow&quot;, 16: &quot;Me! (feat. Brendon Urie of Panic! At The Disco)&quot;, 17: &quot;It&#39;s Nice To Have A Friend&quot;, 18: &quot;Daylight&quot; } } # What data structures do you see? # # # Printing the dictionary print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;Pop&#39;, &#39;Synth-pop&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;}} . print(lover_album.get(&#39;tracks&#39;)) # or print(lover_album[&#39;tracks&#39;]) . {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;} {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;} . print(lover_album.get(&#39;tracks&#39;)[4]) # or print(lover_album[&#39;tracks&#39;][4]) . The Man The Man . lover_album[&quot;producer&quot;] = set([&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;]) # What can you change to make sure there are no duplicate producers? # Make it into a set # # Printing the dictionary print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;Pop&#39;, &#39;Synth-pop&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;, 19: &#39;All Of The Girls You Loved Before&#39;}, &#39;producer&#39;: {&#39;Frank Dukes&#39;, &#39;Louis Bell&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;}} . lover_album[&quot;tracks&quot;].update({19: &quot;All Of The Girls You Loved Before&quot;}) lover_album[&quot;genre&quot;].append(&quot;Electropop&quot;) # How would add an additional genre to the dictionary, like electropop? # do the .update() # # Printing the dictionary print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;Pop&#39;, &#39;Synth-pop&#39;, &#39;Electropop&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;, 19: &#39;All Of The Girls You Loved Before&#39;}, &#39;producer&#39;: {&#39;Frank Dukes&#39;, &#39;Louis Bell&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;}} . for k,v in lover_album.items(): # iterate using a for loop for key and value print(str(k) + &quot;: &quot; + str(v)) for i in lover_album.get(&quot;tracks&quot;): track = track + lover_album[&quot;tracks&quot;][i] print(f&quot;I love {track}&quot;) # Write your own code to print tracks in readable format # # . title: Lover artist: Taylor Swift year: 2019 genre: [&#39;Pop&#39;, &#39;Synth-pop&#39;, &#39;Electropop&#39;] tracks: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;, 19: &#39;All Of The Girls You Loved Before&#39;} producer: {&#39;Frank Dukes&#39;, &#39;Louis Bell&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;} I love I Forgot That You Existed I love Cruel Summer I love Lover I love The Man I love The Archer I love I Think He Knows I love Miss Americana &amp; The Heartbreak Prince I love Paper Rings I love Cornelia Street I love Death By A Thousand Cuts I love London Boy I love Soon You&#39;ll Get Better (feat. Dixie Chicks) I love False God I love You Need To Calm Down I love Afterglow I love Me! (feat. Brendon Urie of Panic! At The Disco) I love It&#39;s Nice To Have A Friend I love Daylight I love All Of The Girls You Loved Before . def search(): search_term = input(&quot;What would you like to know about the album?&quot;) print(search_term) search_results = [] for key in lover_album.keys(): if search_term.lower() in key: search_results.append(lover_album[key]) print(search_results) if not search_results: print(&quot;Invalid search&quot;) search() # This is a very basic code segment, how can you improve upon this code? # add capitalization handling . TrACks [{1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;, 19: &#39;All Of The Girls You Loved Before&#39;}] . Hacks . Answer ALL questions in the code segments | Create a diagram or comparison illustration (Canva). . What are the pro and cons of using this data structure? | Dictionary vs List | . | Expand upon the code given to you, possible improvements in comments . Could you list compression instead of so many for loops | Added captalizion error handling in the search function | . | Build your own album showing features of a python dictionary . | For Mr. Yeung&#39;s class: Justify your favorite Taylor Swift song, answer may effect seed . | . Hacks Answered . Dict Pros: Keys for fast access, Memory Effecient, Retrive Values with keys | Cons: Unorded, More Overhead, Immutable keys | . | List . Pros: Ordered, Mutable (add,remove,update lists), Memory Effiecent | Cons: Slow access time, No key value mapping, not good for large datasets | . | Expand upon the code given to you, possible improvements in comments . Could you list compression instead of so many for loops | Added captalizion error handling in the search function | . | . My own Album . WhoReallyCares = { &quot;title&quot;: &quot;Who Really Cares&quot;, &quot;artist&quot;: &quot;TV Girl&quot;, &quot;year&quot;: 2019, &quot;genre&quot;: [&quot;Indie&quot;], &quot;tracks&quot;: { 1: &quot;Taking What&#39;s Not Yours&quot;, 2: &quot;Song About Me&quot;, 3: &quot;Cigaretts out the Window&quot;, 4: &quot;Till You Tell Me to Leave&quot;, 5: &quot;Not Allowed&quot;, 6: &quot;(Do The) Act Like You Never Met Me&quot;, 7: &quot;Safeword&quot;, 8: &quot;For You&quot;, 9: &quot;Loving Machine&quot;, 10: &quot;Heaven Is a Bedroom&quot; } } ## Using SET WhoReallyCares[&quot;biggest fan&quot;] = set([&#39;Finn Carpenter&#39;, &#39;Finn Carpenter&#39;, &#39;Finn Carpenter&#39;, &#39;Finn Carpenter&#39;, &#39;Finn Carpenter&#39;, &#39;Finn Carpenter&#39;, &#39;Finn Carpenter&#39;, &#39;Nobody Else&#39; ]) print(WhoReallyCares[&quot;biggest fan&quot;]) ## Gets all the track names and puts them into a list track_names = [track_name for track_name in WhoReallyCares[&quot;tracks&quot;].values()] print(track_names) ## I love &quot;insert song name&quot; + list comprehenison using GET _ = [print(f&quot;I love {WhoReallyCares[&#39;tracks&#39;][i]}&quot;) for i in WhoReallyCares.get(&quot;tracks&quot;)] . {&#39;Finn Carpenter&#39;, &#39;Nobody Else&#39;} [&#34;Taking What&#39;s Not Yours&#34;, &#39;Song About Me&#39;, &#39;Cigaretts out the Window&#39;, &#39;Till You Tell Me to Leave&#39;, &#39;Not Allowed&#39;, &#39;(Do The) Act Like You Never Met Me&#39;, &#39;Safeword&#39;, &#39;For You&#39;, &#39;Loving Machine&#39;, &#39;Heaven Is a Bedroom&#39;] I love Taking What&#39;s Not Yours I love Song About Me I love Cigaretts out the Window I love Till You Tell Me to Leave I love Not Allowed I love (Do The) Act Like You Never Met Me I love Safeword I love For You I love Loving Machine I love Heaven Is a Bedroom .",
            "url": "https://f1nnc.github.io/mysite/2023/03/29/DS-hashmaps.html",
            "relUrl": "/2023/03/29/DS-hashmaps.html",
            "date": " • Mar 29, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "Unit 4.3a Parallel Computing",
            "content": "Analyzing Parallel Computing . Once again we will use image lab, this time to review Parallel Computing. . Change baseWidth in this line in code to increase computation requirements:def process_image(image, baseWidth=512): For instance 320, 512, 1024, 2048, 4096.- Compare Sequential and Parallel computing code and time to achieve outputs | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as PIL Image is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Scale to baseWidth def scale_image(img, baseWidth): scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Convert pixels to Grey Scale def grey_pixel(pixel): average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: return( (average, average, average, pixel[3]) ) # PNG format else: return( (average, average, average) ) # Convert pixels to Red Scale def red_pixel(pixel): if len(pixel) &gt; 3: return( (pixel[0], 0, 0, pixel[3]) ) # PNG format else: return( (pixel[0], 0, 0) ) # Convert pixels to Red Scale def green_pixel(pixel): if len(pixel) &gt; 3: return( (0, pixel[1], 0, pixel[3]) ) # PNG format else: return( (0, pixel[1], 0) ) # Convert pixels to Red Scale def blue_pixel(pixel): if len(pixel) &gt; 3: return( (0, 0, pixel[2], pixel[3]) ) # PNG format else: return( (0, 0, pixel[2]) ) # Set Properties of Image, Scale, and convert to Base64 def image_management(image, baseWidth): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img, baseWidth) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size image[&#39;numpy&#39;] = np.array(img.getdata()) # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Grey HTML # each pixel in numpy array is turned to grey # then resulting list, using List Comprehension, is put back into img img.putdata([grey_pixel(pixel) for pixel in image[&#39;numpy&#39;]]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, image[&#39;format&#39;]) # Red HTML img.putdata([red_pixel(pixel) for pixel in image[&#39;numpy&#39;]]) image[&#39;html_red&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, image[&#39;format&#39;]) # Green HTML img.putdata([green_pixel(pixel) for pixel in image[&#39;numpy&#39;]]) image[&#39;html_green&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, image[&#39;format&#39;]) # Blue HTML img.putdata([blue_pixel(pixel) for pixel in image[&#39;numpy&#39;]]) image[&#39;html_blue&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, image[&#39;format&#39;]) def process_image(image, baseWidth=2048): image_management(image, baseWidth) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- images --&quot;) display(HTML(image[&#39;html&#39;])) display(HTML(image[&#39;html_grey&#39;])) display(HTML(image[&#39;html_red&#39;])) display(HTML(image[&#39;html_green&#39;])) display(HTML(image[&#39;html_blue&#39;])) . Sequential Processing . The for loop iterates over the list of images and processes them one at a time, in order. . if __name__ == &quot;__main__&quot;: # setup default images images = image_data() # Sequential Processing for image in images: process_image(image) print() . Parallel Computing . In parallel or concurrent mode, the ThreadPoolExecutor is used to submit each image to a separate worker thread, allowing multiple images to be processed simultaneously. Multithreading allows multiple concurrent tasks of a process at the same time. The executor.map() method is used to apply the process_image function to each image in the images list. . The order in which the images are processed is not guaranteed, as threads are performed simultaneously. | . import concurrent.futures # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # setup default images images = image_data() # Parallel Processsing # executor allocates threads, it considers core execution capability of machine with concurrent.futures.ThreadPoolExecutor() as executor: executor.map(process_image, images) # order is not predictable print() . Observing Parallel Computing and Threads . You can observe Processes, CPU Percentage, and Threads with Tools on your machine. Common tools to monitor performance are Activity Monitor on MacOS or Task Manager on Windows. . This example is using top launched in VSCode Terminal. (mac) | Try top -H for linux. . PID is Process ID. | COMMAND is task running on machine. Python is activated when running this Jupyter notebook. | #TH is number of threads. This increases from 15/1 to 18/1 on my machine when running python parallel computing example. | . | . Hacks . AP Classroom. Provide answers and thoughts on theoritical question form college board Video in section 4.3. They start at about the 9 minute mark. . Example 1:It will take 50 seconds since one processor can do tasks Y and Z, which take 40 seconds, and the other can complete tasks X, which takes 50 seconds. This will take 50 seconds if these two events occur simultaneously.- Example 2: The time it would take to complete both tasks if they were executed simultaneously on the same CPU is 70 seconds. But, if the two tasks were performed simultaneously, it would be possible for one processor to finish in 25 seconds and the other in 45, resulting in a total processing time of 45 seconds. | . Data Structures. Build a List Comprehension example . list = [calc(item) for item in items] Printing the top scores on a game | . | . Users_Scores = { &quot;Users&quot;: { &quot;Gene&quot;: { &quot;High_Score&quot;: 123, }, &quot;James&quot;: { &quot;High_Score&quot;: 50, }, &quot;Finn&quot;: { &quot;High_Score&quot;: 160, }, &quot;Zeen&quot;: { &quot;High_Score&quot;: 130, }, &quot;Ediwn&quot;: { &quot;High_Score&quot;: 12, } } } Scores = {user: Users_Scores[&#39;Users&#39;][user] for user in Users_Scores[&#39;Users&#39;]} def sort_scores(scores): sorted_scores = dict(sorted(scores.items(), key=lambda x: x[1][&#39;High_Score&#39;], reverse=True)) return sorted_scores sorted_scores = sort_scores(Scores) print(sorted_scores) . {&#39;Finn&#39;: {&#39;High_Score&#39;: 160}, &#39;Zeen&#39;: {&#39;High_Score&#39;: 130}, &#39;Gene&#39;: {&#39;High_Score&#39;: 123}, &#39;James&#39;: {&#39;High_Score&#39;: 50}, &#39;Ediwn&#39;: {&#39;High_Score&#39;: 12}} .",
            "url": "https://f1nnc.github.io/mysite/fourthreea",
            "relUrl": "/fourthreea",
            "date": " • Mar 29, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "Big Idea 2 quiz",
            "content": ". Q17 . . My Answer: The method of payment that was used in the greatest number of transactions during the 7-day period can be determined by sorting the data by the method of payment, then adding the number of items purchased for each type of payment method, and then finding the maximum sum. | Correct Answer: The total number of items purchased on a given date can be determined by searching the data for all transactions that occurred on the given date and then adding the number of items purchased for each matching transaction. | Reflection: Incorrect. This information can be determined using the data collected, but not the way described in this option. One way to determine the method of payment that was used in the greatest number of transactions during the 7-day period is to sort the data by the method of payment as described. Instead of adding the number of items purchased for each type of payment, a count of each payment type needs to be computed. If the counts are stored in a new field, then the counts can be sorted to find the method of payment used in the greatest number of transactions. | . Q21 . . My Answer: Sort by subject, then sort by year, then filter by photographer | Correct Answer: Sort by year, then filter by year, then filter by photographer | Reflection: Incorrect. This sequence of steps does not remove any entries with an unknown year, so the entry in the first row of the spreadsheet will have a year value of -1. | . Q24 . . My Answer: 1001 0111 | Correct Answer: 1001 0100 | Reflection: 1001 0100 is the next number up from 1001 0011 | .",
            "url": "https://f1nnc.github.io/mysite/BI2",
            "relUrl": "/BI2",
            "date": " • Mar 25, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "Project Plans and N@TM",
            "content": "EOY and N@TM plans . EOY Project Plans . Explaining Iteration . Robot Game . To explain iteration better to people who want to learn we will try to make a working version of the college board robot question | It will make random questions | That teach about looping, and recursion | . . example problem Explain API . Pizza Game . | We will simulate how AI works by making a Pizza Game | Create = New Order, Delete = cancel an order, etc | It will be easy to explain, its how real life pizza place software works | . . Cool ER tree I found of ordering pizza | . N@TM . What were planning on adding . New Games . Two new games | One for Iteration, One for API | Will have the same core gameplay elements, but be diffrent scenarios | .",
            "url": "https://f1nnc.github.io/mysite/PP",
            "relUrl": "/PP",
            "date": " • Mar 24, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "Data Structures- Space and Time Complexity",
            "content": "Space and Time Complexity . Space complexity refers to the amount of memory used by an algorithm to complete its execution, as a function of the size of the input. The space complexity of an algorithm can be affected by various factors such as the size of the input data, the data structures used in the algorithm, the number and size of temporary variables, and the recursion depth. Time complexity refers to the amount of time required by an algorithm to run as the input size grows. It is usually measured in terms of the &quot;Big O&quot; notation, which describes the upper bound of an algorithm&#39;s time complexity. . Why do you think a programmer should care about space and time complexity? . ? | . Take a look at our lassen volcano example from the data compression tech talk. The first code block is the original image. In the second code block, change the baseWidth to rescale the image. . from IPython.display import Image, display from pathlib import Path # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) if __name__ == &quot;__main__&quot;: lassen_volcano = image_data(images=[{&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}]) image_display(lassen_volcano) . from IPython.display import HTML, display from pathlib import Path from PIL import Image as pilImage from io import BytesIO import base64 # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def scale_image(img): #baseWidth = 625 baseWidth = 1250 #baseWidth = 2500 baseWidth = 5000 # see the effect of doubling or halfing the baseWidth baseWidth = 10000 baseWidth = 20000 baseWidth = 40000 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size image[&#39;width&#39;], image[&#39;height&#39;] = img.size image[&#39;pixels&#39;] = image[&#39;width&#39;] * image[&#39;height&#39;] # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size image[&#39;scaled_width&#39;], image[&#39;scaled_height&#39;] = img.size image[&#39;scaled_pixels&#39;] = image[&#39;scaled_width&#39;] * image[&#39;scaled_height&#39;] # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data(images = [{&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}]) # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;], &quot; pixels: &quot;, f&quot;{image[&#39;pixels&#39;]:,}&quot;) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;], &quot; pixels: &quot;, f&quot;{image[&#39;scaled_pixels&#39;]:,}&quot;) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) . Do you think this is a time complexity or space complexity or both problem? . ? | . Big O Notation . Constant O(1) | Linear O(n) | Quadratic O(n^2) | Logarithmic O(logn) | Exponential (O(2^n)) | . numbers = list(range(1000)) print(numbers) . Constant O(1) . Time . An example of a constant time algorithm is accessing a specific element in an array. It does not matter how large the array is, accessing an element in the array takes the same amount of time. Therefore, the time complexity of this operation is constant, denoted by O(1). . print(numbers[263]) ncaa_bb_ranks = {1:&quot;Alabama&quot;,2:&quot;Houston&quot;, 3:&quot;Purdue&quot;, 4:&quot;Kansas&quot;} #look up a value in a dictionary given a key print(ncaa_bb_ranks[1]) . Space . This function takes two number inputs and returns their sum. The function does not create any additional data structures or variables that are dependent on the input size, so its space complexity is constant, or O(1). Regardless of how large the input numbers are, the function will always require the same amount of memory to execute. . def sum(a, b): return a + b print(sum(90,88)) print(sum(.9,.88)) . Linear O(n) . Time . An example of a linear time algorithm is traversing a list or an array. When the size of the list or array increases, the time taken to traverse it also increases linearly with the size. Hence, the time complexity of this operation is O(n), where n is the size of the list or array being traversed. . for i in numbers: print(i) . Space . This function takes a list of elements arr as input and returns a new list with the elements in reverse order. The function creates a new list reversed_arr of the same size as arr to store the reversed elements. The size of reversed_arr depends on the size of the input arr, so the space complexity of this function is O(n). As the input size increases, the amount of memory required to execute the function also increases linearly. . def reverse_list(arr): n = len(arr) reversed_arr = [None] * n #create a list of None based on the length or arr for i in range(n): reversed_arr[n-i-1] = arr[i] #stores the value at the index of arr to the value at the index of reversed_arr starting at the beginning for arr and end for reversed_arr return reversed_arr print(numbers) print(reverse_list(numbers)) . Quadratic O(n^2) . Time . An example of a quadratic time algorithm is nested loops. When there are two nested loops that both iterate over the same collection, the time taken to complete the algorithm grows quadratically with the size of the collection. Hence, the time complexity of this operation is O(n^2), where n is the size of the collection being iterated over. . for i in numbers: for j in numbers: print(i,j) . Space . This function takes two matrices matrix1 and matrix2 as input and returns their product as a new matrix. The function creates a new matrix result with dimensions m by n to store the product of the input matrices. The size of result depends on the size of the input matrices, so the space complexity of this function is O(n^2). As the size of the input matrices increases, the amount of memory required to execute the function also increases quadratically. . def multiply_matrices(matrix1, matrix2): m = len(matrix1) n = len(matrix2[0]) result = [[0] * n] * m #this creates the new matrix based on the size of matrix 1 and 2 for i in range(m): for j in range(n): for k in range(len(matrix2)): result[i][j] += matrix1[i][k] * matrix2[k][j] return result print(multiply_matrices([[1,2],[3,4]], [[3,4],[1,2]])) . Logarithmic O(logn) . Time . An example of a log time algorithm is binary search. Binary search is an algorithm that searches for a specific element in a sorted list by repeatedly dividing the search interval in half. As a result, the time taken to complete the search grows logarithmically with the size of the list. Hence, the time complexity of this operation is O(log n), where n is the size of the list being searched. . def binary_search(arr, low, high, target): while low &lt;= high: mid = (low + high) // 2 #integer division if arr[mid] == target: return mid elif arr[mid] &lt; target: low = mid + 1 else: high = mid - 1 target = 263 result = binary_search(numbers, 0, len(numbers) - 1, target) print(result) . Space . The same algorithm above has a O(logn) space complexity. The function takes an array arr, its lower and upper bounds low and high, and a target value target. The function searches for target within the bounds of arr by recursively dividing the search space in half until the target is found or the search space is empty. The function does not create any new data structures that depend on the size of arr. Instead, the function uses the call stack to keep track of the recursive calls. Since the maximum depth of the recursive calls is O(logn), where n is the size of arr, the space complexity of this function is O(logn). As the size of arr increases, the amount of memory required to execute the function grows logarithmically. . Exponential O(2^n) . Time . An example of an O(2^n) algorithm is the recursive implementation of the Fibonacci sequence. The Fibonacci sequence is a series of numbers where each number is the sum of the two preceding ones, starting from 0 and 1. The recursive implementation of the Fibonacci sequence calculates each number by recursively calling itself with the two preceding numbers until it reaches the base case (i.e., the first or second number in the sequence). The algorithm takes O(2^n) time in the worst case because it has to calculate each number in the sequence by making two recursive calls. . def fibonacci(n): if n &lt;= 1: return n else: return fibonacci(n-1) + fibonacci(n-2) #print(fibonacci(5)) #print(fibonacci(10)) #print(fibonacci(20)) #print(fibonacci(34)) print(fibonacci(40)) . Space . This function takes a set s as input and generates all possible subsets of s. The function does this by recursively generating the subsets of the set without the first element, and then adding the first element to each of those subsets to generate the subsets that include the first element. The function creates a new list for each recursive call that stores the subsets, and each element in the list is a new list that represents a subset. The number of subsets that can be generated from a set of size n is 2^n, so the space complexity of this function is O(2^n). As the size of the input set increases, the amount of memory required to execute the function grows exponentially. . def generate_subsets(s): if not s: return [[]] subsets = generate_subsets(s[1:]) return [[s[0]] + subset for subset in subsets] + subsets print(generate_subsets([1,2,3])) #print(generate_subsets(numbers)) . [[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3], []] . Using the time library, we are able to see the difference in time it takes to calculate the fibonacci function above. . Based on what is known about the other time complexities, hypothesize the resulting elapsed time if the function is replaced. | . import time start_time = time.time() print(fibonacci(34)) end_time = time.time() total_time = end_time - start_time print(&quot;Time taken:&quot;, total_time, &quot;seconds&quot;) start_time = time.time() print(fibonacci(36)) end_time = time.time() total_time = end_time - start_time print(&quot;Time taken:&quot;, total_time, &quot;seconds&quot;) . 5702887 Time taken: 3.258676528930664 seconds 14930352 Time taken: 6.700835466384888 seconds . Hacks . Record your findings when testing the time elapsed of the different algorithms. | Although we will go more in depth later, time complexity is a key concept that relates to the different sorting algorithms. Do some basic research on the different types of sorting algorithms and their time complexity. | Why is time and space complexity important when choosing an algorithm? | Should you always use a constant time algorithm / Should you never use an exponential time algorithm? Explain? | What are some general patterns that you noticed to determine each algorithm&#39;s time and space complexity? | . Complete the Time and Space Complexity analysis questions linked below. Practice .",
            "url": "https://f1nnc.github.io/mysite/spacetime",
            "relUrl": "/spacetime",
            "date": " • Mar 22, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "My Homework DB",
            "content": "Instantiate the DB . &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///hw.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) . Making the table . &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class User(db.Model): __tablename__ = &#39;homework&#39; # table teacher is plural, class teacher is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _teacher = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _password = db.Column(db.String(255), unique=False, nullable=False) _hw = db.Column(db.String(255), unique=False, nullable=False) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, teacher, uid, hw, password=&quot;123qwerty&quot;): self._teacher = teacher self._uid = uid self.hw = hw self.set_password(password) # a teacher getter method, extracts teacher from object @property def teacher(self): return self._teacher # a setter function, allows teacher to be updated after initial object creation @teacher.setter def teacher(self, teacher): self._teacher = teacher # a getter method, extracts uid from object @property def uid(self): return self._uid # a setter function, allows uid to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def hw(self): return self._hw # a setter function, allows teacher to be updated after initial object creation @hw.setter def hw(self, hw): self._hw = hw @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional method used for setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter against stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) is in human readable form # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;teacher&quot;: self.teacher, &quot;uid&quot;: self.uid, &quot;hw&quot;: self.hw, } # CRUD update: updates user teacher, password, phone # returns self def update(self, teacher=&quot;&quot;, uid=&quot;&quot;, hw=&quot;&quot;, password=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(teacher) &gt; 0: self.teacher = teacher if len(uid) &gt; 0: self.uid = uid if len(hw) &gt; 0: self.hw = hw if len(password) &gt; 0: self.set_password(password) return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None . Local Data . &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; u1 = User(teacher=&#39;Mr. Mortensen&#39;, uid=&#39;bigmort123&#39;, hw=&#39;Hacks for 2.4a and b&#39;, password=&#39;123toby&#39;) u2 = User(teacher=&#39;Ms. Calicot&#39;, uid=&#39;ilovechem&#39;, hw=&#39;Compound Worksheet&#39;, password=&#39;123niko&#39;) u3 = User(teacher=&#39;Mr. Curry&#39;, uid=&#39;CurrysWorld&#39;, hw=&#39;Russia Worksheet&#39;, password=&#39;123lex&#39;) u4 = User(teacher=&#39;Ms. Boehm&#39;, uid=&#39;englishrocks&#39;, hw=&#39;Logical Fallicies Worksheet&#39;, password=&#39;123lex&#39;) u5 = User(teacher=&#39;Ms. Huang&#39;, uid=&#39;mathontop&#39;, hw=&#39;Problems 7-45 to 7-50&#39;, password=&#39;123lex&#39;) users = [u1, u2, u3, u4, u5] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for user in users: try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = user.create() print(f&quot;Created new uid {object.uid}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {user.uid}, or error.&quot;) initUsers() . Records exist uid bigmort123, or error. Records exist uid ilovechem, or error. Records exist uid CurrysWorld, or error. Records exist uid englishrocks, or error. Records exist uid mathontop, or error. . Cred Check . def find_by_uid(uid): with app.app_context(): user = User.query.filter_by(_uid=uid).first() return user # returns user object # Check credentials by finding user and verify password def check_credentials(uid, password): # query email and return user record user = find_by_uid(uid) if user == None: return False if (user.is_password(password)): return True return False check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) . False . Methods (CRUD) . Create . def hw_create(): # optimize user time to see if uid exists uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object teacher = input(&quot;Enter your teaching name:&quot;) password = input(&quot;Enter your password&quot;) hw = input(&quot;Enter the homework that is due&quot;) # Initialize User object before date user = User(teacher=teacher, uid=uid, hw=hw, password=password, ) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) # hw_create() . Read . def hw_read(): with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready hw_read() . [{&#39;id&#39;: 1, &#39;teacher&#39;: &#39;Mr. Mortensen&#39;, &#39;uid&#39;: &#39;bigmort123&#39;, &#39;hw&#39;: &#39;Hacks for 2.4a and b&#39;}, {&#39;id&#39;: 2, &#39;teacher&#39;: &#39;Ms. Calicot&#39;, &#39;uid&#39;: &#39;ilovechem&#39;, &#39;hw&#39;: &#39;Compound Worksheet&#39;}, {&#39;id&#39;: 3, &#39;teacher&#39;: &#39;Mr. Curry&#39;, &#39;uid&#39;: &#39;CurrysWorld&#39;, &#39;hw&#39;: &#39;Russia Worksheet&#39;}, {&#39;id&#39;: 4, &#39;teacher&#39;: &#39;Ms. Boehm&#39;, &#39;uid&#39;: &#39;englishrocks&#39;, &#39;hw&#39;: &#39;Logical Fallicies Worksheet&#39;}, {&#39;id&#39;: 5, &#39;teacher&#39;: &#39;Ms. Huang&#39;, &#39;uid&#39;: &#39;mathontop&#39;, &#39;hw&#39;: &#39;Problems 7-45 to 7-50&#39;}, {&#39;id&#39;: 6, &#39;teacher&#39;: &#39;Mr. Moulten&#39;, &#39;uid&#39;: &#39;chemrockss&#39;, &#39;hw&#39;: &#39;No Homework&#39;}] . Delete . def hw_delete(): # Checking for user before delete teach = input(&quot;Input your uid: &quot;) passs = input(&quot;Input your password: &quot;) if check_credentials(teach, passs) == False: return else: pass with app.app_context(): # find the user matching the input uid user = User.query.filter_by(_uid=teach).first() if user.hw == &quot;No Homework&quot;: return &quot;Homework is already none&quot; else: user.hw = &quot;No Homework&quot; db.session.commit() return &quot;Homework deleted, hopefully no more :).&quot; # hw_delete() . Update . def hw_update(): # Checking for user before delete teach = input(&quot;Input your uid: &quot;) passs = input(&quot;Input your password: &quot;) if check_credentials(teach, passs) == False: return else: pass newhw = input(&quot;What HW would you like to add&quot;) with app.app_context(): # find the user matching the input uid user = User.query.filter_by(_uid=teach).first() user.hw = &quot;&quot; user.hw = newhw db.session.commit() return user.hw # hw_update() . Schema . import sqlite3 database = &#39;instance/hw.db&#39; # this is location of database def hw_schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;homework&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() return conn # hw_schema() . Menu . def hw_update(): # Checking for user before delete teach = input(&quot;Input your uid: &quot;) passs = input(&quot;Input your password: &quot;) if check_credentials(teach, passs) == False: return else: pass newhw = input(&quot;What HW would you like to add&quot;) with app.app_context(): # find the user matching the input uid user = User.query.filter_by(_uid=teach).first() if user.hw == &quot;No Homework&quot;: user.hw = &quot;&quot; user.hw = newhw print(&quot;Read&quot;) print(user) else: user.hw = user.hw + &quot;, &quot; + newhw print(&quot;Read&quot;) print(user) db.session.commit() return # Delete method def hw_delete(): # Checking for user before delete teach = input(&quot;Input your uid: &quot;) passs = input(&quot;Input your password: &quot;) if check_credentials(teach, passs) == False: return else: pass with app.app_context(): # find the user matching the input uid user = User.query.filter_by(_uid=teach).first() if user.hw == &quot;No Homework&quot;: return &quot;Homework is already none&quot; else: user.hw = &quot;No Homework&quot; print(&quot;Homework Gone&quot;) print(user) db.session.commit() return # SQLAlchemy extracts all users from database, turns each user into JSON def hw_read(): with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready # Inputs, Try/Except, and SQLAlchemy work together to build a valid database object def hw_create(): # optimize user time to see if uid exists admin = input(&quot;Enter the Admin password&quot;) if admin == &quot;123poway&quot;: pass else: print(&quot;Wrong Password&quot;) return uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object teacher = input(&quot;Enter your teaching name:&quot;) password = input(&quot;Enter your password&quot;) hw = input(&quot;Enter the homework that is due&quot;) if hw == &quot;&quot;: hw = &quot;No Homework&quot; # Initialize User object before date user = User(teacher=teacher, uid=uid, hw=hw, password=password, ) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) def hw_schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;homework&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() return conn # hw_schema() print(&quot;--&quot;) print(&quot;Select an option:&quot;) print(&quot;1. Create Account&quot;) print(&quot;2. Read homework&quot;) print(&quot;3. Update homework&quot;) print(&quot;4. Delete Account&quot;) print(&quot;5. Schema&quot;) print(&quot;0. Exit&quot;) print(&quot;--&quot;) def menu(): choice = input(&quot;Enter your choice: &quot;) if choice == &quot;1&quot;: hw_create() print(&quot;--&quot;) elif choice == &quot;2&quot;: read = hw_read() print(&quot;Read&quot;) for i in read: print(i) print(&quot;--&quot;) elif choice == &quot;3&quot;: hw_update() print(&quot;--&quot;) elif choice == &quot;4&quot;: hw_delete() print(&quot;--&quot;) elif choice == &quot;5&quot;: hw_schema() print(&quot;--&quot;) elif choice == &quot;0&quot;: return else: print(&quot;Invalid choice. Please try again.&quot;) menu() # recursion to keep the menu going # Start the menu menu() . -- Select an option: 1. Create Account 2. Read homework 3. Update homework 4. Delete Account 5. Schema 0. Exit -- Read {&#39;id&#39;: 1, &#39;teacher&#39;: &#39;Mr. Mortensen&#39;, &#39;uid&#39;: &#39;bigmort123&#39;, &#39;hw&#39;: &#39;Hacks for 2.4a and b&#39;} {&#39;id&#39;: 2, &#39;teacher&#39;: &#39;Ms. Calicot&#39;, &#39;uid&#39;: &#39;ilovechem&#39;, &#39;hw&#39;: &#39;Compound Worksheet&#39;} {&#39;id&#39;: 3, &#39;teacher&#39;: &#39;Mr. Curry&#39;, &#39;uid&#39;: &#39;CurrysWorld&#39;, &#39;hw&#39;: &#39;Russia Worksheet&#39;} {&#39;id&#39;: 4, &#39;teacher&#39;: &#39;Ms. Boehm&#39;, &#39;uid&#39;: &#39;englishrocks&#39;, &#39;hw&#39;: &#39;Logical Fallicies Worksheet&#39;} {&#39;id&#39;: 5, &#39;teacher&#39;: &#39;Ms. Huang&#39;, &#39;uid&#39;: &#39;mathontop&#39;, &#39;hw&#39;: &#39;Problems 7-45 to 7-50&#39;} {&#39;id&#39;: 6, &#39;teacher&#39;: &#39;Mr. Moulten&#39;, &#39;uid&#39;: &#39;chemrockss&#39;, &#39;hw&#39;: &#39;No Homework&#39;} -- Created {&#39;id&#39;: 7, &#39;teacher&#39;: &#39;Mr. Campeo&#39;, &#39;uid&#39;: &#39;campeo&#39;, &#39;hw&#39;: &#39;No Homework&#39;} -- Invalid choice. Please try again. Invalid choice. Please try again. -- Read {&#34;id&#34;: 7, &#34;teacher&#34;: &#34;Mr. Campeo&#34;, &#34;uid&#34;: &#34;campeo&#34;, &#34;hw&#34;: &#34;worksheet&#34;} -- Read {&#39;id&#39;: 1, &#39;teacher&#39;: &#39;Mr. Mortensen&#39;, &#39;uid&#39;: &#39;bigmort123&#39;, &#39;hw&#39;: &#39;Hacks for 2.4a and b&#39;} {&#39;id&#39;: 2, &#39;teacher&#39;: &#39;Ms. Calicot&#39;, &#39;uid&#39;: &#39;ilovechem&#39;, &#39;hw&#39;: &#39;Compound Worksheet&#39;} {&#39;id&#39;: 3, &#39;teacher&#39;: &#39;Mr. Curry&#39;, &#39;uid&#39;: &#39;CurrysWorld&#39;, &#39;hw&#39;: &#39;Russia Worksheet&#39;} {&#39;id&#39;: 4, &#39;teacher&#39;: &#39;Ms. Boehm&#39;, &#39;uid&#39;: &#39;englishrocks&#39;, &#39;hw&#39;: &#39;Logical Fallicies Worksheet&#39;} {&#39;id&#39;: 5, &#39;teacher&#39;: &#39;Ms. Huang&#39;, &#39;uid&#39;: &#39;mathontop&#39;, &#39;hw&#39;: &#39;Problems 7-45 to 7-50&#39;} {&#39;id&#39;: 6, &#39;teacher&#39;: &#39;Mr. Moulten&#39;, &#39;uid&#39;: &#39;chemrockss&#39;, &#39;hw&#39;: &#39;No Homework&#39;} {&#39;id&#39;: 7, &#39;teacher&#39;: &#39;Mr. Campeo&#39;, &#39;uid&#39;: &#39;campeo&#39;, &#39;hw&#39;: &#39;worksheet&#39;} -- -- Homework Gone {&#34;id&#34;: 7, &#34;teacher&#34;: &#34;Mr. Campeo&#34;, &#34;uid&#34;: &#34;campeo&#34;, &#34;hw&#34;: &#34;No Homework&#34;} -- .",
            "url": "https://f1nnc.github.io/mysite/hwdb",
            "relUrl": "/hwdb",
            "date": " • Mar 17, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "Unit 2.4b Using Programs with Data, SQLAlchemy",
            "content": "Database Programming is Program with Data . Each Tri 2 Final Project should be an example of a Program with Data. . Prepare to use SQLite in common Imperative Technique . Explore SQLite Connect object to establish database connection- Explore SQLite Cursor Object to fetch data from a table within a database | . Schema of Users table in Sqlite.db . Uses PRAGMA statement to read schema. . Describe Schema, here is resource Resource- What is a database schema? . - It defines how the data is organized and how it can be accessed and modified by users and applications. . What is the purpose of identity Column in SQL database? It can be used as a primary key or as a reference in foreign keys to establish relationships between tables. | . | What is the purpose of a primary key in SQL database? It ensures that no two rows have the same values in the primary key column, and it can be used as a reference in foreign keys to establish relationships between tables. | . | What are the Data Types in SQL table? Common data types include integer, real, text, and blob, and each has a specific range of values and storage requirements. | . | . import sqlite3 database = &#39;instance/hw.db&#39; # this is location of database def hw_schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;homework&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() hw_schema() . (0, &#39;id&#39;, &#39;INTEGER&#39;, 1, None, 1) (1, &#39;_teacher&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (2, &#39;_uid&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (3, &#39;_password&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (4, &#39;_hw&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) . Reading Users table in Sqlite.db . Uses SQL SELECT statement to read data . What is a connection object? After you google it, what do you think it does? It provides methods for connecting to a database, executing SQL statements, and managing transactions. | . | Same for cursor object? It provides methods for navigating the result set, fetching rows, and executing SQL statements. | . | Look at conn object and cursor object in VSCode debugger. What attributes are in the object? Connection object:- database: the name of the connected database - user: the name of the user used to connect to the database host: the name of the host or IP address of the database server | port: the port number used to connect to the database server | . | Cursor object: description: a list of tuples that describes the columns in the current result set | rowcount: the number of rows affected by the last SQL statement | . | . | Is &quot;results&quot; an object? How do you know? Yes because it has attriubutes | . | . import sqlite3 def hw_read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM homework&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() # hw_read() . Create a new User in table in Sqlite.db . Uses SQL INSERT to add row . Compore create() in both SQL lessons. What is better or worse in the two implementations? | Explain purpose of SQL INSERT. Is this the same as User init? | . import sqlite3 def hw_create(): Teacher = input(&quot;Enter your name: Ms/Mr (blank)&quot;) uid = input(&quot;Enter your user id:&quot;) homework = input(&quot;Enter the homework&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO hw (_name, _uid, _homework) VALUES (?, ?, ?)&quot;, (Teacher, uid, homework)) # Commit the changes to the database conn.commit() print(f&quot;A new user record {uid} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() # hw_create() . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . What does the hacked part do? | Explain try/except, when would except occur? | What code seems to be repeated in each of these examples to point, why is it repeated? | . import sqlite3 def hw_update(): uid = input(&quot;Enter user id to update&quot;) password = input(&quot;Enter updated password&quot;) if len(password) &lt; 2: message = &quot;hacked&quot; password = &#39;gothackednewpassword123&#39; else: message = &quot;successfully updated&quot; # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE users SET _password = ? WHERE _uid = ?&quot;, (password, uid)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: print(f&quot;The row with user id {uid} the password has been {message}&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #update() . Delete a User in table in Sqlite.db . Uses a delete function to remove a user based on a user input of the id. . Is DELETE a dangerous operation? Why? | In the print statemements, what is the &quot;f&quot; and what does {uid} do? | . import sqlite3 def hw_delete(): uid = input(&quot;Enter user id to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM users WHERE _uid = ?&quot;, (uid,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with uid {uid} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #delete() . Menu Interface to CRUD operations . CRUD and Schema interactions from one location by running menu. Observe input at the top of VSCode, observe output underneath code cell. . Why does the menu repeat? recursion | . | Could you refactor this menu? Make it work with a List? To refactor the menu and make it work with a list, you could define a list of tuples that map each operation to a function, like this: | . | . def menu(): options = [&#39;c&#39;, &#39;r&#39;, &#39;u&#39;, &#39;d&#39;, &#39;s&#39;] operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) operation = operation.lower() if operation in options: index = options.index(operation) functions = [hw_create, hw_read, hw_update, hw_delete, hw_schema] functions[index]() elif len(operation) == 0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: hw_create() elif operation.lower() == &#39;r&#39;: hw_read() elif operation.lower() == &#39;u&#39;: hw_update() elif operation.lower() == &#39;d&#39;: hw_delete() elif operation.lower() == &#39;s&#39;: hw_schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . (1, &#39;Mr. Mortensen&#39;, &#39;bigmort123&#39;, &#39;sha256$kGommW6W5TJ3p3dO$0475451392d5ab06e6428a94b5e92fdd6927e976b031b098c8dce7f231c69b1e&#39;, &#39;Hacks for 2.4a and b&#39;) (2, &#39;Ms. Calicot&#39;, &#39;ilovechem&#39;, &#39;sha256$hJDevADSaOeip72W$b77661397759b6834b26c345f30d9876faae9cb7a4323b3bb9e07cdf863b8e74&#39;, &#39;Compound Worksheet&#39;) (3, &#39;Mr. Curry&#39;, &#39;CurrysWorld&#39;, &#39;sha256$Sib0Zs3iVLkRAbtr$7204866d80e2ce0aad847bb62f0cd79c439f185fd99c00b34db0b097373be5e4&#39;, &#39;Russia Worksheet&#39;) (4, &#39;Ms. Boehm&#39;, &#39;englishrocks&#39;, &#39;sha256$v1RceQM5cOD9vdeF$634d4584d5faee7c0f0bd03c944fc20def099da8f3569ba0d7a9686b75224a45&#39;, &#39;Logical Fallicies Worksheet&#39;) (5, &#39;Ms. Huang&#39;, &#39;mathontop&#39;, &#39;sha256$Tb6sRPjo7mvixAZs$643d7dbb399b4849902dd8c6244b4b5c347a664e902ffdb89df9c3d22f05af34&#39;, &#39;Problems 7-45 to 7-50&#39;) (6, &#39;&#39;, &#39;&#39;, &#39;sha256$JzNyE8rRDTDDHUIo$4a0b6280df7c452d9750eb788a9e21baf35a390091965fa40100808cae6d8bdb&#39;, &#39;&#39;) . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In this implementation, do you see procedural abstraction? | In 2.4a or 2.4b lecture Do you see data abstraction? Complement this with Debugging example. If you debug the menu, and step into one of the hw_functions, it will show the code for them, which abstracts more code itself | | . | Use Imperative or OOP style to Create a new Table or do something that applies to your CPT project. | . | . | . Reference... sqlite documentation .",
            "url": "https://f1nnc.github.io/mysite/twoB",
            "relUrl": "/twoB",
            "date": " • Mar 16, 2023"
        }
        
    
  
    
        ,"post16": {
            "title": "Tic Tac",
            "content": "## How to Choose where you want to go # | 1 | 2 | 3 | # | 4 | 5 | 6 | # | 7 | 8 | 9 | ## # Defining functions board = [&quot;~&quot;, &quot;~&quot;, &quot;~&quot;, &quot;~&quot;, &quot;~&quot;, &quot;~&quot;, &quot;~&quot;, &quot;~&quot;, &quot;~&quot;] moves = 0 xs = [] os = [] XorO = 0 def playing(): global XorO, moves choose = input(&quot;Please choose where you want to go: &quot;) numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9] sign = &quot;&quot; if choose.isdigit() and int(choose) in numbers: if &quot;~&quot; in board: pass else: return if XorO % 2 == 0: sign = &quot;X&quot; else: sign = &quot;O&quot; choose = int(choose) - 1 board[choose] = sign print(&quot;&quot;) print(board[0:3]) print(board[3:6]) print(board[6:9]) moves += 1 XorO += 1 # switch to the next player&#39;s turn if moves == 9: converter(board) print(&quot;Maximum moves reached! The game is over.&quot;) return playing() elif len(board) == 0: # Escape Key return elif len(board) == &quot;^C&quot;: # Escape Key return else: print(&quot;Please choose a valid input (1-9)&quot;) playing() def converter(x): pos = 1 for i in x: if i.lower() == &quot;x&quot;: xs.append(pos) elif i.lower() == &quot;o&quot;: os.append(pos) pos = pos + 1 return xs, os def winner(): print(&quot;hello&quot;) print(&quot;Hello! Please select your move.&quot;) playing() print(xs, os) . Hello! Please select your move. [] [] .",
            "url": "https://f1nnc.github.io/mysite/tictactoe",
            "relUrl": "/tictactoe",
            "date": " • Mar 14, 2023"
        }
        
    
  
    
        ,"post17": {
            "title": "Unit 2.4a Using Programs with Data, SQLAlchemy",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. Use Debugging through these examples to examine Objects created in Code. . College Board talks about ideas like . Program Usage. &quot;iterative and interactive way when processing information&quot; | Managing Data. &quot;classifying data are part of the process in using programs&quot;, &quot;data files in a Table&quot; | Insight &quot;insight and knowledge can be obtained from ... digitally represented information&quot; | Filter systems. &#39;tools for finding information and recognizing patterns&quot; | Application. &quot;the preserve has two databases&quot;, &quot;an employee wants to count the number of book&quot; | . | PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? Provide a defintion of purpose. Flask app object the app takes the data and creats the db propterties | . | SQLAlchemy db object the db makes it so the app can be changed by SQLAlchemy | . | | . &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///hw.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class, purpose and defintion. class User it is the template of the user | . | db.Model inheritance inhetitance is when the model inherites different values/things from the db | . | init method the consturctor of the object | . | @property, @&lt;column&gt;.setter These attriubutes are what set, and get the value of whatever is asked, name, password etc | . | create, read, update, delete methods CRUD is esstial to all db because you need to create, read, update, and delete constaly in your db | . | . | . &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class User(db.Model): __tablename__ = &#39;homework&#39; # table teacher is plural, class teacher is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _teacher = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _password = db.Column(db.String(255), unique=False, nullable=False) _hw = db.Column(db.String(255), unique=False, nullable=False) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, teacher, uid, hw, password=&quot;123qwerty&quot;): self._teacher = teacher self._uid = uid self.hw = hw self.set_password(password) # a teacher getter method, extracts teacher from object @property def teacher(self): return self._teacher # a setter function, allows teacher to be updated after initial object creation @teacher.setter def teacher(self, teacher): self._teacher = teacher # a getter method, extracts uid from object @property def uid(self): return self._uid # a setter function, allows uid to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def hw(self): return self._hw # a setter function, allows teacher to be updated after initial object creation @hw.setter def hw(self, hw): self._hw = hw @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional method used for setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter against stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) is in human readable form # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;teacher&quot;: self.teacher, &quot;uid&quot;: self.uid, &quot;hw&quot;: self.hw, } # CRUD update: updates user teacher, password, phone # returns self def update(self, teacher=&quot;&quot;, uid=&quot;&quot;, hw=&quot;&quot;, password=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(teacher) &gt; 0: self.teacher = teacher if len(uid) &gt; 0: self.uid = uid if len(hw) &gt; 0: self.hw = hw if len(password) &gt; 0: self.set_password(password) return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? Create All Tables from db Object it takes all the data from the u&#39;s and for loops them, and trys to create them | . | User Object Constructors use the .create() or anything else to create stuff | . | Try / Except Try&#39;s to do something, expect if a certin value is reached | . | | . &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; u1 = User(teacher=&#39;Mr. Mortensen&#39;, uid=&#39;bigmort123&#39;, hw=&#39;Hacks for 2.4a and b&#39;, password=&#39;123toby&#39;) u2 = User(teacher=&#39;Ms. Calicot&#39;, uid=&#39;ilovechem&#39;, hw=&#39;Compound Worksheet&#39;, password=&#39;123niko&#39;) u3 = User(teacher=&#39;Mr. Curry&#39;, uid=&#39;CurrysWorld&#39;, hw=&#39;Russia Worksheet&#39;, password=&#39;123lex&#39;) u4 = User(teacher=&#39;Ms. Boehm&#39;, uid=&#39;englishrocks&#39;, hw=&#39;Logical Fallicies Worksheet&#39;, password=&#39;123lex&#39;) u5 = User(teacher=&#39;Ms. Huang&#39;, uid=&#39;mathontop&#39;, hw=&#39;Problems 7-45 to 7-50&#39;, password=&#39;123lex&#39;) users = [u1, u2, u3, u4, u5] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for user in users: try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = user.create() print(f&quot;Created new uid {object.uid}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {user.uid}, or error.&quot;) initUsers() . Created new uid bigmort123 Created new uid ilovechem Created new uid CurrysWorld Created new uid englishrocks Created new uid mathontop . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following User.query.filter_by The purpose of query.filter_by(_uid=uid) is to create a filter on the User table that matches the given _uid value. | . | user.password The purpose of user.password is to retrieve the hashed password stored in the User object. | . | | . def find_by_uid(uid): with app.app_context(): user = User.query.filter_by(_uid=uid).first() return user # returns user object # Check credentials by finding user and verify password def check_credentials(uid, password): # query email and return user record user = find_by_uid(uid) if user == None: return False if (user.is_password(password)): return True return False check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) . False . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following user.find_by_uid() and try/except It checks whether the user already exists | . | user = User(...) Assign data to the object | . | user.dob and try/except it tries to get the age from the dob, except if the dob is an error | . | user.create() and try/except try to create the user, without it present an error | . | | . def hw_create(): # optimize user time to see if uid exists uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object teacher = input(&quot;Enter your teaching name:&quot;) password = input(&quot;Enter your password&quot;) hw = input(&quot;Enter the homework that is due&quot;) # Initialize User object before date user = User(teacher=teacher, uid=uid, hw=hw, password=password, ) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) # hw_create() . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following User.query.all Takes all data from the table | . | json_ready assignment, google List Comprehension returns the user in json format | . | | . # SQLAlchemy extracts all users from database, turns each user into JSON def hw_read(): with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready # hw_read() . def hw_delete(): # Checking for user before delete teach = input(&quot;Input your uid: &quot;) passs = input(&quot;Input your password: &quot;) if check_credentials(teach, passs) == False: return else: pass with app.app_context(): # find the user matching the input uid user = User.query.filter_by(_uid=teach).first() if user.hw == &quot;No Homework&quot;: return &quot;Homework is already none&quot; else: user.hw = &quot;No Homework&quot; db.session.commit() return &quot;Homework deleted, hopefully no more :).&quot; # hw_delete() . def hw_update(): # Checking for user before delete teach = input(&quot;Input your uid: &quot;) passs = input(&quot;Input your password: &quot;) if check_credentials(teach, passs) == False: return else: pass newhw = input(&quot;What HW would you like to add&quot;) with app.app_context(): # find the user matching the input uid user = User.query.filter_by(_uid=teach).first() user.hw = &quot;&quot; user.hw = newhw db.session.commit() return user.hw # hw_update() . def hw_update(): # Checking for user before delete teach = input(&quot;Input your uid: &quot;) passs = input(&quot;Input your password: &quot;) if check_credentials(teach, passs) == False: return else: pass newhw = input(&quot;What HW would you like to add&quot;) with app.app_context(): # find the user matching the input uid user = User.query.filter_by(_uid=teach).first() user.hw = &quot;&quot; user.hw = newhw db.session.commit() return user.hw # Delete method def hw_delete(): # Checking for user before delete teach = input(&quot;Input your uid: &quot;) passs = input(&quot;Input your password: &quot;) if check_credentials(teach, passs) == False: return else: pass with app.app_context(): # find the user matching the input uid user = User.query.filter_by(_uid=teach).first() if user.hw == &quot;No Homework&quot;: return &quot;Homework is already none&quot; else: user.hw = &quot;No Homework&quot; db.session.commit() return &quot;Homework deleted, hopefully no more :).&quot; # SQLAlchemy extracts all users from database, turns each user into JSON def hw_read(): with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready # Inputs, Try/Except, and SQLAlchemy work together to build a valid database object def hw_create(): # optimize user time to see if uid exists uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object teacher = input(&quot;Enter your teaching name:&quot;) password = input(&quot;Enter your password&quot;) hw = input(&quot;Enter the homework that is due&quot;) # Initialize User object before date user = User(teacher=teacher, uid=uid, hw=hw, password=password, ) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) print(&quot;Select an option:&quot;) print(&quot;1. Update homework&quot;) print(&quot;2. Delete homework&quot;) print(&quot;3. Read homework&quot;) print(&quot;4. Create Account&quot;) print(&quot;0. Exit&quot;) def menu(): choice = input(&quot;Enter your choice: &quot;) if choice == &quot;1&quot;: hw_update() elif choice == &quot;2&quot;: hw_delete() elif choice == &quot;3&quot;: print(hw_read()) elif choice == &quot;4&quot;: hw_create() elif choice == &quot;0&quot;: return else: print(&quot;Invalid choice. Please try again.&quot;) menu() # recursion to keep the menu going # Start the menu menu() . Select an option: 1. Update homework 2. Delete homework 3. Read homework 4. Create homework 0. Exit [{&#39;id&#39;: 1, &#39;teacher&#39;: &#39;Mr. Mortensen&#39;, &#39;uid&#39;: &#39;bigmort123&#39;, &#39;hw&#39;: &#39;Hacks for 2.4a and b&#39;}, {&#39;id&#39;: 2, &#39;teacher&#39;: &#39;Ms. Calicot&#39;, &#39;uid&#39;: &#39;ilovechem&#39;, &#39;hw&#39;: &#39;Compound Worksheet&#39;}, {&#39;id&#39;: 3, &#39;teacher&#39;: &#39;Mr. Curry&#39;, &#39;uid&#39;: &#39;CurrysWorld&#39;, &#39;hw&#39;: &#39;Russia Worksheet&#39;}, {&#39;id&#39;: 4, &#39;teacher&#39;: &#39;Ms. Boehm&#39;, &#39;uid&#39;: &#39;englishrocks&#39;, &#39;hw&#39;: &#39;Logical Fallicies Worksheet&#39;}, {&#39;id&#39;: 5, &#39;teacher&#39;: &#39;Ms. Huang&#39;, &#39;uid&#39;: &#39;mathontop&#39;, &#39;hw&#39;: &#39;Problems 7-45 to 7-50&#39;}] Invalid choice. Please try again. . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Change blog to your own database. | Add additional CRUD Add Update functionality to this blog. | Add Delete functionality to this blog. | . | .",
            "url": "https://f1nnc.github.io/mysite/twofour",
            "relUrl": "/twofour",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post18": {
            "title": "MCQ3 Tri 3",
            "content": ". Questions I got wrong . . Q2 . Question:Which of the following has the greatest potential for compromising a user’s personal privacy? | My Answer:The Internet Protocol (IP) address of the user’s computer | Correct Answer:A group of cookies stored by the user’s Web browser | Reflection: This option is incorrect. The IP address of a user’s computer is required for the user to send and receive information on the Internet. The IP address in itself does not contain any extra information about the user. | . . Q19 . Question:Which of the following best describes the contents of resultList after the code segment is executed? | My Answer:All elements in inputList1 followed by all elements in inputList2 | Correct Answer:Only elements that appear in both inputList1 and inputList2 | Reflection: This option is incorrect. The resultList contains only items from inputList1 that are also found in inputList2. | . . Q21 . Question:In order to test the program, the programmer initializes numList to [0, 1, 4, 5]. The program displays 10, and the programmer concludes that the program works as intended. | My Answer:The conclusion is incorrect; the program does not display the correct value for the test case [0, 1, 4, 5]. | Correct Answer:The conclusion is incorrect; using the test case [0, 1, 4, 5] is not sufficient to conclude the program is correct. | Reflection: This option is incorrect. The program does display the correct sum of 10 for the test case [0, 1, 4, 5]. | . . Q22 . Question:For which of the grids does the program correctly move the robot to the gray square? | My Answer:Neither grid I nor grid II | Correct Answer:Grid I only | Reflection: This option is incorrect. Although the program will not move the robot to the gray square in Grid II, it will correctly move the robot to the gray square in Grid I. | . . Q28 . Question: Which of the following code segments can be used to assign the intended string to newString ? | My Answer:newString ← substring(oldString, 3, len(oldString) - 2) | Correct Answer:tempString ← substring(oldString, 3, len(oldString) - 2) newString ← substring(tempString, 1, len(tempString) - 2) | Reflection: Incorrect. This code segment will remove only the first 2 characters of oldString. | . . Q29 . Question: What is displayed as a result of executing the code segment? | My Answer: true false true | Correct Answer: false false false | Reflection: Incorrect. The fourth statement assigns the value false to a. The fifth statement assigns the value false to c. | . . Q31 . Question: Which of the following algorithms can be used to open the gate under the appropriate conditions? | My Answer: Check if the time is outside of business hours. If it is, check if the gate sensor is activated. If it is, check if the gate is closed. If it is, turn on the motor. | Correct Answer: Check if the time is during business hours. If it is, check if the gate sensor is activated. If it is, check if the gate is open. If it is not, turn on the motor. | Reflection: Incorrect. This algorithm will turn on the motor in some cases when the time is outside business hours. | . . Q32 . Question: A certain game keeps track of the maximum and minimum scores obtained so far. If num represents the most recent score obtained, which of the following algorithms correctly updates the values of the maximum and the minimum? | My Answer: If num is greater than the minimum, set the minimum equal to num. Otherwise, if num is greater than the maximum, set the maximum equal to num. | Correct Answer: If num is less than the minimum, set the minimum equal to num. Otherwise, if num is greater than the maximum, set the maximum equal to num. | Reflection: Incorrect. The first check is incorrect. The minimum needs to be updated if the new number is less than the minimum, not greater. | . . Q33 . Question: Which of the following can be used as a replacement for MISSING STATEMENT so that the code segment works as intended? | My Answer: REPEAT 1 TIMES | Correct Answer: REPEAT 2 TIMES | Reflection: Incorrect. This code segment leaves the robot one row above its starting position and one row below the gray square. | . . Q38 . Question: Which of the following code segments is equivalent to the code segment above? | My Answer:IF(num &lt; 0) { DISPLAY(“negative”) } ELSE { DISPLAY(“positive”) } IF(num = 0) { DISPLAY(“zero”) } | Correct Answer: IF(num &lt; 0) { DISPLAY(“negative”) } ELSE { IF(num = 0) { DISPLAY(“zero”) } ELSE { DISPLAY(“positive”) } } | Reflection: Incorrect. The given code segment displays “positive” when num is positive, displays “negative” when num is negative, and displays “zero” when num is 0. This code segment does not produce the same result for all values of num. For example, “positive zero” is displayed when num is 0. | . . Q40 . Question: if any, should be made to the code segment to move the robot back to its original position in the bottom-left square of the grid and facing toward the bottom of the grid? | My Answer: Replace ROTATE_LEFT with ROTATE_RIGHT. | Correct Answer: No change is needed; the algorithm is correct as is. | Reflection: Incorrect. After moving forward two squares, turning right, and moving forward four squares, if the robot were to turn right, then the next move forward would put the robot into the black region of the grid. | . . Q45 . Question: Which of the following are benefits of procedural abstraction? | My Answer: Procedural abstraction prevents programmers from accidentally using the intellectual property of other programmers. | Correct Answer: Procedural abstraction provides an opportunity to give a name to a block of code that describes the purpose of the code block. | Reflection: Incorrect. Procedural abstraction does not prevent programmers from reusing code written by other programmers. | . . Q49 . Question: A city planner is using simulation software to study crowd flow out of a large arena after an event has ended. The arena is located in an urban city. Which of the following best describes a limitation of using a simulation for this purpose? | My Answer: Running a simulation requires more time to generate data from trials than observing the crowd exiting the arena at various events. | Correct Answer: The model used by the simulation software often omits details so that it is easier to implement. | Reflection: Incorrect. A simulation is often used when a real-world scenario is too impractical to test. A benefit of using a simulation is that it allows for rapid testing. | . . Q50 . Question: Based on the values in the table, which of the algorithms appear to run in reasonable time? | My Answer: Algorithm B | Correct Answer: Algorithm A | Reflection: Incorrect. As the size of the list grows, the number of steps needed to sort the list grows at an exponential rate, as the number of steps is equal to 2n for a list of size n . This indicates that the algorithm does not run in a reasonable amount of time. | .",
            "url": "https://f1nnc.github.io/mysite/MCQ3",
            "relUrl": "/MCQ3",
            "date": " • Mar 10, 2023"
        }
        
    
  
    
        ,"post19": {
            "title": "Unit 2.3 Extracting Information from Data, Pandas",
            "content": "Files To Get . Save this file to your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2023-03-09-AP-unit2-3.ipynb . Save these files into a subfolder named files in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/data.csv . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/grade.json . Save this image into a subfolder named images in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/images/table_dataframe.png . Pandas and DataFrames . In this lesson we will be exploring data analysis using Pandas. . College Board talks about ideas like Tools. &quot;the ability to process data depends on users capabilities and their tools&quot; | Combining Data. &quot;combine county data sets&quot; | Status on Data&quot;determining the artist with the greatest attendance during a particular month&quot; | Data poses challenge. &quot;the need to clean data&quot;, &quot;incomplete data&quot; | . | . From Pandas Overview -- When working with tabular data, such as data stored in spreadsheets or databases, pandas is the right tool for you. pandas will help you to explore, clean, and process your data. In pandas, a data table is called a DataFrame. | . . &#39;&#39;&#39;Pandas is used to gather data sets through its DataFrames implementation&#39;&#39;&#39; import pandas as pd . Cleaning Data . When looking at a data set, check to see what data needs to be cleaned. Examples include: . Missing Data Points | Invalid Data | Inaccurate Data | . Run the following code to see what needs to be cleaned . df = pd.read_json(&#39;https://dolphin.nighthawkcodingsociety.com/api/users/&#39;) print(df) # What part of the data set needs to be cleaned? # From PBL learning, what is a good time to clean data? Hint, remember Garbage in, Garbage out? . Read just produces all the data | . Extracting Info . Take a look at some features that the Pandas library has that extracts info from the dataset . DataFrame Extract Column . print(df[[&#39;age&#39;]]) print() #try two columns and remove the index from print statement print(df[[&#39;dob&#39;,&#39;age&#39;]].to_string(index=False)) . DataFrame Sort . print(df.sort_values(by=[&#39;GPA&#39;])) print() #sort the values in reverse order print(df.sort_values(by=[&#39;GPA&#39;], ascending=False)) . Pandas Can sort items inside the json list | . DataFrame Selection or Filter . print(df[df.GPA &gt; 3.00]) . DataFrame Selection Max and Min . print(df[df.GPA == df.GPA.max()]) print() print(df[df.GPA == df.GPA.min()]) . Can produce the min and max from the json | . Create your own DataFrame . Using Pandas allows you to create your own DataFrame in Python. . Python Dictionary to Pandas DataFrame . import pandas as pd #the data can be stored as a python dictionary dict = { &quot;calories&quot;: [420, 380, 390], &quot;duration&quot;: [50, 40, 45] } #stores the data in a data frame print(&quot;-Dict_to_DF&quot;) df = pd.DataFrame(dict) print(df) print(&quot;-Dict_to_DF_labels--&quot;) #or with the index argument, you can label rows. df = pd.DataFrame(dict, index = [&quot;day1&quot;, &quot;day2&quot;, &quot;day3&quot;]) print(df) . Examine DataFrame Rows . print(&quot;-Examine Selected Rows&quot;) #use a list for multiple labels: print(df.loc[[&quot;day1&quot;, &quot;day3&quot;]]) #refer to the row index: print(&quot;--Examine Single Row--&quot;) print(df.loc[&quot;day1&quot;]) . You can choose only certin keys to produce certin table | . Pandas DataFrame Information . print(df.info()) . Example of larger data set . Pandas can read CSV and many other types of files, run the following code to see more features with a larger data set . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_csv(&#39;files/data.csv&#39;).sort_values(by=[&#39;Duration&#39;], ascending=False) print(&quot;--Duration Top 10&quot;) print(df.head(10)) print(&quot;--Duration Bottom 10&quot;) print(df.tail(10)) . Panda can read multible different data formats and still put them into tables | . APIs are a Source for Writing Programs with Data . 3rd Party APIs are a great source for creating Pandas Data Frames. . Data can be fetched and resulting json can be placed into a Data Frame | Observe output, this looks very similar to a Database | . &#39;&#39;&#39;Pandas can be used to analyze data&#39;&#39;&#39; import pandas as pd import requests def fetch(): &#39;&#39;&#39;Obtain data from an endpoint&#39;&#39;&#39; url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot; fetch = requests.get(url) json = fetch.json() # filter data for requirement df = pd.DataFrame(json[&#39;countries_stat&#39;]) # filter endpoint for country stats print(df.loc[0:5, &#39;country_name&#39;:&#39;deaths&#39;]) # show row 0 through 5 and columns country_name through deaths fetch() . country_name cases deaths 0 USA 82,649,779 1,018,316 1 India 43,057,545 522,193 2 Brazil 30,345,654 662,663 3 France 28,244,977 145,020 4 Germany 24,109,433 134,624 5 UK 21,933,206 173,352 . The pd.DataFrame makes the data look like its in tables using a json file | . Notes condensed . Read just produces all the data | Pandas Can sort items inside the json list | Can produce the min and max from the json | You can choose only certin keys to produce certin table | Panda can read multible different data formats and still put them into tables | The pd.DataFrame makes the data look like its in tables using a json file | . Practice Problems . 1Q: A researcher is analyzing data about students in a school district to determine whether there is a relationship between grade point average and number of absences. The researcher plans on compiling data from several sources to create a record for each student. . The researcher has access to a database with the following information about each student. . Last name . First name . Grade level (9, 10, 11, or 12) . Grade point average (on a 0.0 to 4.0 scale) . The researcher also has access to another database with the following information about each student. . First name . Last name . Number of absences from school . Number of late arrivals to school . Upon compiling the data, the researcher identifies a problem due to the fact that neither data source uses a unique ID number for each student. Which of the following best describes the problem caused by the lack of unique ID numbers? . 1A: Students who have the same name may be confused with each other. . 2Q: A team of researchers wants to create a program to analyze the amount of pollution reported in roughly 3,000 counties across the United States. The program is intended to combine county data sets and then process the data. Which of the following is most likely to be a challenge in creating the program? . (A) A computer program cannot combine data from different files. . (B) Different counties may organize data in different ways. . (C) The number of counties is too large for the program to process. . (D) The total number of rows of data is too large for the program to process. . 2A: B . 3Q: A student is creating a Web site that is intended to display information about a city based on a city name that a user enters in a text field. Which of the following are likely to be challenges associated with processing city names that users might provide as input? . Select two answers. . (A) Users might attempt to use the Web site to search for multiple cities. . (B) Users might enter abbreviations for the names of cities. . (C) Users might misspell the name of the city. . (D) Users might be slow at typing a city name in the text field. . 3A: B and C . 4Q:A database of information about shows at a concert venue contains the following information. . Name of artist performing at the show . Date of show . Total dollar amount of all tickets sold . Which of the following additional pieces of information would be most useful in determining the artist with the greatest attendance during a particular month? . (A) Average ticket price . (B) Length of the show in minutes . (C) Start time of the show . (D) Total dollar amount of food and drinks sold during the show . 4A: A . 5Q: A camera mounted on the dashboard of a car captures an image of the view from the driver&#8217;s seat every second. Each image is stored as data. Along with each image, the camera also captures and stores the car&#8217;s speed, the date and time, and the car&#8217;s GPS location as metadata. Which of the following can best be determined using only the data and none of the metadata? . (A) The average number of hours per day that the car is in use . (B) The car’s average speed on a particular day . (C) The distance the car traveled on a particular day . (D) The number of bicycles the car passed on a particular day . 5A: D . 6Q: A teacher sends students an anonymous survey in order to learn more about the students&#8217; work habits. The survey contains the following questions. . On average, how long does homework take you each night (in minutes)? . On average, how long do you study for each test (in minutes)? . Do you enjoy the subject material of this class (yes or no)? . Which of the following questions about the students who responded to the survey can the teacher answer by analyzing the survey results? . I. Do students who enjoy the subject material tend to spend more time on homework each night than the other students do? . II. Do students who spend more time on homework each night tend to spend less time studying for tests than the other students do? . III. Do students who spend more time studying for tests tend to earn higher grades in the class than the other students do? . (A) I only . (B) III only . (C) I and II . (D) I and III . 6A: C . Dataset . import pandas as pd # Defining the data df = pd.read_json(&#39;https://dolphin.nighthawkcodingsociety.com/api/users/&#39;) # find the oldest age and name oldest_age = df[&#39;age&#39;].max() oldest_username = df.loc[df[&#39;age&#39;] == oldest_age, &#39;username&#39;].iloc[0] # find the youngest age and name youngest_age = df[&#39;age&#39;].min() youngest_username = df.loc[df[&#39;age&#39;] == youngest_age, &#39;username&#39;].iloc[0] # Printing the youngest and oldest print(&quot;-&quot;) print(f&quot;{oldest_username} is the oldest at {oldest_age} years old. {youngest_username} is the youngest at {youngest_age} years old.&quot;) print(&quot;-&quot;) # Printing all the data print(df[[&#39;username&#39;,&#39;dob&#39;,&#39;age&#39;]].to_string(index=False)) . - damod is the oldest at 58 years old. james is the youngest at 16 years old. - username dob age james 09-05-2006 16 bushku 10-29-2004 18 aneeshd 02-20-2003 20 deepap 11-15-1966 56 delnorte 02-01-1966 57 damod 11-27-1964 58 F1nnC 12-12-2006 16 Jack123 12-12-2006 16 Avaalexa 12-06-2006 16 . Hacks . Early Seed award . Add this Blog to you own Blogging site. | Have all lecture files saved to your files directory before Tech Talk starts. Have data.csv open in vscode. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Fambulous. | . When choosing a data set, think about the following:- Does it have a good sample size? - Is there bias in the data? - Does the data set need to be cleaned? - What is the purpose of the data set? - ... . Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) | . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT ... Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. Here are some suggestions:- Titanic Dataset: This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. . Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . Follow up question, &quot;where can I find Titanic data set?&quot; . | The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset:- Kaggle: The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. . UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . | . Titanic Data . Look at a sample of data. . import seaborn as sns # Load the titanic dataset titanic_data = sns.load_dataset(&#39;titanic&#39;) print(&quot;Titanic Data&quot;) print(titanic_data.columns) # titanic data set print(titanic_data[[&#39;survived&#39;,&#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;class&#39;, &#39;fare&#39;, &#39;embark_town&#39;]]) # look at selected columns . Use Pandas to clean the data. Most analysis, like Machine Learning or even Pandas in general like data to be in standardized format. This is called &#39;Training&#39; or &#39;Cleaning&#39; data. . # Preprocess the data from sklearn.preprocessing import OneHotEncoder td = titanic_data td.drop([&#39;alive&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;class&#39;, &#39;embark_town&#39;, &#39;deck&#39;], axis=1, inplace=True) td.dropna(inplace=True) td[&#39;sex&#39;] = td[&#39;sex&#39;].apply(lambda x: 1 if x == &#39;male&#39; else 0) td[&#39;alone&#39;] = td[&#39;alone&#39;].apply(lambda x: 1 if x == True else 0) # Encode categorical variables enc = OneHotEncoder(handle_unknown=&#39;ignore&#39;) enc.fit(td[[&#39;embarked&#39;]]) onehot = enc.transform(td[[&#39;embarked&#39;]]).toarray() cols = [&#39;embarked_&#39; + val for val in enc.categories_[0]] td[cols] = pd.DataFrame(onehot) td.drop([&#39;embarked&#39;], axis=1, inplace=True) td.dropna(inplace=True) print(td) . The result of &#39;Training&#39; data is making it easier to analyze or make conclusions. In looking at the Titanic, as you clean you would probably want to make assumptions on likely chance of survival. . This would involve analyzing various factors (such as age, gender, class, etc.) that may have affected a person&#39;s chances of survival, and using that information to make predictions about whether an individual would have survived or not. . Data description:- Survival - Survival (0 = No; 1 = Yes). Not included in test.csv file. - Pclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd) . Name - Name | Sex - Sex | Age - Age | Sibsp - Number of Siblings/Spouses Aboard | Parch - Number of Parents/Children Aboard | Ticket - Ticket Number | Fare - Passenger Fare | Cabin - Cabin | Embarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton) | . | Perished Mean/Average . | . print(titanic_data.query(&quot;survived == 0&quot;).mean()) . Survived Mean/Average | . print(td.query(&quot;survived == 1&quot;).mean()) . Survived Max and Min Stats . print(td.query(&quot;survived == 1&quot;).max()) print(td.query(&quot;survived == 1&quot;).min()) . Machine Learning . From Tutorials Point%20is,a%20consistence%20interface%20in%20Python). Scikit-learn (Sklearn) is the most useful and robust library for machine learning in Python. It provides a selection of efficient tools for machine learning and statistical modeling including classification, regression, clustering and dimensionality reduction via a consistence interface in Python.&gt; Description from ChatGPT. The Titanic dataset is a popular dataset for data analysis and machine learning. In the context of machine learning, accuracy refers to the percentage of correctly classified instances in a set of predictions. In this case, the testing data is a subset of the original Titanic dataset that the decision tree model has not seen during training......After training the decision tree model on the training data, we can evaluate its performance on the testing data by making predictions on the testing data and comparing them to the actual outcomes. The accuracy of the decision tree classifier on the testing data tells us how well the model generalizes to new data that it hasn&#39;t seen before......For example, if the accuracy of the decision tree classifier on the testing data is 0.8 (or 80%), this means that 80% of the predictions made by the model on the testing data were correct....Chance of survival could be done using various machine learning techniques, including decision trees, logistic regression, or support vector machines, among others. . Code Below prepares data for further analysis and provides an Accuracy. IMO, you would insert a new passenger and predict survival. Datasets could be used on various factors like prediction if a player will hit a Home Run, or a Stock will go up or down. Decision Trees, prediction by a piecewise constant approximation. - Logistic Regression, the probabilities describing the possible outcomes. | . | . from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score # Split arrays or matrices into random train and test subsets. X = td.drop(&#39;survived&#39;, axis=1) y = td[&#39;survived&#39;] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) # Train a decision tree classifier dt = DecisionTreeClassifier() dt.fit(X_train, y_train) # Test the model y_pred = dt.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;DecisionTreeClassifier Accuracy:&#39;, accuracy) # Train a logistic regression model logreg = LogisticRegression() logreg.fit(X_train, y_train) # Test the model y_pred = logreg.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;LogisticRegression Accuracy:&#39;, accuracy) .",
            "url": "https://f1nnc.github.io/mysite/twothree",
            "relUrl": "/twothree",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post20": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": ". Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? cd, code, vi | . | What are the command you use in Windows terminal to access files? cd, travel | . | What are some of the major differences? Bash is a Linux based software, bash can do alot more things and is more flexible Provide what you observed, struggled with, or leaned while playing with this code. | . | Why is path a big deal when working with images? So you can display images correctly | . | How does the meta data source and label relate to Unit 5 topics? Meta Data is like the meta data inside the html websites | . | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? It is an interactive tool, that can show Images | . | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Smile Emoji&quot;, &#39;file&#39;: &quot;smile.png&quot;}, ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image Smile_Emoji = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Smile Emoji&quot;, &#39;file&#39;: &quot;smile.png&quot;}]) image_display(Smile_Emoji) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal? . Translate first 3 letters of your name to Base64. | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? | From your consumer experience, what effects have you experienced from buffering? | How do these effects apply to images? | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? Yes, it first gets the images from the path in the Images dict, then scalzes and makes grey scale | . | Describe Grey Scale algorithm in English or Pseudo code? All the pixels are averaged out and turn to a grey/black | . | Describe scale image? What is before and after on pixels in three images? They were either alot bigger or smaller, and got put to 320 | . | Is scale image a type of compression? If so, line it up with College Board terms described? Yes the scaling of an image can be compression. Depending on the format, it can have lossy or lossless compression. | . | . from IPython.display import HTML, display from pathlib import Path from PIL import Image as pilImage from PIL import ImageFilter, ImageDraw, ImageFont from io import BytesIO import base64 import numpy as np from PIL import ImageFilter def image_data(path=Path(&quot;images/&quot;), images=None): if images is None: images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Smile Emoji&quot;, &#39;file&#39;: &quot;smile.png&quot;}, ] for image in images: image[&#39;filename&#39;] = path / image[&#39;file&#39;] return images def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() def image_management(image): img = pilImage.open(image[&#39;filename&#39;]) image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) def image_management_add_html_grey(image): img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() image[&#39;data&#39;] = np.array(img_data) image[&#39;gray_data&#39;] = [] for pixel in image[&#39;data&#39;]: average = (pixel[0] + pixel[1] + pixel[2]) // 3 if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average+60, average, average+150, pixel[3])) else: image[&#39;gray_data&#39;].append((average, average, average)) img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) def image_management_add_blur_text(image): img = image[&#39;pil&#39;] format = image[&#39;format&#39;] # Add Gaussian blur img_blur = img.filter(ImageFilter.GaussianBlur(radius=10)) image[&#39;pil_blur_text&#39;] = img_blur image[&#39;html_blur_text&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img_blur, format) if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and blurred with FINN text for each image for image in images: # Load and scale the image image_management(image) # Display meta data and original image print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) # Convert the image to grayscale and display it print(&quot; image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) # Blur the image and add text print(&quot; blurred with text &quot;) image_management_add_blur_text(image) display(HTML(image[&#39;html_blur_text&#39;])) . - meta data -- Smile Emoji Internet PNG RGBA Original size: (1200, 1200) Scaled size: (320, 320) -- original image -- . image - . blurred with text . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average + 200, average, average, pixel[3])) # PNG format else: grey_data.append((average + 200, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Smile_Emoji&quot;, &#39;file&#39;: &quot;smile.png&quot;}, ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . Hacks Responses . AP Prep . Notes . What are commands you use in terminal to access files? cd, code, vi | . | What are the command you use in Windows terminal to access files? cd, travel | . | What are some of the major differences? Bash is a Linux based software, bash can do alot more things and is more flexible Provide what you observed, struggled with, or leaned while playing with this code. | . | Why is path a big deal when working with images? So you can display images correctly | . | How does the meta data source and label relate to Unit 5 topics? Meta Data is like the meta data inside the html websites | . | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? It is an interactive tool, that can show Images | . | Does this code seem like a series of steps are being performed? Yes, it first gets the images from the path in the Images dict, then scalzes and makes grey scale | . | Describe Grey Scale algorithm in English or Pseudo code? All the pixels are averaged out and turn to a grey/black | . | Describe scale image? What is before and after on pixels in three images? They were either alot bigger or smaller, and got put to 320 | . | Is scale image a type of compression? If so, line it up with College Board terms described? Yes the scaling of an image can be compression. Depending on the format, it can have lossy or lossless compression. | . | . Practice Problems . 1Q: Which of the following is an advantage of a lossless compression algorithm over a lossy compression algorithm? . (A) A lossless compression algorithm can guarantee that compressed information is kept secure, while a lossy compression algorithm cannot. . | (B) A lossless compression algorithm can guarantee reconstruction of original data, while a lossy compression algorithm cannot. . | (C) A lossless compression algorithm typically allows for faster transmission speeds than does a lossy compression algorithm. . | (D) A lossless compression algorithm typically provides a greater reduction in the number of bits stored or transmitted than does a lossy compression algorithm. . | 1A: B ### 2Q: A user wants to save a data file on an online storage site. The user wants to reduce the size of the file, if possible, and wants to be able to completely restore the file to its original version. Which of the following actions best supports the user’s needs? . | (A) Compressing the file using a lossless compression algorithm before uploading it . | (B) Compressing the file using a lossy compression algorithm before uploading it . | (C) Compressing the file using both lossy and lossless compression algorithms before uploading it . | (D) Uploading the original file without using any compression algorithm . | 2A: A ### 3Q: A programmer is developing software for a social media platform. The programmer is planning to use compression when users send attachments to other users. Which of the following is a true statement about the use of compression? . | (A) Lossless compression of video files will generally save more space than lossy compression of video files. . | (B) Lossless compression of an image file will generally result in a file that is equal in size to the original file. . | (C) Lossy compression of an image file generally provides a greater reduction in transmission time than lossless compression does. . | (D) Sound clips compressed with lossy compression for storage on the platform can be restored to their original quality when they are played. . | 3A: C . | . Lossy data . The .JPEG format is a great example of lossy data | The term lossy meaning, if you scale the image or change it, it wont be reversible | . lossless data . As the name suggests, the term lossless means the changes in an image can be made without quailty being lost | A great example of lossless formats are, .png .gif and .raw | . Programing Paradigms . from IPython.display import HTML, display from pathlib import Path from PIL import Image as pilImage from PIL import ImageFilter, ImageDraw, ImageFont from io import BytesIO import base64 import numpy as np from PIL import ImageFilter def image_data(path=Path(&quot;images/&quot;), images=None): if images is None: images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Smile Emoji&quot;, &#39;file&#39;: &quot;smile.png&quot;}, ] for image in images: image[&#39;filename&#39;] = path / image[&#39;file&#39;] return images def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() def image_management(image): img = pilImage.open(image[&#39;filename&#39;]) image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) def image_management_add_html_grey(image): img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() image[&#39;data&#39;] = np.array(img_data) image[&#39;gray_data&#39;] = [] for pixel in image[&#39;data&#39;]: average = (pixel[0] + pixel[1] + pixel[2]) // 3 if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average+60, average, average+150, pixel[3])) else: image[&#39;gray_data&#39;].append((average, average, average)) img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) def image_management_add_blur_text(image): img = image[&#39;pil&#39;] format = image[&#39;format&#39;] # Add Gaussian blur img_blur = img.filter(ImageFilter.GaussianBlur(radius=10)) image[&#39;pil_blur_text&#39;] = img_blur image[&#39;html_blur_text&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img_blur, format) if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and blurred with FINN text for each image for image in images: # Load and scale the image image_management(image) # Display meta data and original image print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) # Convert the image to grayscale and display it print(&quot; image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) # Blur the image and add text print(&quot; blurred with text &quot;) image_management_add_blur_text(image) display(HTML(image[&#39;html_blur_text&#39;])) . - meta data -- Smile Emoji Internet PNG RGBA Original size: (1200, 1200) Scaled size: (320, 320) -- original image -- . image - . blurred with text . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | .",
            "url": "https://f1nnc.github.io/mysite/twotwo",
            "relUrl": "/twotwo",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post21": {
            "title": "N@TM Tri 2",
            "content": "Night at the Museum . My project . My feature on my groups website was a calender to track and orginize your workouts | It has An input, day selector, and apply/remove depending on what you want to do | Here are some photos of them | . . Cool things I saw at N@TM . We were towards the end of N@TM so i only went to 2 classes | Although I made sure they were my favorite | . Computer Animation . . I have acually done these projects before (I took the class) | It’s always so intresting how different people intrepret the prompts givin to them | . Ceramics . . I chose the first photo because somone made my favorite pokemon snorlax into a cookie jar | THe second photo i thought was a cool way to make a cup, litteraly a winners cup that you can drink out of | .",
            "url": "https://f1nnc.github.io/mysite/N@TM",
            "relUrl": "/N@TM",
            "date": " • Feb 22, 2023"
        }
        
    
  
    
        ,"post22": {
            "title": "5.5/6 notes",
            "content": "Notes . 5.5 . The GitHub platform asks for the license type when you create a repository. There were numerous attorneys who focused their careers on patents. For the use of its ideas and patents, Qualcomm demands a royalty payment in addition to remuneration for derivative works. You can lose the right to charge for the software and associated patents if you use software that is subject to the GPL license. Any work that is generated from the original must be free, and the code must be shared, according to the GPL open source license. Due to the loss of the ability to charge for the software and patents, the cost of utilizing GPL-licensed software may be higher than expected. Specific standards for sharing and distributing works produced from open source licenses, such the GPL, . 5.6 . Information that can be used to identify an individual is known as personal identifiable information (PII). Social networking, online searches, and other online activities make it simple to gather PII. Take care while sharing information online because it can be easily viewed by others. Keep private sensitive data including social security numbers, two-factor authentication codes, and financial credentials. Biometrics and multi-factor authentication can both improve the security of your systems. The security of your systems can also be improved through symmetric and asymmetric encryption. Malware and phishing are two potential risks that could jeopardize the security of your PII. It’s critical to regularly assess your PII vulnerabilities and take precautions to safeguard your data. . Hacks For 5.5 . There are multipble different licenses that give differing levels of permision, Creative Commons lets all your work be accesible and free for everyone, but for others like Open Source GPL will give less . | To summarize this, I think that everyone should stick by all rules in the world, but realisticly that won’t happen, Not complying with licenses is alot like stealing a cookie from a cookie jar, your not supposed to have it, but there is little to no way that anyone will ever know you ate it. . | My Blog License is here: Link, My Group Frontend and Backend are Linked On the review ticket . | . Hacks For 5.6 . I’ve seen PII inside my project, speficficly login/signup. It asked you for Username, Password, and All the other fitness related things in my project | I think that you should handle your PII the same way that you handle it in person. Giving it to buiness that are trusted. | Good passwords should have more than 8 characters, atleast one symbol, and capitalized letter. A bad password would be a password with your easy to find personal info, EX: Birthday, Wifes Name. A step that is used in authentication | Symtric only uses one key to decrypt or encrypt data, Asymtric does the same thing but has one public key and one private one | The use of Secure Sockets Layer (SSL) certificates, which encrypt communication between a user’s browser and a website to prevent listening in and tampering, is one type of encryption utilized in an AWS deployment. | Me personally I used to fall for free minecraft download when I was a kid. Some other phishing tech is making a user download a file that they think has something, but really has a virus. I think the OG method is the if you send me 1000 dollars Ill send you 10000 back prince story. | .",
            "url": "https://f1nnc.github.io/mysite/fivefivesix",
            "relUrl": "/fivefivesix",
            "date": " • Feb 12, 2023"
        }
        
    
  
    
        ,"post23": {
            "title": "5.3/4 notes",
            "content": "5.3/4 Notes/Hacks . . Intentional or Purposeful bias . Google “What age groups use Facebook” vs “… TikTok”? What does the data say? Is there purposeful exclusion in these platforms? Is it harmful? Should it be corrected? Is it good business? . Facebook tends to have a larger audience in older people because the platform is way easier to use than other ones | Tiktok has most there audience in young audults/teens because most content on there is made for that demographic | I dont think its that harmful | It shouldn’t be correct because most of the time, it is market toward that demographic, and they want that group of people Why do virtual assistants have female voices? Amazon, Alexa Google, Apple Siri. Was this purposeful? Is it harmful? Should it be corrected? Is it good business? . | Virutal Voices have softer voices and the tone is nicer toward custmors | Could be harmful because It could refornce sexist ideas that women can only be assistants Talk about an algorithm that influences your decisions, think about these companies (ie FAANG - Facebook, Amazon, Apple,Netflix, Google) . | The aglorithm that is choosed your decisions could be bais with the creators intent | Unintenally making other people have your ideas . Pair Questions . Ideas . | Not made intentionally, It was made with only white people data, so it only recongizes white faces | This could be another reason to end digital divide because if all people had acesses to computers problems like this wouldn’t happen as often | This should be corrected, not only is this a way to exlcude black people for something white people have (segration), from a buiness standpoint your losing a large demogrpahic | Use data/faces in this scenario from people all around the world, so bias like this dont happen . Hacks . CompSci has 150 ish principles students. Describe a crowdsource idea and how you might initiate it in our environment? . | My feature is a nutrition feature. Some data I could collect is through crowdsourcing is asking the source or sample to look on the nutrition label on their lunches, and input some of the important values, such as calories. | . What about Del Norte crowdsourcing? Could your project be better with crowdsourcing? . Getting data from everyone in Del Norte will make the application more fit for Del Norte. Actually, that is a good point about sampling: the more data collected from a population, the better fit the result is for the population (in the case of an application or PBL). | . What kind of data could you capture at N@tM to make evening interesting? Perhaps use this data to impress Teachers during finals week. . I believe that the school food is not exactly the best food, and a lot of the choices the average high schooler makes regarding nutrition are not always the best. Therefore, data showing the nutritional data of Del Norte’s food will most likely grab attention. | .",
            "url": "https://f1nnc.github.io/mysite/fivethree",
            "relUrl": "/fivethree",
            "date": " • Feb 1, 2023"
        }
        
    
  
    
        ,"post24": {
            "title": "MCQ Test Two",
            "content": "Result . . Test Corrections . Question 7 . I missread the question and mixed up the foxes and sheep role in the game. The sheep should have been reversed with goats, and foxes with sheep. | . Question 8 . I selected option A but not option D because I thought the sum of borrows and returns is a odd not postive. Although 1 book has 1 borrow and 1 return equaling a postive number | . Question 17 . The D option does the same thing as I did when I clicked option A. The outside result=false, is now inside the if stament, doing the same thing. | . Question 27 . The rotate_left and rotate_right action had to be done out side of the repeat n times. | . Question 28 . The A option also works because repeating all the actions 4 times will lead to the same result as C. | . Question 30 . I didn’t select C, I selected B but i needed both. The parrameters of x=4, y=4, r=3, and instead of adding, they use subbtrating after drawing the circle. | . Question 37 . I must of missread the question when doing it in my mind, it is the same shape but just reflected. All that I had to do was follow the line but I must of messed up in my head. | . Reflection . Most of my answers were because I didn’t choose all possible peices of code on a multiple choice section, for example I would choose C, but It was suposed to be C and B | The other answeres I got wrong were because of me doind something wrong in my head, or going to quick | .",
            "url": "https://f1nnc.github.io/mysite/MCQ2",
            "relUrl": "/MCQ2",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post25": {
            "title": "CPT",
            "content": "Project Plan . Rubric Score CBScore Comments . Program Purpose and Function | 1 | 1 | My program has clearly labeled, has an input, output, and works | . Data Abstraction | 1 | 1 | List was named well, I have two code segments, that collects data and shows the list in whater getID is picked | . Managing Complexity | 1 | 1 | The first part of the code manges complexity, and can be made using if staments instead of cases | . Procedural Abstraction | 1 | 1 | Calls the Add(), The Add() adds whatever text is given from the input and day, the tasks is called at the end of the Add() to check if the data that was added can also be added to the Daily Taks | . Algorithm Implementation | 1 | 1 | Uses squencing selection and iteration with the Add(), The algorthim can be made very easily and the code for it is shown below. | . Testing | 1 | 1 | The program calls two different functions and the text it gives back clearly shows the result. | . Final | 6/6 | 6/6 |   | . Describing My Project . My feature is has two main parts Editor Table | Calender | . | . Adding? . Maybe a View to see what you have to do on that day | . Video Plan . I will show all features of my page Type in the workout from the input | Select A day | Show that it pops up on the calender | Add another workout but on the same day so it shows up on taks aswell | . | Then I will show the code behind it and explain how it follows college board standords | .",
            "url": "https://f1nnc.github.io/mysite/feature",
            "relUrl": "/feature",
            "date": " • Jan 29, 2023"
        }
        
    
  
    
        ,"post26": {
            "title": "5.1/2 notes",
            "content": "5.1/2 Notes . Good and bad uses of technogloy | ChatGPT is texet based AI good: for fast and easy answers | bad: it could have a computer bais | . | . Hacks . Three beneficial effects Easier to orginize Workouts | Easy acess to nutrition information | Workout help and sturcture | . | Harmful Effect More obbsesed about the website. than the exercise/nutrition part of it | . | Pros and Cons of Internet Blockers Pros: People do less dumb thing on computers and focus more on education | Cons: For things like coding classes, lots of essitancal features have to be worked around or have to be bypassed with things like a VPN | . | Digital Divide Concern Unequal access to technology and the internet can result in unequal access to education, job opportunities, and basic resources. | Making it harder for people to get good paying STEM jobs and making the poor less likely to climb out of poverity. | . | .",
            "url": "https://f1nnc.github.io/mysite/fiveone",
            "relUrl": "/fiveone",
            "date": " • Jan 23, 2023"
        }
        
    
  
    
        ,"post27": {
            "title": "Grades Week 18",
            "content": "Week 3 of Collegeboard Grades . Submission #1 . Rubric Score CBScore Comments . Program Purpose and Function | 1 | 1 | The program purpose was clearly stated, Everthing was cleary shown, and every input was given the right response | . Data Abstraction | 0 | 0 | List was named well, both code segments are provided but the second segment isn’t acessing data from the list | . Managing Complexity | 0 | 0 | Didn’t mange complexity in the program, very easy to devolp | . Procedural Abstraction | 1 | 0 | Calls the rpsGame, although acording to college board was not specfic enough about how yourPlay effects the overall program | . Algorithm Implementation | 1 | 1 | Uses squencing selection and iteration with the rpsGame, Clearly explains the algorithm so it can be remade | . Testing | 1 | 1 | The program calls two different functions and the text it gives back clearly shows the result. | . Final | 4/6 | 3/6 |   | . . Submission #2 . Rubric Score CBScore Comments . Program Purpose and Function | 1 | 1 | The program purpose was clearly stated, Everthing was cleary shown, and every input was given the right response | . Data Abstraction | 1 | 1 | List was named well, both code segments are provided the second segment is acessing data from the list | . Managing Complexity | 1 | 1 | There was a good amount of complexity in the program, explains how the code can be written diffrently | . Procedural Abstraction | 1 | 1 | Calls the guessWords student made, the response back to the describes the function | . Algorithm Implementation | 1 | 1 | Uses squencing selection and iteration with the guessWords, Clearly explains the algorithm so it can be remade | . Testing | 1 | 1 | The program calls two different functions and the text it gives back clearly shows the result. | . Final | 6/6 | 6/6 |   | . . Submission #3 . Rubric Score CBScore Comments . Program Purpose and Function | 1 | 1 | The program purpose was clearly stated, Everthing was cleary shown, and every input was given the right response | . Data Abstraction | 0 | 0 | The two codes segments were not provided, The list is named correctly | . Managing Complexity | 0 | 0 | The code uses list to manage complexity although is not explained well enough, to generic. | . Procedural Abstraction | 0 | 0 | Calls the updateScreen student made, the second screen does not mention updateScreen at all | . Algorithm Implementation | 0 | 0 | Did not include iteration in his code, the student doesn’t explain how the index value of states matches the value to the state. | . Testing | 0 | 0 | Does not show the result of the calls, The response describes two different processes and not conditions being tested from a parameter | . Final | 1/6 | 1/6 |   | . . Submission #4 . Rubric Score CBScore Comments . Program Purpose and Function | 1 | 1 | The program purpose was clearly stated, Everthing was cleary shown, and every input was given the right response | . Data Abstraction | 1 | 1 | List was named well, both code segments are provided but the second segment isn’t acessing data from the list | . Managing Complexity | 1 | 1 | There was a good amount of complexity in the program, explains how the code can be written diffrently | . Procedural Abstraction | 1 | 1 | Uses list that has more list inside of it to mange complexity, also explains how the code can be written without lists | . Algorithm Implementation | 1 | 1 | Uses squencing selection and iteration with the rpsGame, Clearly explains the algorithm so it can be remade | . Testing | 0 | 0 | The result explains the code segements instead of giving the acual result, also doesn’t describe spefic arugments that are passed through the parameters | . Final | 5/6 | 5/6 |   | . . Reflection . I felt that my standords for grading and collegeboards are starting to become simalar. There was only one missed point that I didn’t get the same as college board and it was because I thought a program was described enough. I pretty much understand all 6 crietra now and what is needed for them. | My program in it current state has completed, Program and Purpose, Algorithm Impletation, and Testing. The reason for the others not being completed is because we still need to connect it fully to the backend. | Of the many reason that I’ve seen for a critera not being filled is the Data Abstraction catagory. The way I wont incounter this is by making sure I have to code segments, that mention each other, and are named well. |",
            "url": "https://f1nnc.github.io/mysite/cbgrades",
            "relUrl": "/cbgrades",
            "date": " • Jan 22, 2023"
        }
        
    
  
    
        ,"post28": {
            "title": "My Grades vs College Board Grades",
            "content": "College Board VS my rating . Project 1 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input &lt;/br&gt; - [x] Program functionality&lt;/br&gt; - [x] output&lt;/br&gt; - [x] describes the overall purpose of the program.&lt;/br&gt; - [x] describes what functionality of the program is demonstrated in the video.&lt;/br&gt; - [x] describes the input and output of the program demonstrated in the video.&lt;/br&gt; | Program output and input are both present. It states that finding information about triangles is its goal, and that it displays inputted triangles&#39; triangle ratios as part of its function. | 1/1 | 0/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type).&lt;/br&gt; - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose.&lt;/br&gt; - [x] identifies the name of the variable representing the list being used in this response.&lt;/br&gt; - [x] describes what the data contained in this list is representing in the program.&lt;/br&gt; | Contains a code section that illustrates the math used to calculate the triangle ratios. displays a list. has the names of the variables and describes the list&#39;s data. | 1/1 | 1/1 | . 3. Managing Complexity | - [x] includes a program code segment that shows a list being used to manage complexity in the program.&lt;/br&gt; - [] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list&lt;/br&gt; | Has a chunk of code that indicates complexity but doesn&#39;t explain it. They merely provided yet another code. | 0/1 | 0/1 | . 4. Procedural Abstraction | - [x] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure.&lt;/br&gt; - [x] Program code segment showing where the student-developed procedure is being called.&lt;/br&gt; - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program.&lt;/br&gt; | The code that displays the procedure that the student created, a parameter, and the location at which the SDP is being called. Finally, a good description of the program&#39;s functionality. | 1/1 | 1/1 | . 5. Algorithm Implementation | - [x] sequencing&lt;/br&gt; - [x] selection&lt;/br&gt; - [] iteration&lt;/br&gt; - [] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it.&lt;/br&gt; | Has sequencing, selection but no iteration or explaination. | 0/1 | 1/1 | . 6. Testing | - [] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute.&lt;/br&gt; - [x] describes the condition(s) being tested by each call to the procedure.&lt;/br&gt; - [x] identifies the result of each call.&lt;/br&gt; | has just one call to the chosen procedure, not two. However, it does specify the issue and the outcome. | 0/1 | 1/1 | . Total | | | 3/6 | 4/6 | . Project 2 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input &lt;/br&gt; - [x] Program functionality&lt;/br&gt; - [x] output&lt;/br&gt; - [x] describes the overall purpose of the program.&lt;/br&gt; - [x] describes what functionality of the program is demonstrated in the video.&lt;/br&gt; - [x] describes the input and output of the program demonstrated in the video.&lt;/br&gt; | met every requirement for this section. describes the function and goal, has input, and output. The objective is entertainment, and the function is to place blocks that move. | 1/1 | 1/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type).&lt;/br&gt; - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose.&lt;/br&gt; - [x] identifies the name of the variable representing the list being used in this response.&lt;/br&gt; - [x] describes what the data contained in this list is representing in the program.&lt;/br&gt; | met every requirement for this section. contains appropriate code segments outlining how information is stored and remembered from user input. Blocks are moving. It succeeds in achieving its goal. Identifies the variable by name and the type of data it contains. | 1/1 | 1/1 | . 3. Managing Complexity | - [x] includes a program code segment that shows a list being used to manage complexity in the program.&lt;/br&gt; - [x] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list&lt;/br&gt; | Has code segment showing a list and explains how it could be different. | 1/1 | 1/1 | . 4. Procedural Abstraction | - [] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure.&lt;/br&gt; - [] Program code segment showing where the student-developed procedure is being called.&lt;/br&gt; - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program.&lt;/br&gt; | This response defines the code segment, but there was never a clear code segment shown that demonstrated the student-developed procedure being called with 1+ parameter. | 0/1 | 1/1 | . 5. Algorithm Implementation | - [x] sequencing&lt;/br&gt; - [x] selection&lt;/br&gt; - [] iteration&lt;/br&gt; - [] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it.&lt;/br&gt; | Has sequencing and selection but doesn&#39;t have iteration and doesn&#39;t explain. | 0/1 | 1/1 | . 6. Testing | - [x] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute.&lt;/br&gt; - [x] describes the condition(s) being tested by each call to the procedure.&lt;/br&gt; - x[] identifies the result of each call.&lt;/br&gt; | All tests done correctly | 1/1 | 1/1 | . Total | | | 4/6 | 6/6 | . Week 2 . Project 3 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output - [] describes the overall purpose of the program. - [] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | Shows input, output and program functionality in the video but doesn&#39;t describe the purpose or function in depth. They say the purpose is to identify animals when that would be the function and the purpose would be entertainment or education. | 0/1 | 0/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type). - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [x] identifies the name of the variable representing the list being used in this response. - [x] describes what the data contained in this list is representing in the program. | Program demonstrates all the criteria. | 1/1 | 1/1 | . 3. Managing Complexity | - [] includes a program code segment that shows a list being used to manage complexity in the program. - [] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | The code segments does not show how the program is complex. Also it doesn&#39;t describe them very well. | 0/1 | 0/1 | . 4. Procedural Abstraction | - [x] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [] Program code segment showing where the student-developed procedure is being called. - [] describes what the identified procedure does and how it contributes to the overall functionality of the program. | The Program has a parameter and it affects the functionality but doesn&#39;t have a code segmnet showing this parameter or describe it. | 0/1 | 0/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [] iteration - [] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | Has sequensing and selection but no clear iteration and doesn&#39;t explain it/td&gt; 0/1 | 0/1 | &lt;/tr&gt; 6. Testing | - [1] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [1] describes the condition(s) being tested by each call to the procedure. - [1] identifies the result of each call. | All tests done correctly | 1/1 | 1/1 | . Total | | | 2/6 | 1/6 | . &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; Project 4 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output&lt;/br&gt; - [x] describes the overall purpose of the program. - [x] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | Demonstrates all criteria | 1/1 | 1/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type). - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [x] identifies the name of the variable representing the list being used in this response. - [x] describes what the data contained in this list is representing in the program. | Demonstrates all criteria. | 1/1 | 1/1 | . 3. Managing Complexity | - [x] includes a program code segment that shows a list being used to manage complexity in the program. - [] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | Has code segment that shows list but doesn&#39;t explain it very well. | 0/1 | 1/1 | . 4. Procedural Abstraction | - [x] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [x Program code segment showing where the student-developed procedure is being called. - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program. | Demonstrates all criteria. Has parameter, explains it and shows where the STP is being called. | 1/1 | 1/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [x] iteration - [x] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | Has sequencing, selection, iteration, and explains how the alogorithm implements them. | 1/1 | 1/1 | . 6. Testing | - [x] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [x] describes the condition(s) being tested by each call to the procedure. - [x] identifies the result of each call. | All tests done correctly | 1/1 | 1/1 | . Total | | | 5/6 | 6/6 | . Project 5 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output - [x] describes the overall purpose of the program. - [x] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | Meets all criteria. | 1/1 | 0/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type). - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [x] identifies the name of the variable representing the list being used in this response. - [x] describes what the data contained in this list is representing in the program. | Meets all criteria. | 1/1 | 1/1 | . 3. Managing Complexity | - [] includes a program code segment that shows a list being used to manage complexity in the program. - [x] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | Explains the list but the list in not sufficicant. | 0/1 | 1/1 | . 4. Procedural Abstraction | - [] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [x] Program code segment showing where the student-developed procedure is being called. - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program. | Has code segment showing where the STP is being called and describes the procedure and the contribution the the function but doesn&#39;t have a STP with one parameter. | 0/1 | 1/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [x] iteration - [x] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | Has selection, sequencing, iteration, and goes over how each of them works. | 1/1 | 1/1 | . 6. Testing | - [x] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [x] describes the condition(s) being tested by each call to the procedure. - [x] identifies the result of each call. | All tests done correctly. | 11 | 1/1 | . Total | | | 4/6 | 5/6 | . Project 6 Checklist Comments Student Score CB Score . 1. Program Purpose and Function | - [x] Input - [x] Program functionality - [x] output - [x] describes the overall purpose of the program. - [x] describes what functionality of the program is demonstrated in the video. - [x] describes the input and output of the program demonstrated in the video. | Met all requirments | 1/1 | 1/1 | . 2. Data Abstraction | - [x] Program code segment that shows how data has been stored in this list (or other collection type). - [x] Program code segment that shows the data in this same list being used as part of fulfilling the program’s purpose. - [x] identifies the name of the variable representing the list being used in this response. - [] describes what the data contained in this list is representing in the program. | didn&#39;t describe the data contained in this list is reprsenting in the program | 0/1 | 0/1 | . 3. Managing Complexity | - [] includes a program code segment that shows a list being used to manage complexity in the program. - [x] explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list | Didn&#39;t include program code segment that shows a list being used to manage complexity in the program | 0/1 | 0/1 | . 4. Procedural Abstraction | - [x] Program code segment showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. - [x] Program code segment showing where the student-developed procedure is being called. - [x] describes what the identified procedure does and how it contributes to the overall functionality of the program. | Met all requirments | 1/1 | 1/1 | . 5. Algorithm Implementation | - [x] sequencing - [x] selection - [x] iteration - [x] explains in detailed steps how the identified algorithm works in enough detail that someone else could recreate it. | Met all requirments | 1/1 | 1/1 | . 6. Testing | - [x] describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute. - [x] describes the condition(s) being tested by each call to the procedure. - [x] identifies the result of each call. | Didn&#39;t Desrcribe the conditions | 1/1 | 0/1 | . Total | | | 4/6 | 4/6 | . Hacks . Collegeboard&#39;s grade and mine disagree in a few ways. I felt like mine was a little harder. whenever a description or code fragment is requested in an inquiry. I wouldn&#39;t notice anything when I looked at the question. The student may have clarified it elsewhere in their response, though. Additionally, I wasn&#39;t entirely sure where sequencing, selection, and iteration were located. I made an effort to find it, but I was forced to deduce it from the video. | The CPT needs to be quite intricate and capable of having a significant output input, function, and goal. It can&#39;t only be an information forum. It must have a function. | The original CPT failed to adequately describe the goal. It is crucial that | . &lt;/div&gt; | .",
            "url": "https://f1nnc.github.io/mysite/collegegradesvs",
            "relUrl": "/collegegradesvs",
            "date": " • Jan 12, 2023"
        }
        
    
  
    
        ,"post29": {
            "title": "Model and Object-Oriented Programming",
            "content": "Class and Object Terms . The foundations of Object-Oriented Programming is defining a Class . In Object-Oriented Programming (OOP), a class is a blueprint for creating an Object. (a data structure). An Object is used like many other Python variables. | A Class has ... a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self | a collection of Functions/Procedures. These are called *Methods when they exist inside a Class definition. | . | An Object is created from the Class/Template. Characteristics of objects ... an Object is an Instance of the Class/Template | there can be many Objects created from the same Class | each Object contains its own Instance Data | the data is setup by the Constructor, this is the &quot;init&quot; method in a Python class | all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) | . | A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions ... @property decorator (aka getter). This enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) | @name.setter decorator (aka setter). This enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) | observe all instance data (self._name, self.email ...) are prefixed with &quot;&quot;, this convention allows setters and getters to work with more natural variable name (name, email ...) | . | . Class and Object Code . # Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) # A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: # define user objects u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;) u2 = User(name=&#39;Nicholas Tesla&#39;, uid=&#39;nick&#39;, password=&#39;123nick&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;eli&#39;, password=&#39;123eli&#39;) u5 = User(name=&#39;Hedy Lemarr&#39;, uid=&#39;hedy&#39;, password=&#39;123hedy&#39;) # put user objects in list for convenience users = [u1, u2, u3, u4, u5] # Find user print(&quot;Test 1, find user 3&quot;) u = tester(users, u3.uid, &quot;123lex&quot;) # Change user print(&quot;Test 2, change user 3&quot;) u.name = &quot;John Mortensen&quot; u.uid = &quot;jm1021&quot; u.set_password(&quot;123qwerty&quot;) u = tester(users, u.uid, &quot;123qwerty&quot;) # Make dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Test 3, make a dictionary&quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) print(&quot;Test 4, make a dictionary&quot;) json_string = json.dumps([vars(user) for user in users]) print(json_string) . Test 1, find user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$nTQ...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$JPM...&#34; * name: &#34;Alexander Graham Bell&#34;, id: &#34;lex&#34;, psw: &#34;sha256$iHV...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$US0...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$2cC...&#34; Test 2, change user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$nTQ...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$JPM...&#34; * name: &#34;John Mortensen&#34;, id: &#34;jm1021&#34;, psw: &#34;sha256$2I7...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$US0...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$2cC...&#34; Test 3, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$nTQxZ9alViZd3WOn$34c90a641520c96e3d91ac148340b8b07d3c0958249dfcfe4a3eb05e2621efef&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$JPMovUtCRid1pCTE$089368f59621e8878ea730e5328bd9fc442f1d63f40d99f52502c059f9921281&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$2I7yhf1jQOPNu2YE$473f9f24b42cbbd52d6fd4effe03b73ba41ff31ea5532940480aadef56b3ce2d&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$US0fsfAaoQix8ido$5b6bac49c74a9fe08b18147a8d0f5c41d7805c42238a9d29dc2e8dbafff8324f&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$2cC6Hp5Z4WcmxpBK$df9ed2dbe43edee11d7dc5101057274b2c47be5db95d6610ab7e4fba2dbf6d17&#34;}] Test 4, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$nTQxZ9alViZd3WOn$34c90a641520c96e3d91ac148340b8b07d3c0958249dfcfe4a3eb05e2621efef&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$JPMovUtCRid1pCTE$089368f59621e8878ea730e5328bd9fc442f1d63f40d99f52502c059f9921281&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$2I7yhf1jQOPNu2YE$473f9f24b42cbbd52d6fd4effe03b73ba41ff31ea5532940480aadef56b3ce2d&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$US0fsfAaoQix8ido$5b6bac49c74a9fe08b18147a8d0f5c41d7805c42238a9d29dc2e8dbafff8324f&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$2cC6Hp5Z4WcmxpBK$df9ed2dbe43edee11d7dc5101057274b2c47be5db95d6610ab7e4fba2dbf6d17&#34;}] . Hacks . Add new attributes/variables to the Class. Make class specific to your CPT work. . Add classOf attribute to define year of graduation Add setter and getter for classOf | . | Add dob attribute to define date of birth This will require investigation into Python datetime objects as shown in example code below | Add setter and getter for dob | . | Add instance variable for age, make sure if dob changes age changes Add getter for age, but don&#39;t add/allow setter for age | . | Update and format tester function to work with changes | . Start a class design for each of your own Full Stack CPT sections of your project . Use new code cell in this notebook | Define init and self attributes | Define setters and getters | Make a tester | . Start Code for Hacks . from datetime import date from werkzeug.security import generate_password_hash, check_password_hash import json class User: def __init__(self, name, uid, password, dib, grad_year): self._name = name self._uid = uid self.set_password(password) self._dib = dib self._grad_year = grad_year self._age = None self.update_age() @property def name(self): return self._name @name.setter def name(self, name): self._name = name @property def uid(self): return self._uid @uid.setter def uid(self, uid): self._uid = uid def is_uid(self, uid): return self._uid == uid @property def dib(self): return self._dib @dib.setter def dib(self, dib): self._dib = dib self.update_age() def update_age(self): today = date.today() self._age = today.year - self._dib.year - ((today.month, today.day) &lt; (self._dib.month, self._dib.day)) @property def age(self): return self._age @property def grad_year(self): return self._grad_year @grad_year.setter def grad_year(self, grad_year): self._grad_year = grad_year @property def dictionary(self): dict = { &quot;name&quot; : self.name, &quot;uid&quot; : self.uid, &quot;dob&quot; : self.dib, &quot;age&quot; : self.age, &quot;grad_year&quot; : self.grad_year } return dict def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result def __str__(self): return json.dumps(self.dictionary) def __repr__(self): return f&#39;User(name={self._name}, uid={self._uid}, password={self._password},dob={self._dib}, grad_year={self._grad_year})&#39; if __name__ == &quot;__main__&quot;: u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dib=date(1847, 2, 11), grad_year=1865) .",
            "url": "https://f1nnc.github.io/mysite/2023/01/10/PBL-model.html",
            "relUrl": "/2023/01/10/PBL-model.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post30": {
            "title": "3.17 and 3.18 Algorithmic Efficiency/Undecidable Problems",
            "content": "Notes . Hailstone numbers are undeciable and always end with 4 2 1 | . Vocab . Collatz: The Collatz conjecture is one of the most famous unsolved problems in mathematics. The conjecture asks whether repeating two simple arithmetic operations will eventually transform every positive integer into 1. . | Hailstone numbers: The sequence of integers generated by Collatz conjecture are called Hailstone Numbers. Examples: Input : N = 7 Output : Hailstone Numbers: 7, 22, 11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1 No. . | Iteration: The action or a process of iterating or repeating: such as. : a procedure in which repetition of a sequence of operations yields results successively closer to a desired result. . | Undecidable problems: An undecidable problem is one that should give a &quot;yes&quot; or &quot;no&quot; answer, but yet no algorithm exists that can answer correctly on all inputs. . | Unsolvable problems: An unsolvable problem is one for which no algorithm can ever be written to find the solution. . | . Hacks Unit 3 Section 18 . def collatz(i): list_ = [i] while i != 1: if i % 2 &gt; 0: i =((3 * i) + 1) list_.append(i) else: i = (i / 2) list_.append(i) return list_ while True: try: i = int(input(&#39;Enter i: &#39;)) break except ValueError: print(&#39;Invalid selection, try again: &#39;, end=&#39;&#39;) l = collatz(i) print(&#39;&#39;) print(&#39;Collatz sequence:&#39;, l) print(&#39;Number of iterations:&#39;, len(l) - 1) . Collatz sequence: [12, 6.0, 3.0, 10.0, 5.0, 16.0, 8.0, 4.0, 2.0, 1.0] Number of iterations: 9 . Hacks for Unit 3 Section 17 . Inaficent Way to sort letters . Makes a varible for each Food | Then puts them into a list | On a larger Data Scale this would take longer | This one took 7.6 seconds | . def food(): Food1 = &quot;pizza&quot; Food2 = input(&quot;Input a food&quot;) Food3 = input(&quot;Input a food&quot;) foods = (Food1, Food2, Food3) for i in foods: if i == &quot;pizza&quot;: print(&quot;there is pizza&quot;) return foods result = food() print(result) . there is pizza (&#39;pizza&#39;, &#39;sprite&#39;, &#39;chips&#39;) . More efficent way . Only has one varible that list each food | Doesn&#39;t need to be put in a list | Works better on a larger scale | Only takes 4.1 seconds | . def fast(): foods = (&quot;pizza&quot;, input(&quot;Input a food&quot;), input(&quot;Input a food&quot;)) for i in foods: if i == &quot;pizza&quot;: print(&quot;there is pizza&quot;) return foods result = fast() print(result) . there is pizza (&#39;pizza&#39;, &#39;sprite&#39;, &#39;chips&#39;) .",
            "url": "https://f1nnc.github.io/mysite/.trimester%202%20student%20teaching/iteration/logic/2022/12/13/hwnine.html",
            "relUrl": "/.trimester%202%20student%20teaching/iteration/logic/2022/12/13/hwnine.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "3.16 Simulation",
            "content": "Notes . Examples of a simulation testing safety of a car | games | testing efficeny -test train routes | . | . . Advantages: Can be safer | More cost-effective | More efficient | More data in less time | . | . . Disadvantages: Not as accurate as experiments | outside factors not included (ex: in rolling dice simulation gravity and air resistances | . | . . Vocab . Experiment definition: procedure undertaken to make a discovery, test a hypothesis, or demonstrate a known fact | . Hacks #1 . A good simulation idea would be one for airport traffic | It would test out how different types of roads would benfit the airport | It would use simulated cars and assign some to park and some to drop off | . Hack #2 . questions_number = 6 answers_correct = 0 questions = [ &quot;True or False: Simulations will always have the same result. n A: True, n B: False&quot;, &quot;True or False: A simulation has results that are more accurate than an experiment n A: True, n B: False&quot;, &quot;True or False: A simulation can model real world events that are not practical for experiments n A: True, n B: False&quot;, &quot;Which one of these is FALSE regarding simulations n A: Reduces Costs, n B: Is safer than real life experiments, n C: More Efficient, n D: More accurate than real life experiments&quot;, &quot;Which of the following scenarios would be the LEAST beneficial to have as a simulation n A: A retail company wants to identify the item which sold the most on their website, n B: A restaurant wants to determine if the use of robots will increase efficiency, n C: An insurance company wants to study the impact of rain on car accidents, n D: A sports car company wants to study design changes to their new bike design &quot;, &quot;Which of the following is better to do as a simulation than as a calculation n A: Keeping score at a basketball game, n B: Keeping track of how many games a person has won, n C: Determining the average grade for a group of tests, n D: Studying the impact of carbon emissions on the environment&quot; ] question_answers = [ &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;A&quot;, &quot;D&quot; ] print(&quot;Welcome to the Simulations Quiz!&quot;) def ask_question (question, answer): print(&quot; n&quot;, question) user_answer = input(question) print(&quot;You said: &quot;, user_answer) if user_answer == answer: print(&quot;Correct!&quot;) global answers_correct answers_correct = answers_correct + 1 else: print(&quot;You are incorrect&quot;) for num in range(questions_number): ask_question(questions[num], question_answers[num]) print(&quot;You scored: &quot;, answers_correct, &quot;/6&quot;) . Welcome to the Simulations Quiz! True or False: Simulations will always have the same result. A: True, B: False You said: B Correct! True or False: A simulation has results that are more accurate than an experiment A: True, B: False You said: B Correct! True or False: A simulation can model real world events that are not practical for experiments A: True, B: False You said: A Correct! Which one of these is FALSE regarding simulations A: Reduces Costs, B: Is safer than real life experiments, C: More Efficient, D: More accurate than real life experiments You said: D Correct! Which of the following scenarios would be the LEAST beneficial to have as a simulation A: A retail company wants to identify the item which sold the most on their website, B: A restaurant wants to determine if the use of robots will increase efficiency, C: An insurance company wants to study the impact of rain on car accidents, D: A sports car company wants to study design changes to their new bike design You said: A Correct! Which of the following is better to do as a simulation than as a calculation A: Keeping score at a basketball game, B: Keeping track of how many games a person has won, C: Determining the average grade for a group of tests, D: Studying the impact of carbon emissions on the environment You said: D Correct! You scored: 6 /6 . Hack #3 . First there is the parse_input which gets the amount of dice you are rolling | Then the roll_dice makes a dictonary for the results and goes through a range of 1 through 6 and picks a random one | depending on how many you chose it goes through that many in the for loop | then it returns the results and pringts them # Guiding Question | In your opinion, would an experiment be better in this situation? . | . Hack #4 . Changed it into a 14 sided dice, and made it so you can roll 10 Dice | . def parse_input(input_string): if input_string.strip() in {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;,&quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;10&quot;}: return int(input_string) else: print(&quot;Please enter a number from 1 to 6.&quot;) raise SystemExit(1) import random def roll_dice(num_dice): roll_results = [] for _ in range(num_dice): roll = random.randint(1, 14) roll_results.append(roll) return roll_results num_dice_input = input(&quot;How many dice do you want to roll? [1-6] &quot;) num_dice = parse_input(num_dice_input) roll_results = roll_dice(num_dice) print(&quot;you rolled:&quot;, roll_results) . you rolled: [4, 9, 13, 7, 8, 5, 12, 11, 10, 4] . Guided Question . In your opinion, would an experiment be better in this situation? Experiment, cause dice are cheap and don&#39;t cause any bad effects to people/envoriment | . | . EXTRA CREDIT . how long it takes for lots of people to go on a ride | can choose how many people there are | prints info as the simulation goes | . Guided Question . What makes it a simulation? Simulations don&#39;t have real world effects, and are usally online to test an experiment | . | . people = int(input(&quot;Input how many people you want for the ride&quot;)) minutes = 0 print(people, &quot;people are inside the que&quot;) # While loop to go through everyone while people &gt; 0: # Taking people from line people -= 20 # Checks if the number of people is negeative and changes so it will look better on print if people &lt; 0: people -= people # time to get on minutes += 0.5 # the ride time minutes += 3 # time to get off minutes += 0.5 print(&quot;There are&quot;, people, &quot;people left and&quot;, minutes, &quot;minutes have gone by&quot;) print(&quot;it takes&quot;, minutes, &quot;minutes&quot;) . 208 people are inside the que There are 188 people left and 4.0 minutes have gone by There are 168 people left and 8.0 minutes have gone by There are 148 people left and 12.0 minutes have gone by There are 128 people left and 16.0 minutes have gone by There are 108 people left and 20.0 minutes have gone by There are 88 people left and 24.0 minutes have gone by There are 68 people left and 28.0 minutes have gone by There are 48 people left and 32.0 minutes have gone by There are 28 people left and 36.0 minutes have gone by There are 8 people left and 40.0 minutes have gone by There are 0 people left and 44.0 minutes have gone by it takes 44.0 minutes . Guided Question . What are it’s advantages and disadvantages? Can be Safer, and Cost way less money | Although can&#39;t predict how many people will like the ride/acually go | . | .",
            "url": "https://f1nnc.github.io/mysite/.trimester%202%20student%20teaching/simulation/experiments/2022/12/12/hweight.html",
            "relUrl": "/.trimester%202%20student%20teaching/simulation/experiments/2022/12/12/hweight.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "3.14-3.15- Libraries and Random Values",
            "content": "Notes . A software library contains procedures that can be used in the creation of new programs. | Existing segments of code can come from internal or external sources, ie. libraries or previously written code. | The use of libraries simplifies the task of creating complex programs. | Application program interfaces (APIs) are specifications for how the procedures in a library behave and can be used. | Documentation for a library or API is necessary in understanding the key behaviors provided by the API/library and how to utilize them in your work. | A library is a collection of code from an external source that can be used to add functionality to a program. | Libraries are very useful, as they can be used to save time and effort in the development process. | Libraries are usually included in a program using a special keyword called &quot; .&quot; This keyword tells the program to look for the library and use its code. | Randomization generates a random value beteen two numbers | . Hacks . Hacks 1 . 1. . import random contestant1 = random.randint(1,10) contestant2 = random.randint(1,10) print (&#39;Contestant&#39;, contestant1, &#39;vs&#39;, &#39;contestant&#39;, contestant2) . Contestant 2 vs contestant 7 . I imported the random library database. By using this I used the random int line of code to choose a bumber between 1 and 10. I then put these two equal to a different variable. Finally I made a print statement to make two random contestents of the ten to go agianst each other. This could be used for making a schedule for a sports league. | Hacks 2 . The inport random function imports the database from the random library. It allows us to use new lines of code such as &quot;rand.int&quot;. Now we get to make a lot more lines fo code that have to do with randomization | Some other things we can import other than random is math, turtles, flask, dictionary, and sqlalchemy. You can import many things. Different people have made these different libraries so the amount of things you can import is based on what other people have made. | Hack 3 . 1. . import random color = random.randint(1,8) if color == 1 | 2 | 3: print(&#39;Green&#39;) elif color == 4 | 5: print(&#39;Blue&#39;) elif color == 6: print(&#39;Purple&#39;) elif color == 7: print(&#39;Red&#39;) elif color == 8: print(&#39;Orange&#39;) . Orange . The numbers that are outputted for RANDOM(12,20) are 12, 13, 14, 15, 16, 17, 18, 19, and 20. No numbers are excluded |",
            "url": "https://f1nnc.github.io/mysite/.trimester%202%20student%20teaching/api/iteration/2022/12/11/hwseven.html",
            "relUrl": "/.trimester%202%20student%20teaching/api/iteration/2022/12/11/hwseven.html",
            "date": " • Dec 11, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "3.12 and 3.13 Calling Procedures/Developing Procedures",
            "content": "Notes . To call a prodecure you have to use partheness and the parameter | To determine the result of a procedure or any code, you must follow the code line by line and see what each one does | Parameters can be used to make functions work with multipble inputs | . Vocab . Procedure: is a named set of instructions that can take in parameters and return values. May be called &quot;method&quot; or &quot;function&quot; in different programming languages. . Parameters: are independent variables used in the procedure to produce a result. It allows a procedure to execute without initially knowing specific input values. . Modularity: the practice of breaking a complex program into smaller, independent parts or modules that can be used and reused in different parts of the program . Abstraction: the practice of hiding the details of how a particular code or system works and exposing only the essential features or functions that are necessary for other parts of the program to use . Duplication: having multiple duplicate code blocks, often decreasing readability and efficiency . Logic: the sequence of steps and operations that a computer follows to execute a program, including the specific instructions and decision-making processes built into the code . Arguements: a way to provide information to a function, usually defined outside a function and then imported into a function with parameters . Hacks . 3.12 A . Procedure: is like a bunch of intrusticions that can take in different values . Parameter: an indepentent var that is used in procedures to get a different result . . Return Values: are the bottom part of the function that have the return next them . Output Values: the value of whatever is outputed . import math # Function def findsqrt(x): sq = math.sqrt(x) return sq x = 16 # Function printed two different ways print(findsqrt(x)) print(findsqrt(25)) print(findsqrt(int(input(&quot;input a number to find its sq root&quot;)))) . 4.0 5.0 10.0 . 3.13 B . If you abstract your coding it makes you type less and have less code and make you a better more lazier coder . | Since we just did math these functions find powers of a certin root, you can change the root and how much you want it for the next value . | . number = int(input(&quot;Pick a number&quot;)) secondpower = int(input(&quot;What power do you want to also see&quot;)) # main function combines the two def main_function(): result = sub_function1() print(result) result2 = sub_function2(result) return result2 # finds the squre def sub_function1(): result = number * number return result # can change to whatever root you want but will find the cubed def sub_function2(result): p = 0 while p &lt; (secondpower - 2): result = result * number p += 1 if p == (secondpower - 2): break return result print(main_function()) . 9 243 . Hack 3 . def count_words_starting_with(string, character): # Split the string into a list of words words = string.split() # Initialize a counter variable count = 0 # Iterate over the words and check if each word starts with the given character for word in words: if word[0] == character: count += 1 return count . 3.13 C Hacks . procedure names are just the names that you give procedures | arugments are a value that is passed when a function is called | . Addition . Add numbers . Subtraction . Minus Numbers . Multiply . Multiply Numbers . Divide . Divide Numbers .",
            "url": "https://f1nnc.github.io/mysite/.trimester%202%20student%20teaching/functions/abstraction/algorithm/2022/12/08/hwsix.html",
            "relUrl": "/.trimester%202%20student%20teaching/functions/abstraction/algorithm/2022/12/08/hwsix.html",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "3.9 and 3.11 Deveoping Algorithms/Binary Search",
            "content": "Notes . If code look the same i doesn&#39;t mean it does the same thin | Note what code | Before making an agorthim plan out all steps | Outline can be made with flow charts or just write them out | . Vocab . Binary Search: repeatedly dividing a search interval in half | . Hacks 3.9.1 . 1 . It is imporant because different algorithms can output different things ## 2 | . isRaining = True isSunny = False #If Statements if isRaining == True: print(&quot;Get an umbrella for the walk&quot;) else: print(&quot;Go on a Walk&quot;) if isSunny == True: print(&quot;Go on a walk :)&quot;) . Get an umbrella for the walk . isRaining = False isSunny = True # Setting Var goforWalk = isRaining or not(isSunny) # If statements if goforWalk == False: print(&quot;don&#39;t walk&quot;) else: print(&quot;go for a walk&quot;) . don&#39;t walk . Hacks for 3.9.2 . Natural lang . Start | Are you old enought to drink | if not wait a year | do you have money | if not you&#39;re poor | if so you get beer | . age = 17 money = 4 #When they are under age they wait a year until they are over while age &lt;= 20: age = age + 1 print(age) if age &gt;= 21: if money &gt;= 3.99: print(&quot;Here is your Drink&quot;) #if they don&#39;t have enough money they will say they are poor else: print(&quot;im poor&quot;) . Hacks 3.9.3 . import random #sets variables for the game num_guesses = 0 user_guess = 0 upper_bound = 100 lower_bound = 0 #generates a random number number = random.randint(1,100) # print(number) #for testing purposes print(number) print(&quot;I&#39;m thinking of a number between 1 and 100.&quot;) #Write a function that gets a guess from the user using input() def guess(): g = int(input(&quot;Choose a number&quot;)) return g #add something here #Change the print statements to give feedback on whether the player guessed too high or too low def search(number, guess): global lower_bound, upper_bound if guess &lt; number: print(&quot;Higher, your getting there&quot;) #change this lower_bound = guess elif guess &gt; number: print(&quot;Lower, your getting closer&quot;) #change this upper_bound = guess return lower_bound, upper_bound while user_guess != number: user_guess = guess() num_guesses += 1 print(f&quot;You guessed {user_guess}.&quot;) lower_bound, upper_bound = search(number, user_guess) print(f&quot;Guess a number between {lower_bound} and {upper_bound}.&quot;) print(f&quot;You guessed the number in {num_guesses} guesses!&quot;) . 72 I&#39;m thinking of a number between 1 and 100. You guessed 50. Higher Guess a number between 50 and 100. You guessed 72. Guess a number between 50 and 100. You guessed the number in 2 guesses! . . Hacks 3.11 . . . . numlist1 = [12, 14, 43, 57, 79, 80, 99] numlist2 = [92, 43, 74, 66, 30, 12, 1] numlist3 = [7, 13, 96, 111, 33, 84, 60] def middle(x): y = (7+1)/2 middle = x[int(y)] return middle x = numlist1 print(middle(x)) . 79 . The Second number would be looked at more because binary starts at 1 | [3, 2, 8, 12, 99] can not be searched because the order of the numbers is not perfect | .",
            "url": "https://f1nnc.github.io/mysite/.trimester%202%20student%20teaching/iteration/2022/12/01/hwfive.html",
            "relUrl": "/.trimester%202%20student%20teaching/iteration/2022/12/01/hwfive.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "3.8 and 3.10 Iteration/Lists",
            "content": "Notes . Section Objectives: . Express an algorithm that uses iteration without using a programming language | Determine the result or side effect of iteration statements | Write iteration statements | . Vocab . Iteration: a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met . | Iteration Statements: change the sequential flow of control by repeating a set of statements zero or more times, until a stopping condition is met . | Repeat Until: if the condition evaluates to true initially, the loop body is not executed at all, due to the condition being checked before the loop . | Complete Traversal: All elements in a list are assessed . | Partial Traversal: Only a given portion of elements are assessed . | Iterative Traversal: When loops are used to iterate through a list and to access each single element at a time. . | . Notes . Iteration is part of an agrothim | Keeps looping until problem is finshed | range excludes that last value | insert( ) allows a value to be inserted into a list at index i | append( ) allows a value to be added at the end of a list | remove( ) allows an element at index i to be deleted from a list | length( ) returns the number of elements currently in a specific list | . Hacks Unit 3 Section 3.8.1 . 1 . Iteration is when a loop repeats steps until a condtion is met | . 2 . Cycle through water animals till nemo is found | . 3 . water = [&quot;whale&quot;, &quot;trout&quot;, &quot;shark&quot;, &quot;bass&quot;, &quot;nemo&quot;] for fi in water: if i == &quot;nemo&quot;: print(&quot;nemo is here&quot;) break else: print(i + &quot; is not nemo&quot;) . whale is not nemo trout is not nemo shark is not nemo bass is not nemo nemo is here . Hacks Unit 3 Section 3.8.2 . 1 . Iteration Statements are statments that go through a process of steps until a condition is met | . 2 . for i in reversed(range(1,11)): print(i) . 10 9 8 7 6 5 4 3 2 1 . 3 . numbers = 0 n = 1 while numbers &lt; 80: numbers = 3+(n-1)*13 n = n + 1 print(numbers) . 3 16 29 42 55 68 81 . Hacks Unit 3 Section 10 . nums = [10, 15, 20, 25, 30, 35] mnums = min(nums) for i in nums: if i &gt; mnums: mnums = mnums + 5 else: mnums = mnums + 5 print(mnums) . 40 . .",
            "url": "https://f1nnc.github.io/mysite/.trimester%202%20student%20teaching/iteration/agorithm/2022/11/30/hwfour.html",
            "relUrl": "/.trimester%202%20student%20teaching/iteration/agorithm/2022/11/30/hwfour.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "3.3 and 3.4 Mathematical Expressions/Strings",
            "content": "Notes . Algorithms are a finite set of instructions that accomplish a task. it has three parts, sequence, selection, and iteration | A sequence is the order of how to do something to achieve a result, similarly to how you follow the instructions from a teacher. | A selection allows an algorithm to make a decision based on if a condition is met, an example of this is when your car is out of fuel, you go to the gas station to fill your car, but if your car is full you wouldn&#39;t go to the gas station. | An iteration is a loop and doing something again until a condition is met, like you put away your computer when you are finished with your work. | Arithmetic uses addition, subtraction, division, multiplication, and modulus operator | Addition: a+b | Subtraction: a-b | Multiplication: a*b | Division: a/b | Modulus: a MOD b | (a and b can be string or number) | A string concatenation connects two or more string end-to-end to make a new string | Len() gives the character number | strings are variables and can be joined together through the print() command to make a statement | . Hacks . 1 . Sequence | Sequence | Selection | Iteration/Selection | Sequence | The sequences are just the items and steps in order. The first set is to set item to a number and then get next number in the list. | The slection is number three and number 4 because it is making a decion based on and input and giving a different output depending on what the input was. | The iteration is 4 because it is redirecting the code also known as looping. ## Crossword | 1) Iteration | 2) Selection | 3) Sequence ## 2 | . num1 = 5 num2 = num1 * 3 num3 = num2 / num1 * (9 % 2) * 4 result = (num3 % num1 + num2) % num3 * 3 / 5 . 5 X 3 = 15/5= 3 9/2 leaves remainder of 1 1 X 4 X 3 = 12 12 % 5 = 2 + 12 = 15 17 % 12 = 5 5 X 3= 15 15/5= 3 . 3 .",
            "url": "https://f1nnc.github.io/mysite/.trimester%202%20student%20teaching/iteration/algorithm/2022/11/29/hwtwo.html",
            "relUrl": "/.trimester%202%20student%20teaching/iteration/algorithm/2022/11/29/hwtwo.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "3.1 and 3.2 Variables and Assignments/Data Abstraction",
            "content": "Hack 1 . An assignment operator is the transition character of a variable. = for python for example | Collegeboard pseudocode uses an arrow &lt; to assign values to variables | If a variable, x, is initially given a value of 15 and ;ater on changed to 22 it would display 22 because it was changed from 15. | . Hack 2 . A list is a series of varaibles that are listed then printed in one | An element is the characters isside a string | An easy way to reference elementing in a list or string is to use a print command but also list the number of that varable in the list. If it is the thrid item in the list you can put 2 or negative to if theres four items in the list | An example of a string is name = &quot;Finn&quot; | . name = &quot;Finn&quot; favfood = [&quot;burger&quot;, &quot;steak&quot;, &quot;burrito&quot;] print(name, favfood) . Finn [&#39;burger&#39;, &#39;steak&#39;, &#39;burrito&#39;] . food = [&quot;burger&quot;, &quot;steak&quot;, &quot;burrito&quot;] print(food[2]) print(food[-1]) . burrito burrito . num1=input(&quot;Input a number. &quot;) num2=input(&quot;Input a number. &quot;) num3=input(&quot;Input a number. &quot;) add=input(&quot;How much would you like to add? &quot;) # Add code in the space below numlist = [int(num1), int(num2), int(num3)] # The following is the code that adds the inputted addend to the other numbers. It is hidden from the user. for i in numlist: numlist[i -1] += int(add) print(numlist) . [5, 6, 7] . Hack 4 . Python Quiz . Complexity | Abstraction | . food = [&quot;pizza&quot;, &quot;hot dog&quot;, &quot;sushi&quot;, &quot;strawberry&quot;, &quot;sandwich&quot;] print(food) . Lists are better for a program than writing out the code because it makes the code more simple. It allows other programers to understand the code better and make edits easier. | . team1 = &quot;Bengals&quot; team2 = &quot;Saints&quot; team3 = &quot;Texans&quot; team4 = &quot;Cowboys&quot; print(team1, team2, team3, team4) . Bengals Saints Texans Cowboys . team = [&quot;Bengals&quot;, &quot;Saint&quot;, &quot;Texans&quot;, &quot;Cowboys&quot;] print(team) . [&#39;Bengals&#39;, &#39;Saint&#39;, &#39;Texans&#39;, &#39;Cowboys&#39;] .",
            "url": "https://f1nnc.github.io/mysite/.trimester%202%20student%20teaching/2022/11/28/hwone.html",
            "relUrl": "/.trimester%202%20student%20teaching/2022/11/28/hwone.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Final",
            "content": "Final . Final Corrections . . title: Final Corrections | layout: base | toc: true | comments: true | categories: [Blog] . | . . Question 5 . Incorrect. Information about which restaurants Brandon and Cynthia have visited in the past is not needed. Restaurants are recommended based on whether they can accommodate all allergies and dietary restrictions, not based on whether group members have been there before. Information about which food allergies and dietary restrictions can be accommodated at nearby restaurants is needed so that a restaurant can be recommended for the group. | . Question 12 . Incorrect. The name of a food item is input that needs to be provided by the customer in order for the order to be completed. | . Question 20 . Incorrect. Four bits can represent 24, or 16 pieces of information, so it is not necessary to add extra bits. | . Question 28 . Incorrect. This code incorrectly charges customers who use more than 25 units of electricity. These customers are charged $7 for each of the first 25 units and $5 for each subsequent unit. For examples, if a customer used 32 units of electricity, they should be charged $5 for the first 25 and $7 for the additional 7 units (32 – 25 = 7 units), for a total charge of $174. This code segment would incorrectly charge the customer 25 * $7 + 7 * $5 = $210 for the 32 units. | . Question 35 . Incorrect. This code segment sets maxPS to 50 by default, then uses the IF statement to set maxPS to 30 when time &gt; 120. | . Question 38 . Incorrect. While the list elements are strings, the indices of a list are typically nonnegative integers. | . Question 41 . Incorrect. This is the value of x after the code segment is executed, not the value of result. | . Question 43 . Incorrect. This is the value of x after the code segment is executed, not the value of result. | .",
            "url": "https://f1nnc.github.io/mysite/2022/11/09/final.html",
            "relUrl": "/2022/11/09/final.html",
            "date": " • Nov 9, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "N@tm",
            "content": "N@TM . What we saw at N@TM . . title: N@TM | layout: base | toc: true | comments: true | categories: [Blog] . | . Things I looked at . Comp Sci Department . . Striver is a social media website that allows people to like posts that other users posted. On the website the user can make a post and talk about anything on it. It also has an inspirational quote generator that uses an API to fetch data on random quotes | Quinn Eliabeth was an online shopping website. Its frontend was amazing. You could pick pieces of clothing and add them to cart. It adds to your overall price. | Scheduler was a website that allowed you to add events to a calender. It also used an API to fetch weather data. You input a city and it gives you the weather of that city. | . Computer Animation . . Computer animation was a great experience. Stundets created a whole entire 3D virtual wrold. There was donuts, tables, and walls in the one I looked at. It looked as if a cartoon could have been developed from this. | I have already done this class and it is so fun | . Drawing and Painting . . Drawing and painting is not my strong suit. This is why I think it is so much more impressive what some of these studetns are able to accomplish. There were many different great drawings. There were realistics portraits as well as creative chaos. | . What I could do better . Ideas . The Night at the Musuem taught me many things | Making a calender through fastpages | Using a large API to fetch data that only can be accessed through an input. The - API from my project was just a table. It was very basic and I think I can make it more complex. | Quinn Elizibeth taught me that by adding up values of the prices of clothes you can make a final checkout price. I could use this in a different way such as a math system. Maybe a calculator. | Striver showed me that making a social media platform is possible. I could maybe use this as a system to make posts on another website. | . How to get a better grade . Throughout the trimester I thought I could get away with only getting 2.7s every week and end wiht an A. However when I did this it lowered my grade much more than I thought. It meant my grade heavily depended on the final. Now I am in a situation where I might get a B if I didn’t meet the critera of the poject. | I will also make sure to pay more attention in class. I wasn’t paying as much attention as I shoud have during lectures | I need to work harder in class so I don’t have to do my projects on the weekends. | I have to also read more on the scheldule so I can do assignments correctly. | .",
            "url": "https://f1nnc.github.io/mysite/2022/11/08/N@TM.html",
            "relUrl": "/2022/11/08/N@TM.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "rapidapi",
            "content": "Time All-time Cases Recorded Deaths Active Cases . | | | | Country All-time Cases Recorded Deaths Active Cases .",
            "url": "https://f1nnc.github.io/mysite/data/rapidapi",
            "relUrl": "/data/rapidapi",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;8222bd61f1mshad1ad1dfca1b2bcp1aa093jsnd4c03fb4a7ae&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;jcmbea0fa2ff5msh7f14bf69be38ca6p175482jsn6c4988114560&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;message&#34;:&#34;You are not subscribed to this API.&#34;} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. . from tabulate import tabulate from matplotlib import artist import requests url = &quot;https://spotify81.p.rapidapi.com/artist_singles&quot; querystring = {&quot;id&quot;:&quot;2w9zwq3AktTeYYMuhMjju8&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;8222bd61f1mshad1ad1dfca1b2bcp1aa093jsnd4c03fb4a7ae&quot;, &quot;X-RapidAPI-Host&quot;: &quot;spotify81.p.rapidapi.com&quot; } song1 = &quot;placeholder&quot; song2 = &quot;placeholder&quot; song3 = &quot;placeholder&quot; artist1 = &quot;placeholder&quot; artist2 = &quot;placeholder&quot; artist3 = &quot;placeholder&quot; #create data data = [[song1, artist1], [song2, artist2], [song3, artist3],] #define header names col_names = [&quot;Song&quot;, &quot;Artist&quot;] #display table print(tabulate(data, headers=col_names)) . Song Artist -- -- placeholder placeholder placeholder placeholder placeholder placeholder . from matplotlib import artist import requests url = &quot;https://spotify81.p.rapidapi.com/artist_singles&quot; querystring = {&quot;id&quot;:&quot;2w9zwq3AktTeYYMuhMjju8&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;8222bd61f1mshad1ad1dfca1b2bcp1aa093jsnd4c03fb4a7ae&quot;, &quot;X-RapidAPI-Host&quot;: &quot;spotify81.p.rapidapi.com&quot; } # response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.json()) . {&#39;data&#39;: {&#39;artist&#39;: {&#39;discography&#39;: {&#39;singles&#39;: {&#39;totalCount&#39;: 213, &#39;items&#39;: [{&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1ez9K0s4OR2V0f8tttDv75&#39;, &#39;uri&#39;: &#39;spotify:album:1ez9K0s4OR2V0f8tttDv75&#39;, &#39;name&#39;: &#39;Hello Hello&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-10-07T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02beb276e8ce6ce9d53cfff5c0&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851beb276e8ce6ce9d53cfff5c0&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273beb276e8ce6ce9d53cfff5c0&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;CZg36vpcTdKIbr8Gcmk05w&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1ez9K0s4OR2V0f8tttDv75?si=CZg36vpcTdKIbr8Gcmk05w&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;70GSvRwILjynWHs5qAcDPY&#39;, &#39;uri&#39;: &#39;spotify:album:70GSvRwILjynWHs5qAcDPY&#39;, &#39;name&#39;: &#39;Wherever You Go (with Reynmen)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-08-26T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02e59b6b12320b639a72c0f360&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851e59b6b12320b639a72c0f360&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273e59b6b12320b639a72c0f360&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;82N5v0wiQ9OGapNpT6pMLw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/70GSvRwILjynWHs5qAcDPY?si=82N5v0wiQ9OGapNpT6pMLw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 2}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;33zJ4SIK5Tf8YXlYSsvelT&#39;, &#39;uri&#39;: &#39;spotify:album:33zJ4SIK5Tf8YXlYSsvelT&#39;, &#39;name&#39;: &#39;Wherever You Go&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-08-26T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02eefcba3ad842daa6f87a6896&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851eefcba3ad842daa6f87a6896&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273eefcba3ad842daa6f87a6896&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;kasjJ-YoT0G1qMmx--LXRg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/33zJ4SIK5Tf8YXlYSsvelT?si=kasjJ-YoT0G1qMmx--LXRg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;63oBgdhy76nv9I1LLhZQ3b&#39;, &#39;uri&#39;: &#39;spotify:album:63oBgdhy76nv9I1LLhZQ3b&#39;, &#39;name&#39;: &#39;Wherever You Go (Mert Hakan Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-08-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02259e22b2b451d91d2158dcc5&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851259e22b2b451d91d2158dcc5&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273259e22b2b451d91d2158dcc5&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;VxirXtc-TWuo72hK47GBSw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/63oBgdhy76nv9I1LLhZQ3b?si=VxirXtc-TWuo72hK47GBSw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7jeN8JERMZOCQfn0ETUnYY&#39;, &#39;uri&#39;: &#39;spotify:album:7jeN8JERMZOCQfn0ETUnYY&#39;, &#39;name&#39;: &#39;Magical Love (Maesic Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-06-18T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e022b961fe8d7fde37d76563247&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048512b961fe8d7fde37d76563247&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2732b961fe8d7fde37d76563247&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;aKMeEt5vTA-dLZ9HrWssGQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7jeN8JERMZOCQfn0ETUnYY?si=aKMeEt5vTA-dLZ9HrWssGQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 3}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3hqE43sWPNyUZZut3VNgMU&#39;, &#39;uri&#39;: &#39;spotify:album:3hqE43sWPNyUZZut3VNgMU&#39;, &#39;name&#39;: &#39;Magical Love&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-06-17T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02d8216408dc5ecb0be72e9730&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851d8216408dc5ecb0be72e9730&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273d8216408dc5ecb0be72e9730&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;73E7WA56RlmuS4uai4ObVg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3hqE43sWPNyUZZut3VNgMU?si=73E7WA56RlmuS4uai4ObVg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1UbFg8AzX8omvIxlQEMKUO&#39;, &#39;uri&#39;: &#39;spotify:album:1UbFg8AzX8omvIxlQEMKUO&#39;, &#39;name&#39;: &#39;Talk&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-06-03T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02dc487236aeef607d7b172d73&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851dc487236aeef607d7b172d73&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273dc487236aeef607d7b172d73&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;bZ87whhoRaq6qAbcZ_lfgg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1UbFg8AzX8omvIxlQEMKUO?si=bZ87whhoRaq6qAbcZ_lfgg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4rbCiSzxFxubcovAjLsdVv&#39;, &#39;uri&#39;: &#39;spotify:album:4rbCiSzxFxubcovAjLsdVv&#39;, &#39;name&#39;: &#39;Tare&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-04-05T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0255c99de91c07edf0092ebc4d&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485155c99de91c07edf0092ebc4d&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27355c99de91c07edf0092ebc4d&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;x-rL-bm7TUyRt71pOuO2gg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4rbCiSzxFxubcovAjLsdVv?si=x-rL-bm7TUyRt71pOuO2gg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7DDqCPpZjHqLK3fuD1JaD6&#39;, &#39;uri&#39;: &#39;spotify:album:7DDqCPpZjHqLK3fuD1JaD6&#39;, &#39;name&#39;: &#39;Tare (Albwho Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-04-01T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02ef264c213f1f426953bf4a57&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851ef264c213f1f426953bf4a57&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273ef264c213f1f426953bf4a57&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;OyivIOd3QYWQGA0biH2a5Q&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7DDqCPpZjHqLK3fuD1JaD6?si=OyivIOd3QYWQGA0biH2a5Q&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;49suZMTVKKsLNX34EqQ7mc&#39;, &#39;uri&#39;: &#39;spotify:album:49suZMTVKKsLNX34EqQ7mc&#39;, &#39;name&#39;: &#39;Déjà Vu&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-03-25T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e026bc9d2d0e42cddd1c6977586&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048516bc9d2d0e42cddd1c6977586&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2736bc9d2d0e42cddd1c6977586&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;OLMT80KHROWAqjtol_XSSA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/49suZMTVKKsLNX34EqQ7mc?si=OLMT80KHROWAqjtol_XSSA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4MCOi8ZgIluCg50QR2iU1w&#39;, &#39;uri&#39;: &#39;spotify:album:4MCOi8ZgIluCg50QR2iU1w&#39;, &#39;name&#39;: &#39;UP (Kaluma Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-03-10T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e024b30c10e877142918872ad2f&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048514b30c10e877142918872ad2f&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2734b30c10e877142918872ad2f&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;1Dw-fSCeS8y8ORbfy5-HWw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4MCOi8ZgIluCg50QR2iU1w?si=1Dw-fSCeS8y8ORbfy5-HWw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4gUM4llwsErkQQ1VqBvE2D&#39;, &#39;uri&#39;: &#39;spotify:album:4gUM4llwsErkQQ1VqBvE2D&#39;, &#39;name&#39;: &#39;UP (Arem Ozguc &amp; Arman Aydin Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-02-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e022c9c3a51bea7bc70a92a5c94&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048512c9c3a51bea7bc70a92a5c94&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2732c9c3a51bea7bc70a92a5c94&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;coXkyu5sQQ-xnuTtFz3kxg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4gUM4llwsErkQQ1VqBvE2D?si=coXkyu5sQQ-xnuTtFz3kxg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;49D6ut4LdJCBD90wRWzfe6&#39;, &#39;uri&#39;: &#39;spotify:album:49D6ut4LdJCBD90wRWzfe6&#39;, &#39;name&#39;: &#39;Lalele&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-01-20T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e021f43d9d7588ec1c832b8f2dc&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048511f43d9d7588ec1c832b8f2dc&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2731f43d9d7588ec1c832b8f2dc&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;eJnmQkKLRl2yhWoaHbOU6g&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/49D6ut4LdJCBD90wRWzfe6?si=eJnmQkKLRl2yhWoaHbOU6g&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;2jA1exLaHCcpHtDrGLKTmy&#39;, &#39;uri&#39;: &#39;spotify:album:2jA1exLaHCcpHtDrGLKTmy&#39;, &#39;name&#39;: &#39;UP&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-12-17T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e027bd254131ac1f8678448d076&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048517bd254131ac1f8678448d076&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2737bd254131ac1f8678448d076&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;hy3k3x_uQMC6JvzqJhDOlw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/2jA1exLaHCcpHtDrGLKTmy?si=hy3k3x_uQMC6JvzqJhDOlw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;6uvP8hlbI9X3RleKNVmBzT&#39;, &#39;uri&#39;: &#39;spotify:album:6uvP8hlbI9X3RleKNVmBzT&#39;, &#39;name&#39;: &#39;UP (Robert Cristian Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-12-03T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e021271f5f16702f3516f86579d&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048511271f5f16702f3516f86579d&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2731271f5f16702f3516f86579d&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;daNp_2sjTNysFwPNj0yZHw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/6uvP8hlbI9X3RleKNVmBzT?si=daNp_2sjTNysFwPNj0yZHw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;5kjggiiZEcRzFvQ4rowAsQ&#39;, &#39;uri&#39;: &#39;spotify:album:5kjggiiZEcRzFvQ4rowAsQ&#39;, &#39;name&#39;: &#39;De Dragul Tău&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-11-26T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02da7c4e91509943b3c7cf8ef4&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851da7c4e91509943b3c7cf8ef4&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273da7c4e91509943b3c7cf8ef4&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;6Z38rQNCT0yjo7C_5ziQkQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5kjggiiZEcRzFvQ4rowAsQ?si=6Z38rQNCT0yjo7C_5ziQkQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;21x0bCve7UJ7ZAapjt8GFz&#39;, &#39;uri&#39;: &#39;spotify:album:21x0bCve7UJ7ZAapjt8GFz&#39;, &#39;name&#39;: &#39;UP&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-29T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0265f27da14d572556a8a59755&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485165f27da14d572556a8a59755&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27365f27da14d572556a8a59755&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;iy67sksRQ9-ZPdK7_CQwSg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/21x0bCve7UJ7ZAapjt8GFz?si=iy67sksRQ9-ZPdK7_CQwSg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3wBRVC1SMfIEdsr9thFSYJ&#39;, &#39;uri&#39;: &#39;spotify:album:3wBRVC1SMfIEdsr9thFSYJ&#39;, &#39;name&#39;: &#39;UP (Vadim Adamov &amp; Hardphol Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0200296e006391b562e8c70563&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485100296e006391b562e8c70563&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27300296e006391b562e8c70563&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;KpM4AyGLTQahhva6UvC43g&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3wBRVC1SMfIEdsr9thFSYJ?si=KpM4AyGLTQahhva6UvC43g&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;605jn7Lsj6RD4ovYCsnrxe&#39;, &#39;uri&#39;: &#39;spotify:album:605jn7Lsj6RD4ovYCsnrxe&#39;, &#39;name&#39;: &#39;UP (Mert Hakan &amp; Onur Betin Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e023a3334b5c3ac49b938312f03&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048513a3334b5c3ac49b938312f03&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2733a3334b5c3ac49b938312f03&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;Z-NYpJYTQ8S4gjzuOfBDLA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/605jn7Lsj6RD4ovYCsnrxe?si=Z-NYpJYTQ8S4gjzuOfBDLA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3QJqG1fLaNGsgjVUroIPCT&#39;, &#39;uri&#39;: &#39;spotify:album:3QJqG1fLaNGsgjVUroIPCT&#39;, &#39;name&#39;: &#39;UP (Filatov &amp; Karas Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02d73086d4cbe065734d124185&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851d73086d4cbe065734d124185&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273d73086d4cbe065734d124185&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;gItuHw_cRXuXdbwvi5oLdQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3QJqG1fLaNGsgjVUroIPCT?si=gItuHw_cRXuXdbwvi5oLdQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}]}}}}, &#39;extensions&#39;: {&#39;cacheControl&#39;: {&#39;version&#39;: 1, &#39;hints&#39;: []}}} .",
            "url": "https://f1nnc.github.io/mysite/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] i = 1 for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 1 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The letter c is the 2 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) count = 1 for i in alphabetList: if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter c is the 3 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 if i == 0: pass while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) total = menu[item] #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 . KeyError Traceback (most recent call last) /home/finn/vscode/mysite/_notebooks/2022-10-03-AP-error_testing.ipynb Cell 20 in &lt;cell line: 14&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/finn/vscode/mysite/_notebooks/2022-10-03-AP-error_testing.ipynb#X52sdnNjb2RlLXJlbW90ZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; #ideally the code should prompt the user multiple times &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/finn/vscode/mysite/_notebooks/2022-10-03-AP-error_testing.ipynb#X52sdnNjb2RlLXJlbW90ZQ%3D%3D?line=11&#39;&gt;12&lt;/a&gt; item = input(&#34;Please select an item from the menu&#34;) &gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/finn/vscode/mysite/_notebooks/2022-10-03-AP-error_testing.ipynb#X52sdnNjb2RlLXJlbW90ZQ%3D%3D?line=13&#39;&gt;14&lt;/a&gt; total = menu[item] &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/finn/vscode/mysite/_notebooks/2022-10-03-AP-error_testing.ipynb#X52sdnNjb2RlLXJlbW90ZQ%3D%3D?line=14&#39;&gt;15&lt;/a&gt; #code should add the price of the menu items selected by the user &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/finn/vscode/mysite/_notebooks/2022-10-03-AP-error_testing.ipynb#X52sdnNjb2RlLXJlbW90ZQ%3D%3D?line=15&#39;&gt;16&lt;/a&gt; print(total) KeyError: &#39;&#39; . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | . Errors we might encounter . Not knowing the code we need to use | Not collebrating as much as we need to | Not understanding how to code something | .",
            "url": "https://f1nnc.github.io/mysite/collegeboard/errorx",
            "relUrl": "/collegeboard/errorx",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Collegenotes",
            "content": "College Board Notes . These are my college board notes . . title: Skate Tricks | layout: base | toc: true | comments: true | categories: [Blog] . | . 1.1 Video . Video 1 . Computing innovations are improved through collaberation | Computing innovtion includes a program as an integral part of its function | Computing innovation can be physical or nonphysical | Diverse perspectives eliminates bias in development Video 2 . | Pair programming is when two programmers work together. The diver writes the code and the pointers makes sure every line of code is correct. | Think-pair-share is a process where a student thinks through a process alone. Then they find a parter and share their ideas with them then the class. | Comments in code help partners | Github is a great way to work together | . Quiz Result . . Hacks . Me and my partner did not know each other before coming to this class | Both of us are white | He likes Football and I like Skating as our main hobbies | We do have a lot of similariities though | We are both new to coding but have differnt skills. He understandssome code better and I understand other code better. | .",
            "url": "https://f1nnc.github.io/mysite/2022/09/19/collegenotes.html",
            "relUrl": "/2022/09/19/collegenotes.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "Stress Video Notes",
            "content": "Gratitude list . My friends | My Parents | My Computer | My Home | My Skateboard | . Skating Gratitude . Skating is something I&#39;m very grateful for. It is a way to relive stress when it comes to any problem I face. It is a fun way to get exercise, and reason to go outside. With each trick I do you almost get this feeling of being proud of how far you have come. It takes alot of work to get to do any trick in skateboarding, I just feel so much better when I can hit a trick that I want to hit. It&#39;s a hobby, stress reiliver, and fun thing to do. . Goals . I want to Learn 5 new tricks by the end of the year: . I will Skate Every Day | I will watch videos about how to do tricks | I will ask advice from my friends on tricks they know already | . I want to have atleast 3 A&#39;s by the end of the tri: . I will do my hw every day | I stucture my time better for when I study | I will pay more attetion in classes I dont enjoy (World Histoy) | .",
            "url": "https://f1nnc.github.io/mysite/notebook/2022/09/15/Stress.html",
            "relUrl": "/notebook/2022/09/15/Stress.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post45": {
            "title": "App Ideas",
            "content": "Brainstorm . Exercise Counter | Game | Calculator | . Calculator Idea . Use Buttons For numbers | and having a counter at the top | Have a UI that looks like a calculator | .",
            "url": "https://f1nnc.github.io/mysite/notebook/2022/09/08/Ideas.html",
            "relUrl": "/notebook/2022/09/08/Ideas.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post46": {
            "title": "App Lab Notes",
            "content": "Notes . Our test is on Clash Royale | Use on event for everthing | Have the questions about triva or game facts | Use Variable to keep Score | Use the math tab to give score at the end | . Finshed Project . https://studio.code.org/projects/applab/IcRFV9_uevL48Hc1hK9LLbd1lGhj8rGvD4zg7c5FKL8 . Issues . We had to go figure out how to not have negative score | I ended up stopping it show wrong answer, because real tests dont tell you got something wrong and just let you fix it | .",
            "url": "https://f1nnc.github.io/mysite/blog/2022/09/06/AppLab.html",
            "relUrl": "/blog/2022/09/06/AppLab.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post47": {
            "title": "List and Dictionary",
            "content": "InfoDb = [] InfoDb.append({ &quot;FirstName&quot;: &quot;Finn&quot;, &quot;LastName&quot;: &quot;Carpenter&quot;, &quot;DOB&quot;: &quot;December 12&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;FavColor&quot;: &quot;Blue&quot;, &quot;Email&quot;: &quot;finnc51448@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2012 Nissan Xterra&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Jake&quot;, &quot;LastName&quot;: &quot;Warren&quot;, &quot;DOB&quot;: &quot;September 8&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;FavColor&quot;: &quot;Blue&quot;, &quot;Email&quot;: &quot;jacobw22751@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2016-Toyota Tacoma&quot;] }) InfoDb.append({ &quot;FirstName&quot;: input(&quot;Name:&quot;), &quot;LastName&quot;: input(&quot;Last Name:&quot;), &quot;DOB&quot;: input(&quot;DOB:&quot;), &quot;Residence&quot;: input(&quot;Residence&quot;), &quot;FavColor&quot;: input(&quot;Favorite Color&quot;), &quot;Email&quot;: input(&quot;Email:&quot;), &quot;Owns_Cars&quot;: input(&quot;Owned_Cars:&quot;) }) print(InfoDb) . [{&#39;FirstName&#39;: &#39;Finn&#39;, &#39;LastName&#39;: &#39;Carpenter&#39;, &#39;DOB&#39;: &#39;December 12&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;FavColor&#39;: &#39;Blue&#39;, &#39;Email&#39;: &#39;finnc51448@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2012 Nissan Xterra&#39;]}, {&#39;FirstName&#39;: &#39;Jake&#39;, &#39;LastName&#39;: &#39;Warren&#39;, &#39;DOB&#39;: &#39;September 8&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;FavColor&#39;: &#39;Blue&#39;, &#39;Email&#39;: &#39;jacobw22751@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2016-Toyota Tacoma&#39;]}, {&#39;FirstName&#39;: &#39;erika&#39;, &#39;LastName&#39;: &#39;carpenter&#39;, &#39;DOB&#39;: &#39;2/16/1965&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;FavColor&#39;: &#39;orange&#39;, &#39;Email&#39;: &#39;bakecarp@aol.com&#39;, &#39;Owns_Cars&#39;: &#39;tesla&#39;}] . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;FavColor:&quot;, d_rec[&quot;FavColor&quot;]) print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars:&quot;, d_rec[&quot;Owns_Cars&quot;]) # end=&quot;&quot; make sure no return occurs print() def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Finn Carpenter Residence: San Diego FavColor: Blue Birth Day: December 12 Cars: [&#39;2012 Nissan Xterra&#39;] Jake Warren Residence: San Diego FavColor: Blue Birth Day: September 8 Cars: [&#39;2016-Toyota Tacoma&#39;] erika carpenter Residence: San Diego FavColor: orange Birth Day: 2/16/1965 Cars: tesla .",
            "url": "https://f1nnc.github.io/mysite/notebook/2022/08/29/dictionary.html",
            "relUrl": "/notebook/2022/08/29/dictionary.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post48": {
            "title": "Notebook Test",
            "content": "def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;2&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;What is 1+1?&quot;) . Question: What is 1+1? Answer: 2 . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;4&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;What is 2+2&quot;) . Question: What is 2+2 Answer: 4 . q1 = &quot;&quot;&quot;Is the sky blue a. Yes b. No&quot;&quot;&quot; q2 = &quot;&quot;&quot;1+1 a. 2 b. 3 &quot;&quot;&quot; questions = {q1:&quot;a&quot;,q2:&quot;a&quot;} name = input(&quot;enter your name:&quot;) print(&quot;Hello&quot;, name) score = 0 for i in questions: print(i) ans = input(&quot;enter the answer: (a/b):&quot;) if ans==questions[i]: print(&quot;correct&quot;) score=score+1 print(score,&quot;point&quot;) else: print(&quot;wrong&quot;) . Hello Finn Is the sky blue a. Yes b. No correct 1 point 1+1 a. 2 b. 3 correct 2 point .",
            "url": "https://f1nnc.github.io/mysite/notebook/2022/08/25/notebookquiz.html",
            "relUrl": "/notebook/2022/08/25/notebookquiz.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post49": {
            "title": "Bash Check",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/finn/vscode exists. Directory /home/finn/vscode/APCSP exists. .",
            "url": "https://f1nnc.github.io/mysite/2022/08/25/bashhh.html",
            "relUrl": "/2022/08/25/bashhh.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post50": {
            "title": "First",
            "content": "Skate Tricks I Know . . title: Skate Tricks | layout: base | toc: true | comments: true | categories: [Blog] . | Ollie | Pop Shuvit | Front side 180 | Manual | Boardslide | . My Deck . .",
            "url": "https://f1nnc.github.io/mysite/2022/08/24/first.html",
            "relUrl": "/2022/08/24/first.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post51": {
            "title": "Binary Math",
            "content": "hi . Binary Math with Conversions . Plus Binary Octal Hexadecimal Color Code Color Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | | 0 | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | | | | | | | | | | | | | | | | | . .",
            "url": "https://f1nnc.github.io/mysite/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "About Me",
          "content": "My name is Finn Carpenter | I’m 15 | I like skating | I’m in APCSP | .",
          "url": "https://f1nnc.github.io/mysite/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  

  
  

  

  
  

  
  

  
  

  

  

  

  
  

  
      ,"page16": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://f1nnc.github.io/mysite/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}