{
  
    
        "post0": {
            "title": "rapidapi",
            "content": "Time All-time Cases Recorded Deaths Active Cases . | | | | Country All-time Cases Recorded Deaths Active Cases .",
            "url": "https://f1nnc.github.io/mysite/data/rapidapi",
            "relUrl": "/data/rapidapi",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;8222bd61f1mshad1ad1dfca1b2bcp1aa093jsnd4c03fb4a7ae&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;jcmbea0fa2ff5msh7f14bf69be38ca6p175482jsn6c4988114560&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;message&#34;:&#34;You are not subscribed to this API.&#34;} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. . from tabulate import tabulate from matplotlib import artist import requests url = &quot;https://spotify81.p.rapidapi.com/artist_singles&quot; querystring = {&quot;id&quot;:&quot;2w9zwq3AktTeYYMuhMjju8&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;8222bd61f1mshad1ad1dfca1b2bcp1aa093jsnd4c03fb4a7ae&quot;, &quot;X-RapidAPI-Host&quot;: &quot;spotify81.p.rapidapi.com&quot; } song1 = &quot;placeholder&quot; song2 = &quot;placeholder&quot; song3 = &quot;placeholder&quot; artist1 = &quot;placeholder&quot; artist2 = &quot;placeholder&quot; artist3 = &quot;placeholder&quot; #create data data = [[song1, artist1], [song2, artist2], [song3, artist3],] #define header names col_names = [&quot;Song&quot;, &quot;Artist&quot;] #display table print(tabulate(data, headers=col_names)) . Song Artist -- -- placeholder placeholder placeholder placeholder placeholder placeholder . from matplotlib import artist import requests url = &quot;https://spotify81.p.rapidapi.com/artist_singles&quot; querystring = {&quot;id&quot;:&quot;2w9zwq3AktTeYYMuhMjju8&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;8222bd61f1mshad1ad1dfca1b2bcp1aa093jsnd4c03fb4a7ae&quot;, &quot;X-RapidAPI-Host&quot;: &quot;spotify81.p.rapidapi.com&quot; } # response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.json()) . {&#39;data&#39;: {&#39;artist&#39;: {&#39;discography&#39;: {&#39;singles&#39;: {&#39;totalCount&#39;: 213, &#39;items&#39;: [{&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1ez9K0s4OR2V0f8tttDv75&#39;, &#39;uri&#39;: &#39;spotify:album:1ez9K0s4OR2V0f8tttDv75&#39;, &#39;name&#39;: &#39;Hello Hello&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-10-07T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02beb276e8ce6ce9d53cfff5c0&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851beb276e8ce6ce9d53cfff5c0&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273beb276e8ce6ce9d53cfff5c0&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;CZg36vpcTdKIbr8Gcmk05w&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1ez9K0s4OR2V0f8tttDv75?si=CZg36vpcTdKIbr8Gcmk05w&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;70GSvRwILjynWHs5qAcDPY&#39;, &#39;uri&#39;: &#39;spotify:album:70GSvRwILjynWHs5qAcDPY&#39;, &#39;name&#39;: &#39;Wherever You Go (with Reynmen)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-08-26T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02e59b6b12320b639a72c0f360&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851e59b6b12320b639a72c0f360&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273e59b6b12320b639a72c0f360&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;82N5v0wiQ9OGapNpT6pMLw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/70GSvRwILjynWHs5qAcDPY?si=82N5v0wiQ9OGapNpT6pMLw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 2}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;33zJ4SIK5Tf8YXlYSsvelT&#39;, &#39;uri&#39;: &#39;spotify:album:33zJ4SIK5Tf8YXlYSsvelT&#39;, &#39;name&#39;: &#39;Wherever You Go&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-08-26T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02eefcba3ad842daa6f87a6896&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851eefcba3ad842daa6f87a6896&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273eefcba3ad842daa6f87a6896&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;kasjJ-YoT0G1qMmx--LXRg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/33zJ4SIK5Tf8YXlYSsvelT?si=kasjJ-YoT0G1qMmx--LXRg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;63oBgdhy76nv9I1LLhZQ3b&#39;, &#39;uri&#39;: &#39;spotify:album:63oBgdhy76nv9I1LLhZQ3b&#39;, &#39;name&#39;: &#39;Wherever You Go (Mert Hakan Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-08-23T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02259e22b2b451d91d2158dcc5&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851259e22b2b451d91d2158dcc5&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273259e22b2b451d91d2158dcc5&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;VxirXtc-TWuo72hK47GBSw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/63oBgdhy76nv9I1LLhZQ3b?si=VxirXtc-TWuo72hK47GBSw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7jeN8JERMZOCQfn0ETUnYY&#39;, &#39;uri&#39;: &#39;spotify:album:7jeN8JERMZOCQfn0ETUnYY&#39;, &#39;name&#39;: &#39;Magical Love (Maesic Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-06-18T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e022b961fe8d7fde37d76563247&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048512b961fe8d7fde37d76563247&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2732b961fe8d7fde37d76563247&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;aKMeEt5vTA-dLZ9HrWssGQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7jeN8JERMZOCQfn0ETUnYY?si=aKMeEt5vTA-dLZ9HrWssGQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 3}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3hqE43sWPNyUZZut3VNgMU&#39;, &#39;uri&#39;: &#39;spotify:album:3hqE43sWPNyUZZut3VNgMU&#39;, &#39;name&#39;: &#39;Magical Love&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-06-17T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02d8216408dc5ecb0be72e9730&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851d8216408dc5ecb0be72e9730&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273d8216408dc5ecb0be72e9730&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;73E7WA56RlmuS4uai4ObVg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3hqE43sWPNyUZZut3VNgMU?si=73E7WA56RlmuS4uai4ObVg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;1UbFg8AzX8omvIxlQEMKUO&#39;, &#39;uri&#39;: &#39;spotify:album:1UbFg8AzX8omvIxlQEMKUO&#39;, &#39;name&#39;: &#39;Talk&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-06-03T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02dc487236aeef607d7b172d73&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851dc487236aeef607d7b172d73&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273dc487236aeef607d7b172d73&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;bZ87whhoRaq6qAbcZ_lfgg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/1UbFg8AzX8omvIxlQEMKUO?si=bZ87whhoRaq6qAbcZ_lfgg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4rbCiSzxFxubcovAjLsdVv&#39;, &#39;uri&#39;: &#39;spotify:album:4rbCiSzxFxubcovAjLsdVv&#39;, &#39;name&#39;: &#39;Tare&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-04-05T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0255c99de91c07edf0092ebc4d&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485155c99de91c07edf0092ebc4d&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27355c99de91c07edf0092ebc4d&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;x-rL-bm7TUyRt71pOuO2gg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4rbCiSzxFxubcovAjLsdVv?si=x-rL-bm7TUyRt71pOuO2gg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;7DDqCPpZjHqLK3fuD1JaD6&#39;, &#39;uri&#39;: &#39;spotify:album:7DDqCPpZjHqLK3fuD1JaD6&#39;, &#39;name&#39;: &#39;Tare (Albwho Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-04-01T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02ef264c213f1f426953bf4a57&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851ef264c213f1f426953bf4a57&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273ef264c213f1f426953bf4a57&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;OyivIOd3QYWQGA0biH2a5Q&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/7DDqCPpZjHqLK3fuD1JaD6?si=OyivIOd3QYWQGA0biH2a5Q&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;49suZMTVKKsLNX34EqQ7mc&#39;, &#39;uri&#39;: &#39;spotify:album:49suZMTVKKsLNX34EqQ7mc&#39;, &#39;name&#39;: &#39;Déjà Vu&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-03-25T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e026bc9d2d0e42cddd1c6977586&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048516bc9d2d0e42cddd1c6977586&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2736bc9d2d0e42cddd1c6977586&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;OLMT80KHROWAqjtol_XSSA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/49suZMTVKKsLNX34EqQ7mc?si=OLMT80KHROWAqjtol_XSSA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4MCOi8ZgIluCg50QR2iU1w&#39;, &#39;uri&#39;: &#39;spotify:album:4MCOi8ZgIluCg50QR2iU1w&#39;, &#39;name&#39;: &#39;UP (Kaluma Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-03-10T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e024b30c10e877142918872ad2f&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048514b30c10e877142918872ad2f&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2734b30c10e877142918872ad2f&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;1Dw-fSCeS8y8ORbfy5-HWw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4MCOi8ZgIluCg50QR2iU1w?si=1Dw-fSCeS8y8ORbfy5-HWw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;4gUM4llwsErkQQ1VqBvE2D&#39;, &#39;uri&#39;: &#39;spotify:album:4gUM4llwsErkQQ1VqBvE2D&#39;, &#39;name&#39;: &#39;UP (Arem Ozguc &amp; Arman Aydin Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-02-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e022c9c3a51bea7bc70a92a5c94&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048512c9c3a51bea7bc70a92a5c94&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2732c9c3a51bea7bc70a92a5c94&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;coXkyu5sQQ-xnuTtFz3kxg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/4gUM4llwsErkQQ1VqBvE2D?si=coXkyu5sQQ-xnuTtFz3kxg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;49D6ut4LdJCBD90wRWzfe6&#39;, &#39;uri&#39;: &#39;spotify:album:49D6ut4LdJCBD90wRWzfe6&#39;, &#39;name&#39;: &#39;Lalele&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2022, &#39;isoString&#39;: &#39;2022-01-20T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e021f43d9d7588ec1c832b8f2dc&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048511f43d9d7588ec1c832b8f2dc&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2731f43d9d7588ec1c832b8f2dc&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;eJnmQkKLRl2yhWoaHbOU6g&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/49D6ut4LdJCBD90wRWzfe6?si=eJnmQkKLRl2yhWoaHbOU6g&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;2jA1exLaHCcpHtDrGLKTmy&#39;, &#39;uri&#39;: &#39;spotify:album:2jA1exLaHCcpHtDrGLKTmy&#39;, &#39;name&#39;: &#39;UP&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-12-17T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e027bd254131ac1f8678448d076&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048517bd254131ac1f8678448d076&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2737bd254131ac1f8678448d076&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;hy3k3x_uQMC6JvzqJhDOlw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/2jA1exLaHCcpHtDrGLKTmy?si=hy3k3x_uQMC6JvzqJhDOlw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;6uvP8hlbI9X3RleKNVmBzT&#39;, &#39;uri&#39;: &#39;spotify:album:6uvP8hlbI9X3RleKNVmBzT&#39;, &#39;name&#39;: &#39;UP (Robert Cristian Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-12-03T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e021271f5f16702f3516f86579d&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048511271f5f16702f3516f86579d&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2731271f5f16702f3516f86579d&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;daNp_2sjTNysFwPNj0yZHw&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/6uvP8hlbI9X3RleKNVmBzT?si=daNp_2sjTNysFwPNj0yZHw&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;5kjggiiZEcRzFvQ4rowAsQ&#39;, &#39;uri&#39;: &#39;spotify:album:5kjggiiZEcRzFvQ4rowAsQ&#39;, &#39;name&#39;: &#39;De Dragul Tău&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-11-26T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02da7c4e91509943b3c7cf8ef4&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851da7c4e91509943b3c7cf8ef4&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273da7c4e91509943b3c7cf8ef4&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;6Z38rQNCT0yjo7C_5ziQkQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/5kjggiiZEcRzFvQ4rowAsQ?si=6Z38rQNCT0yjo7C_5ziQkQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;21x0bCve7UJ7ZAapjt8GFz&#39;, &#39;uri&#39;: &#39;spotify:album:21x0bCve7UJ7ZAapjt8GFz&#39;, &#39;name&#39;: &#39;UP&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-29T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0265f27da14d572556a8a59755&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485165f27da14d572556a8a59755&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27365f27da14d572556a8a59755&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;iy67sksRQ9-ZPdK7_CQwSg&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/21x0bCve7UJ7ZAapjt8GFz?si=iy67sksRQ9-ZPdK7_CQwSg&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3wBRVC1SMfIEdsr9thFSYJ&#39;, &#39;uri&#39;: &#39;spotify:album:3wBRVC1SMfIEdsr9thFSYJ&#39;, &#39;name&#39;: &#39;UP (Vadim Adamov &amp; Hardphol Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e0200296e006391b562e8c70563&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000485100296e006391b562e8c70563&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b27300296e006391b562e8c70563&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;KpM4AyGLTQahhva6UvC43g&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3wBRVC1SMfIEdsr9thFSYJ?si=KpM4AyGLTQahhva6UvC43g&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;605jn7Lsj6RD4ovYCsnrxe&#39;, &#39;uri&#39;: &#39;spotify:album:605jn7Lsj6RD4ovYCsnrxe&#39;, &#39;name&#39;: &#39;UP (Mert Hakan &amp; Onur Betin Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e023a3334b5c3ac49b938312f03&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d000048513a3334b5c3ac49b938312f03&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b2733a3334b5c3ac49b938312f03&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;Z-NYpJYTQ8S4gjzuOfBDLA&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/605jn7Lsj6RD4ovYCsnrxe?si=Z-NYpJYTQ8S4gjzuOfBDLA&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}, {&#39;releases&#39;: {&#39;items&#39;: [{&#39;id&#39;: &#39;3QJqG1fLaNGsgjVUroIPCT&#39;, &#39;uri&#39;: &#39;spotify:album:3QJqG1fLaNGsgjVUroIPCT&#39;, &#39;name&#39;: &#39;UP (Filatov &amp; Karas Remix)&#39;, &#39;type&#39;: &#39;SINGLE&#39;, &#39;date&#39;: {&#39;year&#39;: 2021, &#39;isoString&#39;: &#39;2021-10-28T00:00:00Z&#39;}, &#39;coverArt&#39;: {&#39;sources&#39;: [{&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00001e02d73086d4cbe065734d124185&#39;, &#39;width&#39;: 300, &#39;height&#39;: 300}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d00004851d73086d4cbe065734d124185&#39;, &#39;width&#39;: 64, &#39;height&#39;: 64}, {&#39;url&#39;: &#39;https://i.scdn.co/image/ab67616d0000b273d73086d4cbe065734d124185&#39;, &#39;width&#39;: 640, &#39;height&#39;: 640}]}, &#39;playability&#39;: {&#39;playable&#39;: True, &#39;reason&#39;: &#39;PLAYABLE&#39;}, &#39;sharingInfo&#39;: {&#39;shareId&#39;: &#39;gItuHw_cRXuXdbwvi5oLdQ&#39;, &#39;shareUrl&#39;: &#39;https://open.spotify.com/album/3QJqG1fLaNGsgjVUroIPCT?si=gItuHw_cRXuXdbwvi5oLdQ&#39;}, &#39;tracks&#39;: {&#39;totalCount&#39;: 1}}]}}]}}}}, &#39;extensions&#39;: {&#39;cacheControl&#39;: {&#39;version&#39;: 1, &#39;hints&#39;: []}}} .",
            "url": "https://f1nnc.github.io/mysite/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] i = 1 for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 1 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The letter c is the 2 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) count = 1 for i in alphabetList: if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter c is the 3 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 if i == 0: pass while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) total = menu[item] #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 3.99 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | . Errors we might encounter . Not knowing the code we need to use | Not collebrating as much as we need to | Not understanding how to code something | .",
            "url": "https://f1nnc.github.io/mysite/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Collegenotes",
            "content": "College Board Notes . These are my college board notes . . title: Skate Tricks | layout: default | toc: true | comments: true | categories: [Blog] . | . 1.1 Video . Video 1 . Computing innovations are improved through collaberation | Computing innovtion includes a program as an integral part of its function | Computing innovation can be physical or nonphysical | Diverse perspectives eliminates bias in development Video 2 . | Pair programming is when two programmers work together. The diver writes the code and the pointers makes sure every line of code is correct. | Think-pair-share is a process where a student thinks through a process alone. Then they find a parter and share their ideas with them then the class. | Comments in code help partners | Github is a great way to work together | . Quiz Result . . Hacks . Me and my partner did not know each other before coming to this class | Both of us are white | He likes Football and I like Skating as our main hobbies | We do have a lot of similariities though | We are both new to coding but have differnt skills. He understandssome code better and I understand other code better. | .",
            "url": "https://f1nnc.github.io/mysite/2022/09/19/collegenotes.html",
            "relUrl": "/2022/09/19/collegenotes.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Stress Video Notes",
            "content": "Gratitude list . My friends | My Parents | My Computer | My Home | My Skateboard | . Skating Gratitude . Skating is something I&#39;m very grateful for. It is a way to relive stress when it comes to any problem I face. It is a fun way to get exercise, and reason to go outside. With each trick I do you almost get this feeling of being proud of how far you have come. It takes alot of work to get to do any trick in skateboarding, I just feel so much better when I can hit a trick that I want to hit. It&#39;s a hobby, stress reiliver, and fun thing to do. . Goals . I want to Learn 5 new tricks by the end of the year: . I will Skate Every Day | I will watch videos about how to do tricks | I will ask advice from my friends on tricks they know already | . I want to have atleast 3 A&#39;s by the end of the tri: . I will do my hw every day | I stucture my time better for when I study | I will pay more attetion in classes I dont enjoy (World Histoy) | .",
            "url": "https://f1nnc.github.io/mysite/notebook/2022/09/15/Stress.html",
            "relUrl": "/notebook/2022/09/15/Stress.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "App Ideas",
            "content": "Brainstorm . Exercise Counter | Game | Calculator | . Calculator Idea . Use Buttons For numbers | and having a counter at the top | Have a UI that looks like a calculator | .",
            "url": "https://f1nnc.github.io/mysite/notebook/2022/09/08/Ideas.html",
            "relUrl": "/notebook/2022/09/08/Ideas.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "App Lab Notes",
            "content": "Notes . Our test is on Clash Royale | Use on event for everthing | Have the questions about triva or game facts | Use Variable to keep Score | Use the math tab to give score at the end | . Finshed Project . https://studio.code.org/projects/applab/IcRFV9_uevL48Hc1hK9LLbd1lGhj8rGvD4zg7c5FKL8 . Issues . We had to go figure out how to not have negative score | I ended up stopping it show wrong answer, because real tests dont tell you got something wrong and just let you fix it | .",
            "url": "https://f1nnc.github.io/mysite/blog/2022/09/06/AppLab.html",
            "relUrl": "/blog/2022/09/06/AppLab.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "List and Dictionary",
            "content": "InfoDb = [] InfoDb.append({ &quot;FirstName&quot;: &quot;Finn&quot;, &quot;LastName&quot;: &quot;Carpenter&quot;, &quot;DOB&quot;: &quot;December 12&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;FavColor&quot;: &quot;Blue&quot;, &quot;Email&quot;: &quot;finnc51448@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2012 Nissan Xterra&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Jake&quot;, &quot;LastName&quot;: &quot;Warren&quot;, &quot;DOB&quot;: &quot;September 8&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;FavColor&quot;: &quot;Blue&quot;, &quot;Email&quot;: &quot;jacobw22751@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2016-Toyota Tacoma&quot;] }) InfoDb.append({ &quot;FirstName&quot;: input(&quot;Name:&quot;), &quot;LastName&quot;: input(&quot;Last Name:&quot;), &quot;DOB&quot;: input(&quot;DOB:&quot;), &quot;Residence&quot;: input(&quot;Residence&quot;), &quot;FavColor&quot;: input(&quot;Favorite Color&quot;), &quot;Email&quot;: input(&quot;Email:&quot;), &quot;Owns_Cars&quot;: input(&quot;Owned_Cars:&quot;) }) print(InfoDb) . [{&#39;FirstName&#39;: &#39;Finn&#39;, &#39;LastName&#39;: &#39;Carpenter&#39;, &#39;DOB&#39;: &#39;December 12&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;FavColor&#39;: &#39;Blue&#39;, &#39;Email&#39;: &#39;finnc51448@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2012 Nissan Xterra&#39;]}, {&#39;FirstName&#39;: &#39;Jake&#39;, &#39;LastName&#39;: &#39;Warren&#39;, &#39;DOB&#39;: &#39;September 8&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;FavColor&#39;: &#39;Blue&#39;, &#39;Email&#39;: &#39;jacobw22751@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2016-Toyota Tacoma&#39;]}, {&#39;FirstName&#39;: &#39;erika&#39;, &#39;LastName&#39;: &#39;carpenter&#39;, &#39;DOB&#39;: &#39;2/16/1965&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;FavColor&#39;: &#39;orange&#39;, &#39;Email&#39;: &#39;bakecarp@aol.com&#39;, &#39;Owns_Cars&#39;: &#39;tesla&#39;}] . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;FavColor:&quot;, d_rec[&quot;FavColor&quot;]) print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars:&quot;, d_rec[&quot;Owns_Cars&quot;]) # end=&quot;&quot; make sure no return occurs print() def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Finn Carpenter Residence: San Diego FavColor: Blue Birth Day: December 12 Cars: [&#39;2012 Nissan Xterra&#39;] Jake Warren Residence: San Diego FavColor: Blue Birth Day: September 8 Cars: [&#39;2016-Toyota Tacoma&#39;] erika carpenter Residence: San Diego FavColor: orange Birth Day: 2/16/1965 Cars: tesla .",
            "url": "https://f1nnc.github.io/mysite/notebook/2022/08/29/dictionary.html",
            "relUrl": "/notebook/2022/08/29/dictionary.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Notebook Test",
            "content": "def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;2&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;What is 1+1?&quot;) . Question: What is 1+1? Answer: 2 . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;4&quot;) print(&quot;Answer: &quot; + msg) question_and_answer(&quot;What is 2+2&quot;) . Question: What is 2+2 Answer: 4 . q1 = &quot;&quot;&quot;Is the sky blue a. Yes b. No&quot;&quot;&quot; q2 = &quot;&quot;&quot;1+1 a. 2 b. 3 &quot;&quot;&quot; questions = {q1:&quot;a&quot;,q2:&quot;a&quot;} name = input(&quot;enter your name:&quot;) print(&quot;Hello&quot;, name) score = 0 for i in questions: print(i) ans = input(&quot;enter the answer: (a/b):&quot;) if ans==questions[i]: print(&quot;correct&quot;) score=score+1 print(score,&quot;point&quot;) else: print(&quot;wrong&quot;) . Hello Finn Is the sky blue a. Yes b. No correct 1 point 1+1 a. 2 b. 3 correct 2 point .",
            "url": "https://f1nnc.github.io/mysite/notebook/2022/08/25/notebookquiz.html",
            "relUrl": "/notebook/2022/08/25/notebookquiz.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Bash Check",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/finn/vscode exists. Directory /home/finn/vscode/APCSP exists. .",
            "url": "https://f1nnc.github.io/mysite/2022/08/25/bashhh.html",
            "relUrl": "/2022/08/25/bashhh.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "First",
            "content": "Skate Tricks I Know . . title: Skate Tricks | layout: default | toc: true | comments: true | categories: [Blog] . | Ollie | Pop Shuvit | Front side 180 | Manual | Boardslide | . My Deck . .",
            "url": "https://f1nnc.github.io/mysite/2022/08/24/first.html",
            "relUrl": "/2022/08/24/first.html",
            "date": " • Aug 24, 2022"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "About Me",
          "content": "My name is Finn Carpenter | I’m 15 | I like skating | I’m in APCSP | .",
          "url": "https://f1nnc.github.io/mysite/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://f1nnc.github.io/mysite/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}